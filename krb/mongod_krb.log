2020-10-02T20:37:19.294+0000 I  CONTROL  [main] Automatically disabling TLS 1.0, to force-enable TLS 1.0 specify --sslDisabledProtocols 'none'
2020-10-02T20:37:19.296+0000 W  ASIO     [main] No TransportLayer configured during NetworkInterface startup
2020-10-02T20:37:19.296+0000 D2 CONNPOOL [main] Controller for NetworkInterfaceTL-MongotExecutor is LimitController
2020-10-02T20:37:19.296+0000 D2 CONNPOOL [main] Controller for LDAP is LimitController
2020-10-02T20:37:19.303+0000 W  ASIO     [main] No TransportLayer configured during NetworkInterface startup
2020-10-02T20:37:19.303+0000 D2 CONNPOOL [main] Controller for NetworkInterfaceTL-Replication is LimitController
2020-10-02T20:37:19.303+0000 D1 NETWORK  [main] fd limit hard:4096 soft:1024 max conn: 819
2020-10-02T20:37:19.303+0000 I  CONTROL  [initandlisten] MongoDB starting : pid=23578 port=27000 dbpath=/home/bimongod/data/ 64-bit host=ip-172-16-42-253.lab.morganstanley.com
2020-10-02T20:37:19.303+0000 I  CONTROL  [initandlisten] db version v4.2.7
2020-10-02T20:37:19.303+0000 I  CONTROL  [initandlisten] git version: 51d9fe12b5d19720e72dcd7db0f2f17dd9a19212
2020-10-02T20:37:19.303+0000 I  CONTROL  [initandlisten] OpenSSL version: OpenSSL 1.0.1e-fips 11 Feb 2013
2020-10-02T20:37:19.303+0000 I  CONTROL  [initandlisten] allocator: tcmalloc
2020-10-02T20:37:19.303+0000 I  CONTROL  [initandlisten] modules: enterprise 
2020-10-02T20:37:19.303+0000 I  CONTROL  [initandlisten] build environment:
2020-10-02T20:37:19.303+0000 I  CONTROL  [initandlisten]     distmod: rhel70
2020-10-02T20:37:19.303+0000 I  CONTROL  [initandlisten]     distarch: x86_64
2020-10-02T20:37:19.303+0000 I  CONTROL  [initandlisten]     target_arch: x86_64
2020-10-02T20:37:19.303+0000 I  CONTROL  [initandlisten] options: { config: "mongod.conf", net: { bindIp: "0.0.0.0", port: 27000 }, processManagement: { pidFilePath: "/home/bimongod/mongod.pid" }, security: { authorization: "enabled", sasl: { serviceName: "bimongod" } }, setParameter: { authenticationMechanisms: "GSSAPI" }, storage: { dbPath: "/home/bimongod/data/", directoryPerDB: true, engine: "wiredTiger", wiredTiger: { engineConfig: { directoryForIndexes: true } } }, systemLog: { destination: "file", logAppend: true, path: "/home/bimongod/log/mongod_krb.log", verbosity: 4 } }
2020-10-02T20:37:19.303+0000 D1 NETWORK  [initandlisten] fd limit hard:4096 soft:1024 max conn: 819
2020-10-02T20:37:19.304+0000 D2 -        [initandlisten] Starting periodic job FlowControlRefresher
2020-10-02T20:37:19.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:37:19.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:37:19.304+0000 I  STORAGE  [initandlisten] wiredtiger_open config: create,cache_size=1352M,cache_overflow=(file_max=0M),session_max=33000,eviction=(threads_min=4,threads_max=4),config_base=false,statistics=(fast),log=(enabled=true,archive=true,path=journal,compressor=snappy),file_manager=(close_idle_time=100000,close_scan_interval=10,close_handle_minimum=250),statistics_log=(wait=0),verbose=[recovery_progress,checkpoint_progress,recovery],
2020-10-02T20:37:19.956+0000 I  STORAGE  [initandlisten] WiredTiger message [1601671039:956338][23578:0x7f4c26f9fc80], txn-recover: Recovering file:WiredTiger.wt with id 0 @ (76, 6272)
2020-10-02T20:37:19.956+0000 I  STORAGE  [initandlisten] WiredTiger message [1601671039:956393][23578:0x7f4c26f9fc80], txn-recover: Recovering log 76 through 77
2020-10-02T20:37:20.013+0000 I  STORAGE  [initandlisten] WiredTiger message [1601671040:13108][23578:0x7f4c26f9fc80], txn-recover: Recovering log 77 through 77
2020-10-02T20:37:20.101+0000 I  STORAGE  [initandlisten] WiredTiger message [1601671040:101331][23578:0x7f4c26f9fc80], txn-recover: Recovering file:WiredTigerLAS.wt with id 92 @ (1, 0)
2020-10-02T20:37:20.101+0000 I  STORAGE  [initandlisten] WiredTiger message [1601671040:101388][23578:0x7f4c26f9fc80], txn-recover: Recovering file:_mdb_catalog.wt with id 3 @ (18, 12032)
2020-10-02T20:37:20.101+0000 I  STORAGE  [initandlisten] WiredTiger message [1601671040:101403][23578:0x7f4c26f9fc80], txn-recover: Recovering file:admin/collection/0--2310914167168443545.wt with id 4 @ (7, 4864)
2020-10-02T20:37:20.101+0000 I  STORAGE  [initandlisten] WiredTiger message [1601671040:101427][23578:0x7f4c26f9fc80], txn-recover: Recovering file:admin/collection/0--732801831392209623.wt with id 17 @ (61, 5248)
2020-10-02T20:37:20.101+0000 I  STORAGE  [initandlisten] WiredTiger message [1601671040:101441][23578:0x7f4c26f9fc80], txn-recover: Recovering file:admin/index/1--2310914167168443545.wt with id 5 @ (7, 4864)
2020-10-02T20:37:20.101+0000 I  STORAGE  [initandlisten] WiredTiger message [1601671040:101454][23578:0x7f4c26f9fc80], txn-recover: Recovering file:admin/index/1--732801831392209623.wt with id 18 @ (52, 6912)
2020-10-02T20:37:20.101+0000 I  STORAGE  [initandlisten] WiredTiger message [1601671040:101466][23578:0x7f4c26f9fc80], txn-recover: Recovering file:admin/index/2--732801831392209623.wt with id 19 @ (52, 6912)
2020-10-02T20:37:20.101+0000 I  STORAGE  [initandlisten] WiredTiger message [1601671040:101479][23578:0x7f4c26f9fc80], txn-recover: Recovering file:config/collection/4--2310914167168443545.wt with id 8 @ (64, 6784)
2020-10-02T20:37:20.101+0000 I  STORAGE  [initandlisten] WiredTiger message [1601671040:101492][23578:0x7f4c26f9fc80], txn-recover: Recovering file:config/index/5--2310914167168443545.wt with id 9 @ (66, 6784)
2020-10-02T20:37:20.101+0000 I  STORAGE  [initandlisten] WiredTiger message [1601671040:101505][23578:0x7f4c26f9fc80], txn-recover: Recovering file:config/index/6--2310914167168443545.wt with id 10 @ (76, 5120)
2020-10-02T20:37:20.101+0000 I  STORAGE  [initandlisten] WiredTiger message [1601671040:101517][23578:0x7f4c26f9fc80], txn-recover: Recovering file:local/collection/2--2310914167168443545.wt with id 6 @ (76, 3584)
2020-10-02T20:37:20.101+0000 I  STORAGE  [initandlisten] WiredTiger message [1601671040:101530][23578:0x7f4c26f9fc80], txn-recover: Recovering file:local/index/3--2310914167168443545.wt with id 7 @ (76, 3584)
2020-10-02T20:37:20.101+0000 I  STORAGE  [initandlisten] WiredTiger message [1601671040:101543][23578:0x7f4c26f9fc80], txn-recover: Recovering file:movies/collection/0-5928759223889663863.wt with id 33 @ (18, 12032)
2020-10-02T20:37:20.101+0000 I  STORAGE  [initandlisten] WiredTiger message [1601671040:101556][23578:0x7f4c26f9fc80], txn-recover: Recovering file:movies/index/1-5928759223889663863.wt with id 34 @ (18, 12032)
2020-10-02T20:37:20.101+0000 I  STORAGE  [initandlisten] WiredTiger message [1601671040:101568][23578:0x7f4c26f9fc80], txn-recover: Recovering file:sizeStorer.wt with id 2 @ (76, 3584)
2020-10-02T20:37:20.101+0000 I  STORAGE  [initandlisten] WiredTiger message [1601671040:101581][23578:0x7f4c26f9fc80], txn-recover: Recovering file:test/collection/0-3817864913425832323.wt with id 21 @ (8, 8448)
2020-10-02T20:37:20.101+0000 I  STORAGE  [initandlisten] WiredTiger message [1601671040:101593][23578:0x7f4c26f9fc80], txn-recover: Recovering file:test/index/1-3817864913425832323.wt with id 22 @ (8, 8448)
2020-10-02T20:37:20.101+0000 I  STORAGE  [initandlisten] WiredTiger message [1601671040:101601][23578:0x7f4c26f9fc80], txn-recover: Main recovery loop: starting at 76/6400 to 77/256
2020-10-02T20:37:20.203+0000 I  STORAGE  [initandlisten] WiredTiger message [1601671040:203801][23578:0x7f4c26f9fc80], txn-recover: Recovering log 76 through 77
2020-10-02T20:37:20.263+0000 I  STORAGE  [initandlisten] WiredTiger message [1601671040:263000][23578:0x7f4c26f9fc80], txn-recover: Recovering log 77 through 77
2020-10-02T20:37:20.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:37:20.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:37:20.311+0000 I  STORAGE  [initandlisten] WiredTiger message [1601671040:311494][23578:0x7f4c26f9fc80], txn-recover: Set global recovery timestamp: (0, 0)
2020-10-02T20:37:20.321+0000 I  RECOVERY [initandlisten] WiredTiger recoveryTimestamp. Ts: Timestamp(0, 0)
2020-10-02T20:37:20.321+0000 D1 COMMAND  [WTIdleSessionSweeper] BackgroundJob starting: WTIdleSessionSweeper
2020-10-02T20:37:20.321+0000 D1 STORAGE  [WTIdleSessionSweeper] starting WTIdleSessionSweeper thread
2020-10-02T20:37:20.321+0000 D1 COMMAND  [WTJournalFlusher] BackgroundJob starting: WTJournalFlusher
2020-10-02T20:37:20.321+0000 D1 STORAGE  [WTJournalFlusher] starting WTJournalFlusher thread
2020-10-02T20:37:20.322+0000 D1 COMMAND  [WTCheckpointThread] BackgroundJob starting: WTCheckpointThread
2020-10-02T20:37:20.322+0000 D1 STORAGE  [WTCheckpointThread] starting WTCheckpointThread thread
2020-10-02T20:37:20.322+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:20.323+0000 D3 STORAGE  [initandlisten] WT begin_transaction for snapshot id 1
2020-10-02T20:37:20.323+0000 D2 STORAGE  [initandlisten] WiredTigerUtil::checkApplicationMetadataFormatVersion  uri: table:_mdb_catalog ok range 1 -> 1 current: 1
2020-10-02T20:37:20.323+0000 D2 STORAGE  [initandlisten] WiredTigerSizeStorer::load table:_mdb_catalog -> { numRecords: 7, dataSize: 3611 }
2020-10-02T20:37:20.323+0000 D2 RECOVERY [initandlisten] loadCatalog:
2020-10-02T20:37:20.324+0000 D2 RECOVERY [initandlisten] 	Id: RecordId(1) Value: { md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--2310914167168443545" }, ns: "admin.system.version", ident: "admin/collection/0--2310914167168443545" }
2020-10-02T20:37:20.324+0000 D2 RECOVERY [initandlisten] 	Id: RecordId(2) Value: { isFeatureDoc: true, ns: null, nonRepairable: 0, repairable: 1 }
2020-10-02T20:37:20.324+0000 D2 RECOVERY [initandlisten] 	Id: RecordId(3) Value: { md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "local/index/3--2310914167168443545" }, ns: "local.startup_log", ident: "local/collection/2--2310914167168443545" }
2020-10-02T20:37:20.324+0000 D2 RECOVERY [initandlisten] 	Id: RecordId(4) Value: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:37:20.324+0000 D2 RECOVERY [initandlisten] 	Id: RecordId(5) Value: { md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--732801831392209623", user_1_db_1: "admin/index/2--732801831392209623" }, ns: "admin.system.users", ident: "admin/collection/0--732801831392209623" }
2020-10-02T20:37:20.324+0000 D2 RECOVERY [initandlisten] 	Id: RecordId(6) Value: { md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "test/index/1-3817864913425832323" }, ns: "test.inventory", ident: "test/collection/0-3817864913425832323" }
2020-10-02T20:37:20.324+0000 D2 RECOVERY [initandlisten] 	Id: RecordId(7) Value: { md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "movies/index/1-5928759223889663863" }, ns: "movies.movies", ident: "movies/collection/0-5928759223889663863" }
2020-10-02T20:37:20.324+0000 D3 STORAGE  [initandlisten] WT rollback_transaction for snapshot id 1
2020-10-02T20:37:20.324+0000 D3 STORAGE  [initandlisten] WT begin_transaction for snapshot id 2
2020-10-02T20:37:20.324+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.users @ RecordId(5)
2020-10-02T20:37:20.324+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--732801831392209623", user_1_db_1: "admin/index/2--732801831392209623" }, ns: "admin.system.users", ident: "admin/collection/0--732801831392209623" }
2020-10-02T20:37:20.324+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.324+0000 D2 STORAGE  [initandlisten] WiredTigerUtil::checkApplicationMetadataFormatVersion  uri: table:admin/collection/0--732801831392209623 ok range 1 -> 1 current: 1
2020-10-02T20:37:20.324+0000 D2 STORAGE  [initandlisten] WiredTigerSizeStorer::load table:admin/collection/0--732801831392209623 -> { numRecords: 6, dataSize: 1901 }
2020-10-02T20:37:20.324+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.users @ RecordId(5)
2020-10-02T20:37:20.324+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--732801831392209623", user_1_db_1: "admin/index/2--732801831392209623" }, ns: "admin.system.users", ident: "admin/collection/0--732801831392209623" }
2020-10-02T20:37:20.324+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.324+0000 D1 STORAGE  [initandlisten] Registering collection admin.system.users with UUID afe8728a-bcfa-4477-b0ae-3a6884f97746
2020-10-02T20:37:20.324+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.users @ RecordId(5)
2020-10-02T20:37:20.324+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--732801831392209623", user_1_db_1: "admin/index/2--732801831392209623" }, ns: "admin.system.users", ident: "admin/collection/0--732801831392209623" }
2020-10-02T20:37:20.324+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.324+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.version @ RecordId(1)
2020-10-02T20:37:20.324+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--2310914167168443545" }, ns: "admin.system.version", ident: "admin/collection/0--2310914167168443545" }
2020-10-02T20:37:20.324+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.324+0000 D2 STORAGE  [initandlisten] WiredTigerUtil::checkApplicationMetadataFormatVersion  uri: table:admin/collection/0--2310914167168443545 ok range 1 -> 1 current: 1
2020-10-02T20:37:20.325+0000 D2 STORAGE  [initandlisten] WiredTigerSizeStorer::load table:admin/collection/0--2310914167168443545 -> { numRecords: 2, dataSize: 104 }
2020-10-02T20:37:20.325+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.version @ RecordId(1)
2020-10-02T20:37:20.325+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--2310914167168443545" }, ns: "admin.system.version", ident: "admin/collection/0--2310914167168443545" }
2020-10-02T20:37:20.325+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.325+0000 D1 STORAGE  [initandlisten] Registering collection admin.system.version with UUID 0d876cab-c7c4-40a4-90c6-c23dd6e3b179
2020-10-02T20:37:20.325+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.version @ RecordId(1)
2020-10-02T20:37:20.325+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--2310914167168443545" }, ns: "admin.system.version", ident: "admin/collection/0--2310914167168443545" }
2020-10-02T20:37:20.325+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.325+0000 D3 STORAGE  [initandlisten] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:37:20.325+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:37:20.325+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.325+0000 D2 STORAGE  [initandlisten] WiredTigerUtil::checkApplicationMetadataFormatVersion  uri: table:config/collection/4--2310914167168443545 ok range 1 -> 1 current: 1
2020-10-02T20:37:20.325+0000 D2 STORAGE  [initandlisten] WiredTigerSizeStorer::load table:config/collection/4--2310914167168443545 -> { numRecords: 0, dataSize: 0 }
2020-10-02T20:37:20.325+0000 D3 STORAGE  [initandlisten] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:37:20.325+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:37:20.325+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.325+0000 D1 STORAGE  [initandlisten] Registering collection config.system.sessions with UUID fbf72919-58ff-41f2-ba34-93b2acda7d24
2020-10-02T20:37:20.325+0000 D3 STORAGE  [initandlisten] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:37:20.325+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:37:20.325+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.325+0000 D3 STORAGE  [initandlisten] looking up metadata for: local.startup_log @ RecordId(3)
2020-10-02T20:37:20.325+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "local/index/3--2310914167168443545" }, ns: "local.startup_log", ident: "local/collection/2--2310914167168443545" }
2020-10-02T20:37:20.325+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.325+0000 D2 STORAGE  [initandlisten] WiredTigerUtil::checkApplicationMetadataFormatVersion  uri: table:local/collection/2--2310914167168443545 ok range 1 -> 1 current: 1
2020-10-02T20:37:20.325+0000 D2 STORAGE  [initandlisten] WiredTigerSizeStorer::load table:local/collection/2--2310914167168443545 -> { numRecords: 76, dataSize: 158010 }
2020-10-02T20:37:20.325+0000 D3 STORAGE  [initandlisten] looking up metadata for: local.startup_log @ RecordId(3)
2020-10-02T20:37:20.325+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "local/index/3--2310914167168443545" }, ns: "local.startup_log", ident: "local/collection/2--2310914167168443545" }
2020-10-02T20:37:20.325+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.325+0000 D1 STORAGE  [initandlisten] Registering collection local.startup_log with UUID 97fc5f31-0917-4d2e-a65c-606750d317e5
2020-10-02T20:37:20.325+0000 D3 STORAGE  [initandlisten] looking up metadata for: local.startup_log @ RecordId(3)
2020-10-02T20:37:20.325+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "local/index/3--2310914167168443545" }, ns: "local.startup_log", ident: "local/collection/2--2310914167168443545" }
2020-10-02T20:37:20.325+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.325+0000 D3 STORAGE  [initandlisten] looking up metadata for: movies.movies @ RecordId(7)
2020-10-02T20:37:20.325+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "movies/index/1-5928759223889663863" }, ns: "movies.movies", ident: "movies/collection/0-5928759223889663863" }
2020-10-02T20:37:20.325+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.325+0000 D2 STORAGE  [initandlisten] WiredTigerUtil::checkApplicationMetadataFormatVersion  uri: table:movies/collection/0-5928759223889663863 ok range 1 -> 1 current: 1
2020-10-02T20:37:20.326+0000 D2 STORAGE  [initandlisten] WiredTigerSizeStorer::load table:movies/collection/0-5928759223889663863 -> { numRecords: 3, dataSize: 128 }
2020-10-02T20:37:20.326+0000 D3 STORAGE  [initandlisten] looking up metadata for: movies.movies @ RecordId(7)
2020-10-02T20:37:20.326+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "movies/index/1-5928759223889663863" }, ns: "movies.movies", ident: "movies/collection/0-5928759223889663863" }
2020-10-02T20:37:20.326+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.326+0000 D1 STORAGE  [initandlisten] Registering collection movies.movies with UUID 77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a
2020-10-02T20:37:20.326+0000 D3 STORAGE  [initandlisten] looking up metadata for: movies.movies @ RecordId(7)
2020-10-02T20:37:20.326+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "movies/index/1-5928759223889663863" }, ns: "movies.movies", ident: "movies/collection/0-5928759223889663863" }
2020-10-02T20:37:20.326+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.326+0000 D3 STORAGE  [initandlisten] looking up metadata for: test.inventory @ RecordId(6)
2020-10-02T20:37:20.326+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "test/index/1-3817864913425832323" }, ns: "test.inventory", ident: "test/collection/0-3817864913425832323" }
2020-10-02T20:37:20.326+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.326+0000 D2 STORAGE  [initandlisten] WiredTigerUtil::checkApplicationMetadataFormatVersion  uri: table:test/collection/0-3817864913425832323 ok range 1 -> 1 current: 1
2020-10-02T20:37:20.326+0000 D2 STORAGE  [initandlisten] WiredTigerSizeStorer::load table:test/collection/0-3817864913425832323 -> { numRecords: 1, dataSize: 122 }
2020-10-02T20:37:20.326+0000 D3 STORAGE  [initandlisten] looking up metadata for: test.inventory @ RecordId(6)
2020-10-02T20:37:20.326+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "test/index/1-3817864913425832323" }, ns: "test.inventory", ident: "test/collection/0-3817864913425832323" }
2020-10-02T20:37:20.326+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.326+0000 D1 STORAGE  [initandlisten] Registering collection test.inventory with UUID 66dd6c2e-e14a-4284-a2a5-a7574ac1fd74
2020-10-02T20:37:20.326+0000 D3 STORAGE  [initandlisten] looking up metadata for: test.inventory @ RecordId(6)
2020-10-02T20:37:20.326+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "test/index/1-3817864913425832323" }, ns: "test.inventory", ident: "test/collection/0-3817864913425832323" }
2020-10-02T20:37:20.326+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.326+0000 D3 STORAGE  [initandlisten] WT rollback_transaction for snapshot id 2
2020-10-02T20:37:20.326+0000 I  STORAGE  [initandlisten] Timestamp monitor starting
2020-10-02T20:37:20.326+0000 D2 -        [initandlisten] Starting periodic job TimestampMonitor
2020-10-02T20:37:20.327+0000 D1 STORAGE  [initandlisten] flushing directory /home/bimongod/data
2020-10-02T20:37:20.328+0000 I  CONTROL  [initandlisten] 
2020-10-02T20:37:20.328+0000 I  CONTROL  [initandlisten] ** WARNING: /sys/kernel/mm/transparent_hugepage/enabled is 'always'.
2020-10-02T20:37:20.328+0000 I  CONTROL  [initandlisten] **        We suggest setting it to 'never'
2020-10-02T20:37:20.328+0000 I  CONTROL  [initandlisten] 
2020-10-02T20:37:20.328+0000 I  CONTROL  [initandlisten] ** WARNING: /sys/kernel/mm/transparent_hugepage/defrag is 'always'.
2020-10-02T20:37:20.328+0000 I  CONTROL  [initandlisten] **        We suggest setting it to 'never'
2020-10-02T20:37:20.328+0000 I  CONTROL  [initandlisten] 
2020-10-02T20:37:20.328+0000 D1 COMMAND  [SNMPAgent] BackgroundJob starting: SNMPAgent
2020-10-02T20:37:20.328+0000 D1 NETWORK  [SNMPAgent] SNMPAgent not enabled
2020-10-02T20:37:20.328+0000 D3 STORAGE  [initandlisten] WT begin_transaction for snapshot id 4
2020-10-02T20:37:20.328+0000 D2 RECOVERY [initandlisten] Reconciling collection and index idents.
2020-10-02T20:37:20.328+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.users @ RecordId(5)
2020-10-02T20:37:20.328+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--732801831392209623", user_1_db_1: "admin/index/2--732801831392209623" }, ns: "admin.system.users", ident: "admin/collection/0--732801831392209623" }
2020-10-02T20:37:20.329+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.329+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.users @ RecordId(5)
2020-10-02T20:37:20.329+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.users @ RecordId(5)
2020-10-02T20:37:20.329+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.version @ RecordId(1)
2020-10-02T20:37:20.329+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--2310914167168443545" }, ns: "admin.system.version", ident: "admin/collection/0--2310914167168443545" }
2020-10-02T20:37:20.329+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.329+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.version @ RecordId(1)
2020-10-02T20:37:20.329+0000 D3 STORAGE  [initandlisten] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:37:20.329+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:37:20.329+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.329+0000 D3 STORAGE  [initandlisten] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:37:20.329+0000 D3 STORAGE  [initandlisten] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:37:20.329+0000 D3 STORAGE  [initandlisten] looking up metadata for: local.startup_log @ RecordId(3)
2020-10-02T20:37:20.329+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "local/index/3--2310914167168443545" }, ns: "local.startup_log", ident: "local/collection/2--2310914167168443545" }
2020-10-02T20:37:20.329+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.329+0000 D3 STORAGE  [initandlisten] looking up metadata for: local.startup_log @ RecordId(3)
2020-10-02T20:37:20.329+0000 D3 STORAGE  [initandlisten] looking up metadata for: movies.movies @ RecordId(7)
2020-10-02T20:37:20.329+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "movies/index/1-5928759223889663863" }, ns: "movies.movies", ident: "movies/collection/0-5928759223889663863" }
2020-10-02T20:37:20.329+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.329+0000 D3 STORAGE  [initandlisten] looking up metadata for: movies.movies @ RecordId(7)
2020-10-02T20:37:20.329+0000 D3 STORAGE  [initandlisten] looking up metadata for: test.inventory @ RecordId(6)
2020-10-02T20:37:20.329+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "test/index/1-3817864913425832323" }, ns: "test.inventory", ident: "test/collection/0-3817864913425832323" }
2020-10-02T20:37:20.329+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.329+0000 D3 STORAGE  [initandlisten] looking up metadata for: test.inventory @ RecordId(6)
2020-10-02T20:37:20.329+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.version @ RecordId(1)
2020-10-02T20:37:20.329+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--2310914167168443545" }, ns: "admin.system.version", ident: "admin/collection/0--2310914167168443545" }
2020-10-02T20:37:20.329+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.329+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.version @ RecordId(1)
2020-10-02T20:37:20.329+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--2310914167168443545" }, ns: "admin.system.version", ident: "admin/collection/0--2310914167168443545" }
2020-10-02T20:37:20.329+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.329+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.version @ RecordId(1)
2020-10-02T20:37:20.329+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--2310914167168443545" }, ns: "admin.system.version", ident: "admin/collection/0--2310914167168443545" }
2020-10-02T20:37:20.329+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.329+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.version @ RecordId(1)
2020-10-02T20:37:20.329+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--2310914167168443545" }, ns: "admin.system.version", ident: "admin/collection/0--2310914167168443545" }
2020-10-02T20:37:20.329+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.329+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.version @ RecordId(1)
2020-10-02T20:37:20.329+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--2310914167168443545" }, ns: "admin.system.version", ident: "admin/collection/0--2310914167168443545" }
2020-10-02T20:37:20.329+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.329+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.version @ RecordId(1)
2020-10-02T20:37:20.329+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--2310914167168443545" }, ns: "admin.system.version", ident: "admin/collection/0--2310914167168443545" }
2020-10-02T20:37:20.329+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.329+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.version @ RecordId(1)
2020-10-02T20:37:20.329+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--2310914167168443545" }, ns: "admin.system.version", ident: "admin/collection/0--2310914167168443545" }
2020-10-02T20:37:20.329+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.329+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.version @ RecordId(1)
2020-10-02T20:37:20.329+0000 D2 STORAGE  [initandlisten] WiredTigerUtil::checkApplicationMetadataFormatVersion  uri: table:admin/index/1--2310914167168443545 ok range 6 -> 12 current: 8
2020-10-02T20:37:20.329+0000 D1 STORAGE  [initandlisten] admin.system.version: clearing plan cache - collection info cache reset
2020-10-02T20:37:20.329+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.users @ RecordId(5)
2020-10-02T20:37:20.329+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--732801831392209623", user_1_db_1: "admin/index/2--732801831392209623" }, ns: "admin.system.users", ident: "admin/collection/0--732801831392209623" }
2020-10-02T20:37:20.329+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.329+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.users @ RecordId(5)
2020-10-02T20:37:20.329+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--732801831392209623", user_1_db_1: "admin/index/2--732801831392209623" }, ns: "admin.system.users", ident: "admin/collection/0--732801831392209623" }
2020-10-02T20:37:20.329+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.329+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.users @ RecordId(5)
2020-10-02T20:37:20.329+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--732801831392209623", user_1_db_1: "admin/index/2--732801831392209623" }, ns: "admin.system.users", ident: "admin/collection/0--732801831392209623" }
2020-10-02T20:37:20.329+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.329+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.users @ RecordId(5)
2020-10-02T20:37:20.329+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--732801831392209623", user_1_db_1: "admin/index/2--732801831392209623" }, ns: "admin.system.users", ident: "admin/collection/0--732801831392209623" }
2020-10-02T20:37:20.329+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.329+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.users @ RecordId(5)
2020-10-02T20:37:20.329+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--732801831392209623", user_1_db_1: "admin/index/2--732801831392209623" }, ns: "admin.system.users", ident: "admin/collection/0--732801831392209623" }
2020-10-02T20:37:20.329+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.329+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.users @ RecordId(5)
2020-10-02T20:37:20.329+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--732801831392209623", user_1_db_1: "admin/index/2--732801831392209623" }, ns: "admin.system.users", ident: "admin/collection/0--732801831392209623" }
2020-10-02T20:37:20.329+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.329+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.users @ RecordId(5)
2020-10-02T20:37:20.329+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--732801831392209623", user_1_db_1: "admin/index/2--732801831392209623" }, ns: "admin.system.users", ident: "admin/collection/0--732801831392209623" }
2020-10-02T20:37:20.329+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.329+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.users @ RecordId(5)
2020-10-02T20:37:20.329+0000 D2 STORAGE  [initandlisten] WiredTigerUtil::checkApplicationMetadataFormatVersion  uri: table:admin/index/1--732801831392209623 ok range 6 -> 12 current: 8
2020-10-02T20:37:20.330+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.users @ RecordId(5)
2020-10-02T20:37:20.330+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--732801831392209623", user_1_db_1: "admin/index/2--732801831392209623" }, ns: "admin.system.users", ident: "admin/collection/0--732801831392209623" }
2020-10-02T20:37:20.330+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.330+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.users @ RecordId(5)
2020-10-02T20:37:20.330+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--732801831392209623", user_1_db_1: "admin/index/2--732801831392209623" }, ns: "admin.system.users", ident: "admin/collection/0--732801831392209623" }
2020-10-02T20:37:20.330+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.330+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.users @ RecordId(5)
2020-10-02T20:37:20.330+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--732801831392209623", user_1_db_1: "admin/index/2--732801831392209623" }, ns: "admin.system.users", ident: "admin/collection/0--732801831392209623" }
2020-10-02T20:37:20.330+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.330+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.users @ RecordId(5)
2020-10-02T20:37:20.330+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--732801831392209623", user_1_db_1: "admin/index/2--732801831392209623" }, ns: "admin.system.users", ident: "admin/collection/0--732801831392209623" }
2020-10-02T20:37:20.330+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.330+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.users @ RecordId(5)
2020-10-02T20:37:20.330+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--732801831392209623", user_1_db_1: "admin/index/2--732801831392209623" }, ns: "admin.system.users", ident: "admin/collection/0--732801831392209623" }
2020-10-02T20:37:20.330+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.330+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.users @ RecordId(5)
2020-10-02T20:37:20.330+0000 D2 STORAGE  [initandlisten] WiredTigerUtil::checkApplicationMetadataFormatVersion  uri: table:admin/index/2--732801831392209623 ok range 6 -> 12 current: 12
2020-10-02T20:37:20.330+0000 D1 STORAGE  [initandlisten] admin.system.users: clearing plan cache - collection info cache reset
2020-10-02T20:37:20.330+0000 D1 -        [initandlisten] reloading view catalog for database admin
2020-10-02T20:37:20.330+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.version @ RecordId(1)
2020-10-02T20:37:20.330+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--2310914167168443545" }, ns: "admin.system.version", ident: "admin/collection/0--2310914167168443545" }
2020-10-02T20:37:20.330+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.330+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.version @ RecordId(1)
2020-10-02T20:37:20.330+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--2310914167168443545" }, ns: "admin.system.version", ident: "admin/collection/0--2310914167168443545" }
2020-10-02T20:37:20.330+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.330+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.version @ RecordId(1)
2020-10-02T20:37:20.330+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--2310914167168443545" }, ns: "admin.system.version", ident: "admin/collection/0--2310914167168443545" }
2020-10-02T20:37:20.330+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.330+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.users @ RecordId(5)
2020-10-02T20:37:20.330+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--732801831392209623", user_1_db_1: "admin/index/2--732801831392209623" }, ns: "admin.system.users", ident: "admin/collection/0--732801831392209623" }
2020-10-02T20:37:20.330+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.330+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.users @ RecordId(5)
2020-10-02T20:37:20.330+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--732801831392209623", user_1_db_1: "admin/index/2--732801831392209623" }, ns: "admin.system.users", ident: "admin/collection/0--732801831392209623" }
2020-10-02T20:37:20.330+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.330+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.users @ RecordId(5)
2020-10-02T20:37:20.330+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--732801831392209623", user_1_db_1: "admin/index/2--732801831392209623" }, ns: "admin.system.users", ident: "admin/collection/0--732801831392209623" }
2020-10-02T20:37:20.330+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.330+0000 D3 STORAGE  [initandlisten] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:37:20.330+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:37:20.330+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.330+0000 D3 STORAGE  [initandlisten] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:37:20.330+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:37:20.330+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.330+0000 D3 STORAGE  [initandlisten] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:37:20.330+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:37:20.330+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.330+0000 D3 STORAGE  [initandlisten] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:37:20.330+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:37:20.330+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.330+0000 D3 STORAGE  [initandlisten] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:37:20.330+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:37:20.330+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.330+0000 D3 STORAGE  [initandlisten] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:37:20.330+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:37:20.330+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.330+0000 D3 STORAGE  [initandlisten] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:37:20.330+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:37:20.330+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.330+0000 D3 STORAGE  [initandlisten] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:37:20.330+0000 D2 STORAGE  [initandlisten] WiredTigerUtil::checkApplicationMetadataFormatVersion  uri: table:config/index/5--2310914167168443545 ok range 6 -> 12 current: 8
2020-10-02T20:37:20.330+0000 D3 STORAGE  [initandlisten] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:37:20.331+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:37:20.331+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.331+0000 D3 STORAGE  [initandlisten] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:37:20.331+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:37:20.331+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.331+0000 D3 STORAGE  [initandlisten] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:37:20.331+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:37:20.331+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.331+0000 D3 STORAGE  [initandlisten] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:37:20.331+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:37:20.331+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.331+0000 D3 STORAGE  [initandlisten] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:37:20.331+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:37:20.331+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.331+0000 D3 STORAGE  [initandlisten] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:37:20.331+0000 D2 STORAGE  [initandlisten] WiredTigerUtil::checkApplicationMetadataFormatVersion  uri: table:config/index/6--2310914167168443545 ok range 6 -> 12 current: 8
2020-10-02T20:37:20.331+0000 D1 STORAGE  [initandlisten] config.system.sessions: clearing plan cache - collection info cache reset
2020-10-02T20:37:20.331+0000 D1 -        [initandlisten] reloading view catalog for database config
2020-10-02T20:37:20.331+0000 D3 STORAGE  [initandlisten] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:37:20.331+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:37:20.331+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.331+0000 D3 STORAGE  [initandlisten] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:37:20.331+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:37:20.331+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.331+0000 D3 STORAGE  [initandlisten] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:37:20.331+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:37:20.331+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.331+0000 D3 STORAGE  [initandlisten] looking up metadata for: local.startup_log @ RecordId(3)
2020-10-02T20:37:20.331+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "local/index/3--2310914167168443545" }, ns: "local.startup_log", ident: "local/collection/2--2310914167168443545" }
2020-10-02T20:37:20.331+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.331+0000 D3 STORAGE  [initandlisten] looking up metadata for: local.startup_log @ RecordId(3)
2020-10-02T20:37:20.331+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "local/index/3--2310914167168443545" }, ns: "local.startup_log", ident: "local/collection/2--2310914167168443545" }
2020-10-02T20:37:20.331+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.331+0000 D3 STORAGE  [initandlisten] looking up metadata for: local.startup_log @ RecordId(3)
2020-10-02T20:37:20.331+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "local/index/3--2310914167168443545" }, ns: "local.startup_log", ident: "local/collection/2--2310914167168443545" }
2020-10-02T20:37:20.331+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.331+0000 D3 STORAGE  [initandlisten] looking up metadata for: local.startup_log @ RecordId(3)
2020-10-02T20:37:20.331+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "local/index/3--2310914167168443545" }, ns: "local.startup_log", ident: "local/collection/2--2310914167168443545" }
2020-10-02T20:37:20.331+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.331+0000 D3 STORAGE  [initandlisten] looking up metadata for: local.startup_log @ RecordId(3)
2020-10-02T20:37:20.331+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "local/index/3--2310914167168443545" }, ns: "local.startup_log", ident: "local/collection/2--2310914167168443545" }
2020-10-02T20:37:20.331+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.331+0000 D3 STORAGE  [initandlisten] looking up metadata for: local.startup_log @ RecordId(3)
2020-10-02T20:37:20.331+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "local/index/3--2310914167168443545" }, ns: "local.startup_log", ident: "local/collection/2--2310914167168443545" }
2020-10-02T20:37:20.331+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.331+0000 D3 STORAGE  [initandlisten] looking up metadata for: local.startup_log @ RecordId(3)
2020-10-02T20:37:20.331+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "local/index/3--2310914167168443545" }, ns: "local.startup_log", ident: "local/collection/2--2310914167168443545" }
2020-10-02T20:37:20.331+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.331+0000 D3 STORAGE  [initandlisten] looking up metadata for: local.startup_log @ RecordId(3)
2020-10-02T20:37:20.331+0000 D2 STORAGE  [initandlisten] WiredTigerUtil::checkApplicationMetadataFormatVersion  uri: table:local/index/3--2310914167168443545 ok range 6 -> 12 current: 8
2020-10-02T20:37:20.331+0000 D1 STORAGE  [initandlisten] local.startup_log: clearing plan cache - collection info cache reset
2020-10-02T20:37:20.331+0000 D1 -        [initandlisten] reloading view catalog for database local
2020-10-02T20:37:20.331+0000 D3 STORAGE  [initandlisten] looking up metadata for: local.startup_log @ RecordId(3)
2020-10-02T20:37:20.331+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "local/index/3--2310914167168443545" }, ns: "local.startup_log", ident: "local/collection/2--2310914167168443545" }
2020-10-02T20:37:20.331+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.331+0000 D3 STORAGE  [initandlisten] looking up metadata for: movies.movies @ RecordId(7)
2020-10-02T20:37:20.331+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "movies/index/1-5928759223889663863" }, ns: "movies.movies", ident: "movies/collection/0-5928759223889663863" }
2020-10-02T20:37:20.331+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.331+0000 D3 STORAGE  [initandlisten] looking up metadata for: movies.movies @ RecordId(7)
2020-10-02T20:37:20.331+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "movies/index/1-5928759223889663863" }, ns: "movies.movies", ident: "movies/collection/0-5928759223889663863" }
2020-10-02T20:37:20.331+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.331+0000 D3 STORAGE  [initandlisten] looking up metadata for: movies.movies @ RecordId(7)
2020-10-02T20:37:20.331+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "movies/index/1-5928759223889663863" }, ns: "movies.movies", ident: "movies/collection/0-5928759223889663863" }
2020-10-02T20:37:20.331+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.331+0000 D3 STORAGE  [initandlisten] looking up metadata for: movies.movies @ RecordId(7)
2020-10-02T20:37:20.331+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "movies/index/1-5928759223889663863" }, ns: "movies.movies", ident: "movies/collection/0-5928759223889663863" }
2020-10-02T20:37:20.331+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.331+0000 D3 STORAGE  [initandlisten] looking up metadata for: movies.movies @ RecordId(7)
2020-10-02T20:37:20.331+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "movies/index/1-5928759223889663863" }, ns: "movies.movies", ident: "movies/collection/0-5928759223889663863" }
2020-10-02T20:37:20.331+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.331+0000 D3 STORAGE  [initandlisten] looking up metadata for: movies.movies @ RecordId(7)
2020-10-02T20:37:20.331+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "movies/index/1-5928759223889663863" }, ns: "movies.movies", ident: "movies/collection/0-5928759223889663863" }
2020-10-02T20:37:20.331+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.331+0000 D3 STORAGE  [initandlisten] looking up metadata for: movies.movies @ RecordId(7)
2020-10-02T20:37:20.331+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "movies/index/1-5928759223889663863" }, ns: "movies.movies", ident: "movies/collection/0-5928759223889663863" }
2020-10-02T20:37:20.332+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.332+0000 D3 STORAGE  [initandlisten] looking up metadata for: movies.movies @ RecordId(7)
2020-10-02T20:37:20.332+0000 D2 STORAGE  [initandlisten] WiredTigerUtil::checkApplicationMetadataFormatVersion  uri: table:movies/index/1-5928759223889663863 ok range 6 -> 12 current: 8
2020-10-02T20:37:20.332+0000 D1 STORAGE  [initandlisten] movies.movies: clearing plan cache - collection info cache reset
2020-10-02T20:37:20.332+0000 D1 -        [initandlisten] reloading view catalog for database movies
2020-10-02T20:37:20.332+0000 D3 STORAGE  [initandlisten] looking up metadata for: movies.movies @ RecordId(7)
2020-10-02T20:37:20.332+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "movies/index/1-5928759223889663863" }, ns: "movies.movies", ident: "movies/collection/0-5928759223889663863" }
2020-10-02T20:37:20.332+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.332+0000 D3 STORAGE  [initandlisten] looking up metadata for: movies.movies @ RecordId(7)
2020-10-02T20:37:20.332+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "movies/index/1-5928759223889663863" }, ns: "movies.movies", ident: "movies/collection/0-5928759223889663863" }
2020-10-02T20:37:20.332+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.332+0000 D3 STORAGE  [initandlisten] looking up metadata for: movies.movies @ RecordId(7)
2020-10-02T20:37:20.332+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "movies/index/1-5928759223889663863" }, ns: "movies.movies", ident: "movies/collection/0-5928759223889663863" }
2020-10-02T20:37:20.332+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.332+0000 D3 STORAGE  [initandlisten] looking up metadata for: test.inventory @ RecordId(6)
2020-10-02T20:37:20.332+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "test/index/1-3817864913425832323" }, ns: "test.inventory", ident: "test/collection/0-3817864913425832323" }
2020-10-02T20:37:20.332+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.332+0000 D3 STORAGE  [initandlisten] looking up metadata for: test.inventory @ RecordId(6)
2020-10-02T20:37:20.332+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "test/index/1-3817864913425832323" }, ns: "test.inventory", ident: "test/collection/0-3817864913425832323" }
2020-10-02T20:37:20.332+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.332+0000 D3 STORAGE  [initandlisten] looking up metadata for: test.inventory @ RecordId(6)
2020-10-02T20:37:20.332+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "test/index/1-3817864913425832323" }, ns: "test.inventory", ident: "test/collection/0-3817864913425832323" }
2020-10-02T20:37:20.332+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.332+0000 D3 STORAGE  [initandlisten] looking up metadata for: test.inventory @ RecordId(6)
2020-10-02T20:37:20.332+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "test/index/1-3817864913425832323" }, ns: "test.inventory", ident: "test/collection/0-3817864913425832323" }
2020-10-02T20:37:20.332+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.332+0000 D3 STORAGE  [initandlisten] looking up metadata for: test.inventory @ RecordId(6)
2020-10-02T20:37:20.332+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "test/index/1-3817864913425832323" }, ns: "test.inventory", ident: "test/collection/0-3817864913425832323" }
2020-10-02T20:37:20.332+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.332+0000 D3 STORAGE  [initandlisten] looking up metadata for: test.inventory @ RecordId(6)
2020-10-02T20:37:20.332+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "test/index/1-3817864913425832323" }, ns: "test.inventory", ident: "test/collection/0-3817864913425832323" }
2020-10-02T20:37:20.332+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.332+0000 D3 STORAGE  [initandlisten] looking up metadata for: test.inventory @ RecordId(6)
2020-10-02T20:37:20.332+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "test/index/1-3817864913425832323" }, ns: "test.inventory", ident: "test/collection/0-3817864913425832323" }
2020-10-02T20:37:20.332+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.332+0000 D3 STORAGE  [initandlisten] looking up metadata for: test.inventory @ RecordId(6)
2020-10-02T20:37:20.332+0000 D2 STORAGE  [initandlisten] WiredTigerUtil::checkApplicationMetadataFormatVersion  uri: table:test/index/1-3817864913425832323 ok range 6 -> 12 current: 8
2020-10-02T20:37:20.332+0000 D1 STORAGE  [initandlisten] test.inventory: clearing plan cache - collection info cache reset
2020-10-02T20:37:20.332+0000 D1 -        [initandlisten] reloading view catalog for database test
2020-10-02T20:37:20.332+0000 D3 STORAGE  [initandlisten] looking up metadata for: test.inventory @ RecordId(6)
2020-10-02T20:37:20.332+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "test/index/1-3817864913425832323" }, ns: "test.inventory", ident: "test/collection/0-3817864913425832323" }
2020-10-02T20:37:20.332+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.332+0000 D3 STORAGE  [initandlisten] looking up metadata for: test.inventory @ RecordId(6)
2020-10-02T20:37:20.332+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "test/index/1-3817864913425832323" }, ns: "test.inventory", ident: "test/collection/0-3817864913425832323" }
2020-10-02T20:37:20.332+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.332+0000 D3 STORAGE  [initandlisten] looking up metadata for: test.inventory @ RecordId(6)
2020-10-02T20:37:20.332+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "test/index/1-3817864913425832323" }, ns: "test.inventory", ident: "test/collection/0-3817864913425832323" }
2020-10-02T20:37:20.332+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.332+0000 D2 CONNPOOL [initandlisten] Controller for NetworkInterfaceTL-CollectionRangeDeleter-TaskExecutor is LimitController
2020-10-02T20:37:20.332+0000 I  SHARDING [initandlisten] Marking collection local.system.replset as collection version: <unsharded>
2020-10-02T20:37:20.332+0000 D2 ASIO     [CollectionRangeDeleter-TaskExecutor] The NetworkInterfaceTL reactor thread is spinning up
2020-10-02T20:37:20.332+0000 D1 STORAGE  [initandlisten]     Recovering database: admin
2020-10-02T20:37:20.333+0000 D2 QUERY    [initandlisten] Using idhack: ns: admin.system.version query: { _id: "featureCompatibilityVersion" } sort: {} projection: {}
2020-10-02T20:37:20.334+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.version @ RecordId(1)
2020-10-02T20:37:20.334+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--2310914167168443545" }, ns: "admin.system.version", ident: "admin/collection/0--2310914167168443545" }
2020-10-02T20:37:20.334+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.334+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.users @ RecordId(5)
2020-10-02T20:37:20.334+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--732801831392209623", user_1_db_1: "admin/index/2--732801831392209623" }, ns: "admin.system.users", ident: "admin/collection/0--732801831392209623" }
2020-10-02T20:37:20.334+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.334+0000 D1 STORAGE  [initandlisten]     Recovering database: config
2020-10-02T20:37:20.334+0000 D3 STORAGE  [initandlisten] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:37:20.334+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:37:20.334+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.334+0000 D1 STORAGE  [initandlisten]     Recovering database: local
2020-10-02T20:37:20.334+0000 D3 STORAGE  [initandlisten] looking up metadata for: local.startup_log @ RecordId(3)
2020-10-02T20:37:20.334+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "local/index/3--2310914167168443545" }, ns: "local.startup_log", ident: "local/collection/2--2310914167168443545" }
2020-10-02T20:37:20.334+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.334+0000 D1 STORAGE  [initandlisten]     Recovering database: movies
2020-10-02T20:37:20.334+0000 D3 STORAGE  [initandlisten] looking up metadata for: movies.movies @ RecordId(7)
2020-10-02T20:37:20.334+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "movies/index/1-5928759223889663863" }, ns: "movies.movies", ident: "movies/collection/0-5928759223889663863" }
2020-10-02T20:37:20.334+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.334+0000 D1 STORAGE  [initandlisten]     Recovering database: test
2020-10-02T20:37:20.334+0000 D3 STORAGE  [initandlisten] looking up metadata for: test.inventory @ RecordId(6)
2020-10-02T20:37:20.334+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "test/index/1-3817864913425832323" }, ns: "test.inventory", ident: "test/collection/0-3817864913425832323" }
2020-10-02T20:37:20.334+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.334+0000 D3 REPL     [initandlisten] No min valid document found, returning initial sync flag value of false.
2020-10-02T20:37:20.334+0000 D1 STORAGE  [initandlisten] done repairDatabases
2020-10-02T20:37:20.334+0000 D3 STORAGE  [initandlisten] WT rollback_transaction for snapshot id 4
2020-10-02T20:37:20.334+0000 D3 REPL     [initandlisten] No min valid document found, returning initial sync flag value of false.
2020-10-02T20:37:20.334+0000 I  STORAGE  [initandlisten] Flow Control is enabled on this deployment.
2020-10-02T20:37:20.334+0000 D2 COMMAND  [initandlisten] run command admin.$cmd { find: "system.roles", $db: "admin" }
2020-10-02T20:37:20.334+0000 I  SHARDING [initandlisten] Marking collection admin.system.roles as collection version: <unsharded>
2020-10-02T20:37:20.334+0000 D2 QUERY    [initandlisten] Collection admin.system.roles does not exist. Using EOF plan: ns: admin.system.roles query: {} sort: {} projection: {}
2020-10-02T20:37:20.334+0000 I  COMMAND  [initandlisten] command admin.system.roles command: find { find: "system.roles", $db: "admin" } planSummary: EOF keysExamined:0 docsExamined:0 cursorExhausted:1 numYields:0 nreturned:0 reslen:107 locks:{ ReplicationStateTransition: { acquireCount: { w: 1 } }, Global: { acquireCount: { r: 1 } }, Database: { acquireCount: { r: 1 } }, Collection: { acquireCount: { r: 2 } }, Mutex: { acquireCount: { r: 1 } } } storage:{ data: { bytesRead: 343, timeReadingMicros: 4 } } protocol:op_msg 0ms
2020-10-02T20:37:20.334+0000 D1 ACCESS   [initandlisten] There were no users to pin, not starting tracker thread
2020-10-02T20:37:20.334+0000 D2 ACCESS   [initandlisten] Invalidating user cache
2020-10-02T20:37:20.334+0000 D4 -        [initandlisten] Taking ticket. Available: 1000000000
2020-10-02T20:37:20.334+0000 I  SHARDING [initandlisten] Marking collection admin.system.version as collection version: <unsharded>
2020-10-02T20:37:20.334+0000 D2 QUERY    [initandlisten] Using idhack: ns: admin.system.version query: { _id: "authSchema" } sort: {} projection: {}
2020-10-02T20:37:20.334+0000 D3 STORAGE  [initandlisten] WT begin_transaction for snapshot id 5
2020-10-02T20:37:20.334+0000 D3 STORAGE  [initandlisten] WT rollback_transaction for snapshot id 5
2020-10-02T20:37:20.334+0000 D2 QUERY    [initandlisten] Using idhack: ns: admin.system.version query: { _id: "shardIdentity" } sort: {} projection: {}
2020-10-02T20:37:20.334+0000 D3 STORAGE  [initandlisten] WT begin_transaction for snapshot id 6
2020-10-02T20:37:20.334+0000 D3 STORAGE  [initandlisten] WT rollback_transaction for snapshot id 6
2020-10-02T20:37:20.334+0000 D3 STORAGE  [initandlisten] WT begin_transaction for snapshot id 8
2020-10-02T20:37:20.335+0000 D2 STORAGE  [initandlisten] WiredTigerSizeStorer::store Marking table:local/collection/2--2310914167168443545 dirty, numRecords: 77, dataSize: 160145, use_count: 3
2020-10-02T20:37:20.335+0000 I  SHARDING [initandlisten] Marking collection local.startup_log as collection version: <unsharded>
2020-10-02T20:37:20.335+0000 D3 STORAGE  [initandlisten] WT commit_transaction for snapshot id 8
2020-10-02T20:37:20.336+0000 I  FTDC     [initandlisten] Initializing full-time diagnostic data capture with directory '/home/bimongod/data/diagnostic.data'
2020-10-02T20:37:20.336+0000 D1 COMMAND  [TTLMonitor] BackgroundJob starting: TTLMonitor
2020-10-02T20:37:20.336+0000 D1 COMMAND  [ClientCursorMonitor] BackgroundJob starting: ClientCursorMonitor
2020-10-02T20:37:20.336+0000 D1 COMMAND  [PeriodicTaskRunner] BackgroundJob starting: PeriodicTaskRunner
2020-10-02T20:37:20.336+0000 D2 -        [initandlisten] Starting periodic job abortExpiredTransactions
2020-10-02T20:37:20.336+0000 D2 -        [initandlisten] Starting periodic job startPeriodicThreadToDecreaseSnapshotHistoryCachePressure
2020-10-02T20:37:20.336+0000 D2 WRITE    [abortExpiredTransactions] Beginning scanSessions. Scanning 0 sessions.
2020-10-02T20:37:20.336+0000 D2 -        [initandlisten] Starting periodic job LogicalSessionCacheRefresh
2020-10-02T20:37:20.337+0000 D2 COMMAND  [LogicalSessionCacheRefresh] run command config.$cmd { listIndexes: "system.sessions", cursor: {}, $db: "config" }
2020-10-02T20:37:20.337+0000 I  SHARDING [LogicalSessionCacheRefresh] Marking collection config.system.sessions as collection version: <unsharded>
2020-10-02T20:37:20.337+0000 D3 STORAGE  [LogicalSessionCacheRefresh] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:37:20.337+0000 D3 STORAGE  [LogicalSessionCacheRefresh] WT begin_transaction for snapshot id 13
2020-10-02T20:37:20.337+0000 D3 STORAGE  [LogicalSessionCacheRefresh]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:37:20.337+0000 D3 STORAGE  [LogicalSessionCacheRefresh] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.337+0000 D3 STORAGE  [LogicalSessionCacheRefresh] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:37:20.337+0000 D3 STORAGE  [LogicalSessionCacheRefresh]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:37:20.337+0000 D3 STORAGE  [LogicalSessionCacheRefresh] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.337+0000 D3 STORAGE  [LogicalSessionCacheRefresh] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:37:20.337+0000 D3 STORAGE  [LogicalSessionCacheRefresh]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:37:20.337+0000 D3 STORAGE  [LogicalSessionCacheRefresh] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.337+0000 D3 STORAGE  [LogicalSessionCacheRefresh] WT rollback_transaction for snapshot id 13
2020-10-02T20:37:20.337+0000 I  COMMAND  [LogicalSessionCacheRefresh] command config.system.sessions command: listIndexes { listIndexes: "system.sessions", cursor: {}, $db: "config" } numYields:0 reslen:307 locks:{ ReplicationStateTransition: { acquireCount: { w: 1 } }, Global: { acquireCount: { r: 1 } }, Database: { acquireCount: { r: 1 } }, Collection: { acquireCount: { r: 1 } }, Mutex: { acquireCount: { r: 1 } } } storage:{} protocol:op_msg 0ms
2020-10-02T20:37:20.337+0000 D2 -        [initandlisten] Starting periodic job LogicalSessionCacheReap
2020-10-02T20:37:20.337+0000 D2 COMMAND  [LogicalSessionCacheReap] run command config.$cmd { listIndexes: "system.sessions", cursor: {}, $db: "config" }
2020-10-02T20:37:20.337+0000 D3 STORAGE  [LogicalSessionCacheReap] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:37:20.337+0000 D3 STORAGE  [LogicalSessionCacheReap] WT begin_transaction for snapshot id 15
2020-10-02T20:37:20.337+0000 D3 STORAGE  [LogicalSessionCacheReap]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:37:20.337+0000 D3 STORAGE  [LogicalSessionCacheReap] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.337+0000 D3 STORAGE  [LogicalSessionCacheReap] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:37:20.337+0000 D3 STORAGE  [LogicalSessionCacheReap]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:37:20.337+0000 D3 STORAGE  [LogicalSessionCacheReap] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.337+0000 I  NETWORK  [listener] Listening on /tmp/mongodb-27000.sock
2020-10-02T20:37:20.337+0000 D3 STORAGE  [LogicalSessionCacheReap] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:37:20.337+0000 I  NETWORK  [listener] Listening on 0.0.0.0
2020-10-02T20:37:20.337+0000 D3 STORAGE  [LogicalSessionCacheReap]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:37:20.337+0000 I  NETWORK  [listener] waiting for connections on port 27000
2020-10-02T20:37:20.337+0000 D3 STORAGE  [LogicalSessionCacheReap] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:37:20.337+0000 D3 STORAGE  [LogicalSessionCacheReap] WT rollback_transaction for snapshot id 15
2020-10-02T20:37:20.337+0000 I  COMMAND  [LogicalSessionCacheReap] command config.system.sessions command: listIndexes { listIndexes: "system.sessions", cursor: {}, $db: "config" } numYields:0 reslen:307 locks:{ ReplicationStateTransition: { acquireCount: { w: 1 } }, Global: { acquireCount: { r: 1 } }, Database: { acquireCount: { r: 1 } }, Collection: { acquireCount: { r: 1 } }, Mutex: { acquireCount: { r: 1 } } } storage:{} protocol:op_msg 0ms
2020-10-02T20:37:20.337+0000 D2 WRITE    [LogicalSessionCacheReap] Beginning scanSessions. Scanning 0 sessions.
2020-10-02T20:37:20.337+0000 D2 COMMAND  [LogicalSessionCacheReap] run command config.$cmd { find: "transactions", filter: { lastWriteDate: { $lt: new Date(1601669240337) } }, projection: { _id: 1 }, sort: { _id: 1 }, $db: "config" }
2020-10-02T20:37:20.337+0000 I  SHARDING [LogicalSessionCacheReap] Marking collection config.transactions as collection version: <unsharded>
2020-10-02T20:37:20.337+0000 D2 QUERY    [LogicalSessionCacheReap] Collection config.transactions does not exist. Using EOF plan: ns: config.transactions query: { lastWriteDate: { $lt: new Date(1601669240337) } } sort: { _id: 1 } projection: { _id: 1 }
2020-10-02T20:37:20.337+0000 I  COMMAND  [LogicalSessionCacheReap] command config.transactions command: find { find: "transactions", filter: { lastWriteDate: { $lt: new Date(1601669240337) } }, projection: { _id: 1 }, sort: { _id: 1 }, $db: "config" } planSummary: EOF keysExamined:0 docsExamined:0 cursorExhausted:1 numYields:0 nreturned:0 reslen:108 locks:{ ReplicationStateTransition: { acquireCount: { w: 1 } }, Global: { acquireCount: { r: 1 } }, Database: { acquireCount: { r: 1 } }, Collection: { acquireCount: { r: 2 } }, Mutex: { acquireCount: { r: 1 } } } storage:{} protocol:op_msg 0ms
2020-10-02T20:37:20.423+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:20.523+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:20.623+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:20.723+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:20.823+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:20.923+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:21.001+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:37:21.001+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:37:21.001+0000 I  SHARDING [ftdc] Marking collection local.oplog.rs as collection version: <unsharded>
2020-10-02T20:37:21.023+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:21.124+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:21.224+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:21.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:37:21.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 999999999 Now: 1000000000
2020-10-02T20:37:21.324+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:21.424+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:21.524+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:21.624+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:21.724+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:21.825+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:21.925+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:22.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:37:22.001+0000 D4 FTDC     [ftdc] full-time diagnostic data capture schema change: currrent document is longer than reference document
2020-10-02T20:37:22.025+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:22.125+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:22.225+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:22.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:37:22.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:37:22.326+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:22.426+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:22.526+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:22.626+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:22.726+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:22.826+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:22.926+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:23.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:37:23.027+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:23.127+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:23.227+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:23.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:37:23.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:37:23.327+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:23.427+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:23.527+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:23.628+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:23.728+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:23.828+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:23.928+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:24.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:37:24.028+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:24.128+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:24.229+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:24.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:37:24.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:37:24.329+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:24.429+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:24.529+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:24.629+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:24.730+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:24.830+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:24.930+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:25.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:37:25.030+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:25.130+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:25.231+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:25.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:37:25.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:37:25.331+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:25.431+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:25.531+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:25.631+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:25.731+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:25.831+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:25.932+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:26.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:37:26.032+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:26.132+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:26.232+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:26.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:37:26.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:37:26.332+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:26.432+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:26.533+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:26.633+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:26.733+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:26.833+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:26.933+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:27.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:37:27.033+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:27.133+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:27.233+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:27.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:37:27.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:37:27.334+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:27.434+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:27.534+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:27.634+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:27.734+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:27.834+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:27.934+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:28.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:37:28.035+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:28.135+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:28.235+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:28.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:37:28.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:37:28.335+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:28.435+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:28.535+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:28.635+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:28.735+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:28.836+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:28.936+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:29.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:37:29.036+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:29.136+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:29.237+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:29.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:37:29.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:37:29.337+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:29.437+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:29.537+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:29.637+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:29.737+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:29.837+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:29.938+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:30.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:37:30.038+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:30.138+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:30.238+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:30.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:37:30.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:37:30.338+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:30.438+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:30.538+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:30.639+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:30.739+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:30.839+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:30.939+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:31.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:37:31.039+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:31.139+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:31.239+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:31.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:37:31.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:37:31.340+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:31.440+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:31.540+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:31.640+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:31.740+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:31.840+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:31.940+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:32.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:37:32.040+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:32.141+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:32.241+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:32.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:37:32.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:37:32.341+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:32.441+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:32.541+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:32.641+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:32.741+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:32.842+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:32.942+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:33.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:37:33.042+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:33.142+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:33.242+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:33.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:37:33.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:37:33.342+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:33.442+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:33.542+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:33.643+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:33.743+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:33.843+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:33.943+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:34.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:37:34.043+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:34.143+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:34.243+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:34.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:37:34.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:37:34.344+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:34.444+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:34.544+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:34.644+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:34.744+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:34.844+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:34.945+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:35.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:37:35.045+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:35.145+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:35.245+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:35.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:37:35.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:37:35.345+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:35.446+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:35.546+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:35.646+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:35.746+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:35.846+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:35.947+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:36.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:37:36.047+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:36.147+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:36.247+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:36.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:37:36.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:37:36.347+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:36.447+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:36.548+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:36.648+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:36.748+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:36.848+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:36.948+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:37.001+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:37:37.048+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:37.148+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:37.249+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:37.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:37:37.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:37:37.349+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:37.449+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:37.549+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:37.649+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:37.749+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:37.849+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:37.950+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:38.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:37:38.050+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:38.150+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:38.250+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:38.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:37:38.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:37:38.350+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:38.450+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:38.551+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:38.651+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:38.751+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:38.851+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:38.951+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:39.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:37:39.052+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:39.152+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:39.252+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:39.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:37:39.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:37:39.352+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:39.452+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:39.552+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:39.653+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:39.753+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:39.853+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:39.953+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:40.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:37:40.053+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:40.153+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:40.253+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:40.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:37:40.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:37:40.354+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:40.454+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:40.554+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:40.654+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:40.754+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:40.854+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:40.955+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:41.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:37:41.055+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:41.155+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:41.255+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:41.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:37:41.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:37:41.355+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:41.455+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:41.556+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:41.656+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:41.756+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:41.856+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:41.956+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:42.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:37:42.057+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:42.157+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:42.257+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:42.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:37:42.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:37:42.357+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:42.457+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:42.557+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:42.657+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:42.757+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:42.858+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:42.958+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:43.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:37:43.058+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:43.158+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:43.258+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:43.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:37:43.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:37:43.359+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:43.459+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:43.559+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:43.659+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:43.759+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:43.859+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:43.959+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:44.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:37:44.060+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:44.160+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:44.260+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:44.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:37:44.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:37:44.360+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:44.461+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:44.561+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:44.661+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:44.761+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:44.861+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:44.962+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:45.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:37:45.062+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:45.162+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:45.262+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:45.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:37:45.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:37:45.362+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:45.462+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:45.562+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:45.663+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:45.763+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:45.863+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:45.963+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:46.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:37:46.063+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:46.163+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:46.264+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:46.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:37:46.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:37:46.364+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:46.464+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:46.564+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:46.664+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:46.764+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:46.865+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:46.965+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:47.001+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:37:47.065+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:47.165+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:47.265+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:47.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:37:47.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:37:47.365+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:47.465+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:47.566+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:47.666+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:47.766+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:47.866+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:47.966+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:48.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:37:48.066+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:48.167+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:48.267+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:48.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:37:48.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:37:48.367+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:48.467+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:48.567+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:48.667+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:48.768+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:48.868+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:48.968+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:49.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:37:49.068+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:49.168+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:49.269+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:49.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:37:49.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:37:49.369+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:49.469+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:49.569+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:49.669+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:49.769+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:49.870+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:49.970+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:50.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:37:50.070+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:50.170+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:50.270+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:50.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:37:50.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:37:50.336+0000 D2 WRITE    [abortExpiredTransactions] Beginning scanSessions. Scanning 0 sessions.
2020-10-02T20:37:50.370+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:50.470+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:50.571+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:50.671+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:50.771+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:50.871+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:50.971+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:51.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:37:51.071+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:51.171+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:51.272+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:51.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:37:51.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:37:51.372+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:51.472+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:51.572+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:51.672+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:51.772+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:51.872+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:51.973+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:52.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:37:52.073+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:52.173+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:52.273+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:52.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:37:52.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:37:52.373+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:52.473+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:52.573+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:52.674+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:52.774+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:52.874+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:52.974+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:53.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:37:53.074+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:53.174+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:53.274+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:53.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:37:53.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:37:53.375+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:53.475+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:53.575+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:53.675+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:53.775+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:53.876+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:53.976+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:54.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:37:54.076+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:54.176+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:54.276+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:54.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:37:54.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:37:54.376+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:54.477+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:54.577+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:54.677+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:54.777+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:54.877+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:54.977+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:55.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:37:55.077+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:55.178+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:55.278+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:55.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:37:55.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:37:55.378+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:55.478+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:55.578+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:55.679+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:55.779+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:55.879+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:55.979+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:56.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:37:56.079+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:56.179+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:56.280+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:56.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:37:56.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:37:56.380+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:56.480+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:56.580+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:56.680+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:56.781+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:56.881+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:56.981+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:57.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:37:57.081+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:57.181+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:57.281+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:57.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:37:57.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:37:57.382+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:57.482+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:57.582+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:57.682+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:57.782+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:57.883+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:57.983+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:58.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:37:58.083+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:58.183+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:58.283+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:58.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:37:58.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:37:58.384+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:58.484+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:58.584+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:58.684+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:58.784+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:58.885+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:58.985+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:59.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:37:59.085+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:59.185+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:59.285+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:59.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:37:59.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:37:59.386+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:59.486+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:59.586+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:59.686+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:59.786+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:59.886+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:37:59.987+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:00.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:38:00.087+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:00.187+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:00.287+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:00.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:38:00.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:38:00.387+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:00.487+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:00.587+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:00.688+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:00.788+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:00.888+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:00.988+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:01.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:38:01.088+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:01.189+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:01.289+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:01.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:38:01.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:38:01.389+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:01.489+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:01.589+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:01.689+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:01.790+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:01.890+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:01.990+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:02.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:38:02.090+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:02.190+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:02.291+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:02.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:38:02.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:38:02.391+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:02.491+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:02.591+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:02.691+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:02.792+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:02.892+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:02.992+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:03.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:38:03.092+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:03.192+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:03.292+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:03.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:38:03.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:38:03.393+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:03.493+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:03.593+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:03.693+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:03.793+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:03.893+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:03.994+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:04.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:38:04.094+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:04.194+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:04.294+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:04.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:38:04.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:38:04.394+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:04.494+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:04.595+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:04.695+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:04.795+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:04.895+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:04.995+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:05.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:38:05.095+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:05.195+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:05.296+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:05.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:38:05.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:38:05.396+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:05.496+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:05.596+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:05.696+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:05.796+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:05.896+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:05.997+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:06.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:38:06.097+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:06.197+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:06.297+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:06.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:38:06.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:38:06.397+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:06.497+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:06.597+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:06.698+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:06.798+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:06.898+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:06.998+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:07.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:38:07.098+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:07.199+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:07.299+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:07.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:38:07.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:38:07.399+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:07.499+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:07.599+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:07.699+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:07.799+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:07.900+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:08.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:38:08.001+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:08.101+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:08.201+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:08.301+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:08.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:38:08.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:38:08.402+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:08.502+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:08.602+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:08.702+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:08.802+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:08.902+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:09.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:38:09.002+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:09.103+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:09.203+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:09.303+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:09.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:38:09.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:38:09.403+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:09.503+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:09.603+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:09.703+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:09.804+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:09.904+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:10.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:38:10.004+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:10.104+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:10.204+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:10.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:38:10.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:38:10.304+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:10.404+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:10.504+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:10.605+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:10.705+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:10.805+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:10.905+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:11.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:38:11.005+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:11.105+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:11.206+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:11.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:38:11.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:38:11.306+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:11.406+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:11.506+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:11.606+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:11.706+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:11.807+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:11.907+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:12.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:38:12.007+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:12.107+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:12.207+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:12.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:38:12.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:38:12.307+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:12.407+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:12.508+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:12.608+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:12.708+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:12.808+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:12.908+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:13.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:38:13.008+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:13.109+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:13.209+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:13.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:38:13.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:38:13.309+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:13.409+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:13.509+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:13.610+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:13.710+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:13.810+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:13.910+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:14.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:38:14.010+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:14.110+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:14.211+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:14.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:38:14.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:38:14.311+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:14.411+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:14.511+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:14.611+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:14.712+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:14.812+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:14.912+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:15.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:38:15.012+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:15.112+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:15.213+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:15.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:38:15.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:38:15.313+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:15.413+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:15.513+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:15.613+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:15.714+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:15.814+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:15.914+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:16.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:38:16.014+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:16.114+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:16.215+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:16.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:38:16.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:38:16.315+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:16.415+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:16.515+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:16.615+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:16.716+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:16.816+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:16.916+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:17.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:38:17.016+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:17.116+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:17.216+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:17.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:38:17.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:38:17.317+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:17.417+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:17.517+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:17.617+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:17.717+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:17.817+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:17.918+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:18.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:38:18.018+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:18.118+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:18.218+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:18.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:38:18.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:38:18.318+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:18.419+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:18.519+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:18.619+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:18.719+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:18.819+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:18.919+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:19.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:38:19.020+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:19.120+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:19.220+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:19.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:38:19.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:38:19.320+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:19.421+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:19.521+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:19.621+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:19.721+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:19.821+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:19.921+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:20.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:38:20.022+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:20.122+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:20.222+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:20.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:38:20.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:38:20.323+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:20.330+0000 D2 STORAGE  [WTCheckpointThread] WiredTigerSizeStorer::flush table:local/collection/2--2310914167168443545 -> { numRecords: 77, dataSize: 160145 }
2020-10-02T20:38:20.330+0000 D2 STORAGE  [WTCheckpointThread] WiredTigerSizeStorer flush took 69 µs
2020-10-02T20:38:20.336+0000 D2 WRITE    [abortExpiredTransactions] Beginning scanSessions. Scanning 0 sessions.
2020-10-02T20:38:20.336+0000 D3 INDEX    [TTLMonitor] thread awake
2020-10-02T20:38:20.336+0000 D3 STORAGE  [TTLMonitor] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:38:20.336+0000 D3 STORAGE  [TTLMonitor] WT begin_transaction for snapshot id 166
2020-10-02T20:38:20.336+0000 D3 STORAGE  [TTLMonitor]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:38:20.336+0000 D3 STORAGE  [TTLMonitor] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:38:20.336+0000 D3 STORAGE  [TTLMonitor] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:38:20.336+0000 D3 STORAGE  [TTLMonitor]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:38:20.336+0000 D3 STORAGE  [TTLMonitor] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:38:20.336+0000 D3 STORAGE  [TTLMonitor] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:38:20.336+0000 D3 STORAGE  [TTLMonitor]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:38:20.336+0000 D3 STORAGE  [TTLMonitor] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:38:20.336+0000 D3 STORAGE  [TTLMonitor] WT rollback_transaction for snapshot id 166
2020-10-02T20:38:20.336+0000 D1 INDEX    [TTLMonitor] ns: config.system.sessions key: { lastUse: 1 } name: lsidTTLIndex
2020-10-02T20:38:20.336+0000 D3 COMMAND  [PeriodicTaskRunner] task: DBConnectionPool-cleaner took: 0ms
2020-10-02T20:38:20.336+0000 D3 COMMAND  [PeriodicTaskRunner] task: DBConnectionPool-cleaner took: 0ms
2020-10-02T20:38:20.336+0000 D2 -        [PeriodicTaskRunner] cleaning up unused lock buckets of the global lock manager
2020-10-02T20:38:20.336+0000 D4 -        [TTLMonitor] Taking ticket. Available: 1000000000
2020-10-02T20:38:20.336+0000 D3 COMMAND  [PeriodicTaskRunner] task: UnusedLockCleaner took: 0ms
2020-10-02T20:38:20.336+0000 D3 STORAGE  [TTLMonitor] WT begin_transaction for snapshot id 167
2020-10-02T20:38:20.337+0000 D1 INDEX    [TTLMonitor] deleted: 0
2020-10-02T20:38:20.337+0000 D3 STORAGE  [TTLMonitor] WT rollback_transaction for snapshot id 167
2020-10-02T20:38:20.424+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:20.524+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:20.624+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:20.724+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:20.825+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:20.925+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:21.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:38:21.001+0000 D4 FTDC     [ftdc] full-time diagnostic data capture schema change: field name change - from 'W' to 'w'
2020-10-02T20:38:21.025+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:21.125+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:21.225+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:21.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:38:21.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 999999999 Now: 1000000000
2020-10-02T20:38:21.325+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:21.426+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:21.526+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:21.626+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:21.726+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:21.827+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:21.927+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:22.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:38:22.027+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:22.127+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:22.227+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:22.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:38:22.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:38:22.327+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:22.427+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:22.528+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:22.628+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:22.728+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:22.828+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:22.928+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:23.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:38:23.029+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:23.129+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:23.229+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:23.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:38:23.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:38:23.329+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:23.429+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:23.529+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:23.629+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:23.730+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:23.830+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:23.930+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:24.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:38:24.030+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:24.130+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:24.230+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:24.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:38:24.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:38:24.331+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:24.431+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:24.531+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:24.631+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:24.731+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:24.831+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:24.932+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:25.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:38:25.032+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:25.132+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:25.232+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:25.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:38:25.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:38:25.332+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:25.432+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:25.533+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:25.633+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:25.733+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:25.833+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:25.934+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:26.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:38:26.034+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:26.134+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:26.234+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:26.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:38:26.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:38:26.335+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:26.435+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:26.535+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:26.635+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:26.735+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:26.836+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:26.936+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:27.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:38:27.036+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:27.136+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:27.236+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:27.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:38:27.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:38:27.337+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:27.437+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:27.537+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:27.637+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:27.737+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:27.837+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:27.937+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:28.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:38:28.038+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:28.138+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:28.238+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:28.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:38:28.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:38:28.338+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:28.438+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:28.539+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:28.639+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:28.739+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:28.839+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:28.939+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:29.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:38:29.039+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:29.139+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:29.240+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:29.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:38:29.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:38:29.340+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:29.440+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:29.540+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:29.640+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:29.740+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:29.841+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:29.941+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:30.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:38:30.041+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:30.141+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:30.241+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:30.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:38:30.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:38:30.342+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:30.442+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:30.542+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:30.642+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:30.742+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:30.843+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:30.943+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:31.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:38:31.043+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:31.143+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:31.244+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:31.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:38:31.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:38:31.344+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:31.444+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:31.544+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:31.644+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:31.744+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:31.844+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:31.945+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:32.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:38:32.045+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:32.145+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:32.245+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:32.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:38:32.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:38:32.345+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:32.445+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:32.545+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:32.646+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:32.746+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:32.846+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:32.946+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:33.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:38:33.046+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:33.146+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:33.247+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:33.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:38:33.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:38:33.347+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:33.447+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:33.547+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:33.647+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:33.747+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:33.848+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:33.948+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:34.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:38:34.048+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:34.148+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:34.248+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:34.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:38:34.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:38:34.348+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:34.449+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:34.549+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:34.649+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:34.749+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:34.849+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:34.950+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:35.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:38:35.050+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:35.150+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:35.250+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:35.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:38:35.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:38:35.350+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:35.451+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:35.551+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:35.651+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:35.751+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:35.851+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:35.951+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:36.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:38:36.051+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:36.152+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:36.252+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:36.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:38:36.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:38:36.352+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:36.453+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:36.553+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:36.653+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:36.753+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:36.853+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:36.953+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:37.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:38:37.053+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:37.154+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:37.254+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:37.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:38:37.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:38:37.354+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:37.454+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:37.554+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:37.654+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:37.755+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:37.855+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:37.955+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:38.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:38:38.055+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:38.155+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:38.255+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:38.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:38:38.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:38:38.355+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:38.456+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:38.556+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:38.656+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:38.756+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:38.856+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:38.956+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:39.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:38:39.056+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:39.157+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:39.257+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:39.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:38:39.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:38:39.357+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:39.457+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:39.557+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:39.657+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:39.757+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:39.858+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:39.958+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:40.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:38:40.058+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:40.158+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:40.258+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:40.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:38:40.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:38:40.358+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:40.458+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:40.559+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:40.659+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:40.759+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:40.859+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:40.959+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:41.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:38:41.059+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:41.159+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:41.260+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:41.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:38:41.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:38:41.360+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:41.460+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:41.560+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:41.660+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:41.760+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:41.860+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:41.961+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:42.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:38:42.061+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:42.161+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:42.261+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:42.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:38:42.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:38:42.361+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:42.461+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:42.561+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:42.662+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:42.762+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:42.862+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:42.962+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:43.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:38:43.062+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:43.162+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:43.262+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:43.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:38:43.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:38:43.363+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:43.463+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:43.563+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:43.663+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:43.763+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:43.863+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:43.963+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:44.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:38:44.064+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:44.164+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:44.264+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:44.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:38:44.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:38:44.364+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:44.464+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:44.564+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:44.665+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:44.765+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:44.865+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:44.965+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:45.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:38:45.065+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:45.165+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:45.265+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:45.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:38:45.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:38:45.366+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:45.466+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:45.566+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:45.666+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:45.766+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:45.866+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:45.967+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:46.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:38:46.067+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:46.167+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:46.267+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:46.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:38:46.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:38:46.367+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:46.467+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:46.567+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:46.668+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:46.768+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:46.868+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:46.968+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:47.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:38:47.068+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:47.168+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:47.269+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:47.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:38:47.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:38:47.369+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:47.469+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:47.569+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:47.669+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:47.769+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:47.870+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:47.970+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:48.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:38:48.070+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:48.170+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:48.270+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:48.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:38:48.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:38:48.370+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:48.471+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:48.571+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:48.671+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:48.771+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:48.871+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:48.971+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:49.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:38:49.072+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:49.172+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:49.272+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:49.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:38:49.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:38:49.372+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:49.472+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:49.573+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:49.673+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:49.773+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:49.873+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:49.973+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:50.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:38:50.073+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:50.174+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:50.274+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:50.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:38:50.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:38:50.336+0000 D2 WRITE    [abortExpiredTransactions] Beginning scanSessions. Scanning 0 sessions.
2020-10-02T20:38:50.374+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:50.474+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:50.574+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:50.674+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:50.775+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:50.875+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:50.975+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:51.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:38:51.075+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:51.175+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:51.276+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:51.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:38:51.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:38:51.376+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:51.476+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:51.576+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:51.676+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:51.776+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:51.877+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:51.977+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:52.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:38:52.077+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:52.177+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:52.277+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:52.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:38:52.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:38:52.377+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:52.477+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:52.578+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:52.678+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:52.778+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:52.878+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:52.978+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:53.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:38:53.079+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:53.179+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:53.279+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:53.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:38:53.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:38:53.379+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:53.479+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:53.579+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:53.679+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:53.780+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:53.880+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:53.980+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:54.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:38:54.080+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:54.180+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:54.280+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:54.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:38:54.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:38:54.380+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:54.481+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:54.581+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:54.681+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:54.781+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:54.881+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:54.981+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:55.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:38:55.081+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:55.182+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:55.282+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:55.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:38:55.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:38:55.382+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:55.485+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:55.585+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:55.685+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:55.785+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:55.885+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:55.985+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:56.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:38:56.085+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:56.186+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:56.286+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:56.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:38:56.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:38:56.386+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:56.486+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:56.586+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:56.686+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:56.787+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:56.887+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:56.987+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:57.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:38:57.087+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:57.187+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:57.288+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:57.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:38:57.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:38:57.388+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:57.488+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:57.588+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:57.689+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:57.789+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:57.889+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:57.989+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:58.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:38:58.089+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:58.189+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:58.290+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:58.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:38:58.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:38:58.390+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:58.490+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:58.590+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:58.690+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:58.790+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:58.890+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:58.991+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:59.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:38:59.091+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:59.191+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:59.291+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:59.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:38:59.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:38:59.391+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:59.491+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:59.592+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:59.692+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:59.792+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:59.892+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:38:59.992+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:00.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:39:00.092+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:00.192+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:00.293+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:00.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:39:00.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:39:00.393+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:00.493+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:00.593+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:00.693+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:00.794+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:00.894+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:00.994+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:01.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:39:01.094+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:01.194+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:01.294+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:01.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:39:01.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:39:01.395+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:01.495+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:01.595+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:01.695+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:01.795+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:01.895+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:01.995+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:02.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:39:02.096+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:02.196+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:02.296+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:02.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:39:02.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:39:02.396+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:02.497+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:02.597+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:02.697+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:02.797+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:02.897+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:02.997+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:03.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:39:03.098+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:03.198+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:03.298+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:03.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:39:03.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:39:03.398+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:03.498+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:03.598+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:03.699+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:03.799+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:03.899+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:03.999+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:04.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:39:04.099+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:04.200+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:04.300+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:04.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:39:04.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:39:04.400+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:04.500+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:04.600+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:04.700+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:04.801+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:04.901+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:05.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:39:05.001+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:05.101+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:05.201+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:05.301+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:05.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:39:05.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:39:05.401+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:05.502+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:05.602+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:05.702+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:05.802+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:05.902+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:06.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:39:06.003+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:06.103+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:06.203+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:06.303+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:06.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:39:06.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:39:06.404+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:06.504+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:06.604+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:06.704+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:06.804+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:06.905+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:07.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:39:07.005+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:07.105+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:07.205+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:07.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:39:07.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:39:07.305+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:07.405+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:07.505+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:07.606+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:07.706+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:07.806+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:07.906+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:08.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:39:08.006+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:08.106+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:08.206+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:08.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:39:08.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:39:08.307+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:08.407+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:08.507+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:08.607+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:08.707+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:08.807+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:08.908+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:09.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:39:09.008+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:09.108+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:09.208+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:09.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:39:09.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:39:09.308+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:09.408+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:09.509+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:09.609+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:09.709+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:09.809+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:09.909+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:10.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:39:10.009+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:10.109+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:10.209+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:10.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:39:10.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:39:10.310+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:10.410+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:10.510+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:10.610+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:10.711+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:10.811+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:10.911+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:11.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:39:11.011+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:11.111+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:11.212+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:11.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:39:11.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:39:11.312+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:11.412+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:11.512+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:11.612+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:11.713+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:11.813+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:11.913+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:12.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:39:12.013+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:12.113+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:12.213+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:12.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:39:12.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:39:12.314+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:12.414+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:12.514+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:12.614+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:12.714+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:12.815+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:12.915+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:13.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:39:13.015+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:13.115+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:13.215+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:13.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:39:13.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:39:13.315+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:13.416+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:13.516+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:13.617+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:13.717+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:13.817+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:13.917+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:14.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:39:14.017+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:14.117+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:14.217+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:14.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:39:14.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:39:14.318+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:14.418+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:14.518+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:14.618+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:14.718+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:14.818+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:14.919+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:15.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:39:15.019+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:15.119+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:15.219+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:15.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:39:15.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:39:15.319+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:15.419+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:15.519+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:15.620+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:15.720+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:15.820+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:15.920+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:16.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:39:16.020+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:16.120+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:16.221+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:16.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:39:16.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:39:16.321+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:16.421+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:16.521+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:16.621+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:16.721+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:16.822+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:16.922+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:17.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:39:17.022+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:17.122+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:17.222+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:17.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:39:17.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:39:17.322+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:17.422+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:17.523+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:17.623+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:17.723+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:17.823+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:17.923+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:18.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:39:18.023+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:18.124+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:18.224+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:18.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:39:18.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:39:18.324+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:18.424+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:18.524+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:18.624+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:18.725+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:18.825+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:18.925+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:19.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:39:19.025+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:19.125+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:19.226+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:19.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:39:19.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:39:19.326+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:19.426+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:19.526+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:19.626+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:19.726+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:19.827+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:19.927+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:20.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:39:20.027+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:20.127+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:20.227+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:20.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:39:20.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:39:20.327+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:20.336+0000 D2 WRITE    [abortExpiredTransactions] Beginning scanSessions. Scanning 0 sessions.
2020-10-02T20:39:20.336+0000 D3 COMMAND  [PeriodicTaskRunner] task: DBConnectionPool-cleaner took: 0ms
2020-10-02T20:39:20.336+0000 D3 COMMAND  [PeriodicTaskRunner] task: DBConnectionPool-cleaner took: 0ms
2020-10-02T20:39:20.336+0000 D2 -        [PeriodicTaskRunner] cleaning up unused lock buckets of the global lock manager
2020-10-02T20:39:20.336+0000 D3 COMMAND  [PeriodicTaskRunner] task: UnusedLockCleaner took: 0ms
2020-10-02T20:39:20.337+0000 D3 INDEX    [TTLMonitor] thread awake
2020-10-02T20:39:20.337+0000 D3 STORAGE  [TTLMonitor] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:39:20.337+0000 D3 STORAGE  [TTLMonitor] WT begin_transaction for snapshot id 318
2020-10-02T20:39:20.337+0000 D3 STORAGE  [TTLMonitor]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:39:20.337+0000 D3 STORAGE  [TTLMonitor] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:39:20.337+0000 D3 STORAGE  [TTLMonitor] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:39:20.337+0000 D3 STORAGE  [TTLMonitor]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:39:20.337+0000 D3 STORAGE  [TTLMonitor] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:39:20.337+0000 D3 STORAGE  [TTLMonitor] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:39:20.337+0000 D3 STORAGE  [TTLMonitor]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:39:20.337+0000 D3 STORAGE  [TTLMonitor] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:39:20.337+0000 D3 STORAGE  [TTLMonitor] WT rollback_transaction for snapshot id 318
2020-10-02T20:39:20.337+0000 D1 INDEX    [TTLMonitor] ns: config.system.sessions key: { lastUse: 1 } name: lsidTTLIndex
2020-10-02T20:39:20.337+0000 D4 -        [TTLMonitor] Taking ticket. Available: 1000000000
2020-10-02T20:39:20.337+0000 D3 STORAGE  [TTLMonitor] WT begin_transaction for snapshot id 319
2020-10-02T20:39:20.337+0000 D1 INDEX    [TTLMonitor] deleted: 0
2020-10-02T20:39:20.337+0000 D3 STORAGE  [TTLMonitor] WT rollback_transaction for snapshot id 319
2020-10-02T20:39:20.428+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:20.528+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:20.628+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:20.728+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:20.828+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:20.929+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:21.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:39:21.029+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:21.129+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:21.229+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:21.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:39:21.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 999999999 Now: 1000000000
2020-10-02T20:39:21.329+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:21.429+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:21.530+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:21.630+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:21.730+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:21.830+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:21.930+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:22.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:39:22.030+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:22.130+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:22.231+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:22.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:39:22.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:39:22.331+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:22.431+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:22.531+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:22.631+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:22.731+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:22.831+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:22.932+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:23.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:39:23.032+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:23.132+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:23.232+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:23.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:39:23.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:39:23.332+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:23.432+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:23.532+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:23.633+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:23.733+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:23.833+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:23.933+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:24.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:39:24.033+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:24.133+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:24.234+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:24.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:39:24.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:39:24.334+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:24.434+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:24.534+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:24.634+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:24.735+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:24.835+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:24.935+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:25.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:39:25.035+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:25.135+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:25.235+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:25.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:39:25.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:39:25.336+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:25.436+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:25.536+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:25.636+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:25.736+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:25.837+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:25.937+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:26.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:39:26.037+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:26.137+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:26.237+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:26.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:39:26.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:39:26.337+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:26.437+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:26.538+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:26.638+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:26.738+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:26.838+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:26.938+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:27.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:39:27.039+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:27.139+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:27.239+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:27.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:39:27.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:39:27.339+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:27.440+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:27.540+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:27.640+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:27.741+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:27.841+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:27.941+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:28.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:39:28.041+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:28.141+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:28.241+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:28.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:39:28.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:39:28.342+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:28.442+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:28.542+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:28.642+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:28.742+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:28.842+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:28.943+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:29.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:39:29.043+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:29.143+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:29.243+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:29.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:39:29.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:39:29.343+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:29.443+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:29.544+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:29.644+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:29.744+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:29.844+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:29.944+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:30.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:39:30.045+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:30.145+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:30.245+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:30.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:39:30.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:39:30.345+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:30.445+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:30.545+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:30.646+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:30.746+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:30.846+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:30.946+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:31.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:39:31.046+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:31.146+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:31.246+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:31.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:39:31.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:39:31.347+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:31.447+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:31.547+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:31.647+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:31.747+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:31.847+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:31.947+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:32.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:39:32.048+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:32.148+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:32.248+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:32.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:39:32.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:39:32.348+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:32.448+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:32.548+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:32.648+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:32.749+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:32.849+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:32.949+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:33.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:39:33.049+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:33.149+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:33.250+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:33.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:39:33.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:39:33.350+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:33.450+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:33.550+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:33.650+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:33.750+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:33.851+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:33.951+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:34.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:39:34.051+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:34.151+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:34.251+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:34.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:39:34.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:39:34.351+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:34.452+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:34.552+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:34.652+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:34.752+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:34.852+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:34.952+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:35.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:39:35.053+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:35.153+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:35.253+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:35.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:39:35.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:39:35.353+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:35.453+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:35.554+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:35.654+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:35.754+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:35.854+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:35.954+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:36.003+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:39:36.054+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:36.155+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:36.255+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:36.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:39:36.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:39:36.355+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:36.455+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:36.555+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:36.656+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:36.756+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:36.856+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:36.956+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:37.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:39:37.056+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:37.156+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:37.257+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:37.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:39:37.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:39:37.357+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:37.457+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:37.557+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:37.657+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:37.757+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:37.858+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:37.958+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:38.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:39:38.058+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:38.158+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:38.258+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:38.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:39:38.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:39:38.359+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:38.459+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:38.559+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:38.660+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:38.760+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:38.860+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:38.960+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:39.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:39:39.061+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:39.161+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:39.261+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:39.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:39:39.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:39:39.361+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:39.461+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:39.562+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:39.662+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:39.762+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:39.862+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:39.962+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:40.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:39:40.062+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:40.162+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:40.263+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:40.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:39:40.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:39:40.363+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:40.463+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:40.563+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:40.663+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:40.763+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:40.864+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:40.964+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:41.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:39:41.064+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:41.164+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:41.264+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:41.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:39:41.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:39:41.365+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:41.465+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:41.565+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:41.665+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:41.765+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:41.866+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:41.966+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:42.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:39:42.066+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:42.166+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:42.266+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:42.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:39:42.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:39:42.367+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:42.467+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:42.567+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:42.667+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:42.767+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:42.867+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:42.968+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:43.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:39:43.068+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:43.168+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:43.268+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:43.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:39:43.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:39:43.368+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:43.469+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:43.569+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:43.669+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:43.769+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:43.869+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:43.970+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:44.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:39:44.070+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:44.170+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:44.270+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:44.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:39:44.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:39:44.370+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:44.470+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:44.571+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:44.671+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:44.771+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:44.871+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:44.971+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:45.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:39:45.072+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:45.172+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:45.272+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:45.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:39:45.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:39:45.372+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:45.472+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:45.572+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:45.673+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:45.773+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:45.873+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:45.973+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:46.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:39:46.073+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:46.174+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:46.274+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:46.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:39:46.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:39:46.374+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:46.474+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:46.574+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:46.674+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:46.775+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:46.875+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:46.975+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:47.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:39:47.075+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:47.175+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:47.276+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:47.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:39:47.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:39:47.376+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:47.476+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:47.576+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:47.676+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:47.777+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:47.877+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:47.977+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:48.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:39:48.077+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:48.177+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:48.277+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:48.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:39:48.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:39:48.378+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:48.478+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:48.578+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:48.678+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:48.778+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:48.878+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:48.978+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:49.001+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:39:49.079+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:49.179+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:49.279+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:49.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:39:49.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:39:49.379+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:49.479+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:49.579+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:49.680+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:49.780+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:49.880+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:49.980+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:50.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:39:50.080+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:50.180+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:50.280+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:50.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:39:50.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:39:50.336+0000 D2 WRITE    [abortExpiredTransactions] Beginning scanSessions. Scanning 0 sessions.
2020-10-02T20:39:50.381+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:50.481+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:50.581+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:50.681+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:50.781+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:50.882+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:50.982+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:51.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:39:51.082+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:51.182+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:51.282+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:51.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:39:51.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:39:51.382+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:51.483+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:51.583+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:51.683+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:51.783+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:51.883+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:51.983+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:52.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:39:52.084+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:52.184+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:52.284+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:52.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:39:52.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:39:52.384+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:52.484+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:52.584+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:52.685+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:52.785+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:52.885+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:52.985+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:53.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:39:53.085+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:53.185+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:53.285+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:53.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:39:53.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:39:53.386+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:53.486+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:53.586+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:53.686+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:53.786+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:53.886+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:53.986+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:54.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:39:54.087+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:54.187+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:54.287+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:54.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:39:54.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:39:54.387+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:54.487+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:54.587+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:54.688+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:54.788+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:54.888+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:54.988+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:55.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:39:55.089+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:55.189+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:55.289+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:55.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:39:55.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:39:55.389+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:55.489+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:55.589+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:55.689+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:55.790+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:55.890+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:55.991+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:56.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:39:56.091+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:56.191+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:56.291+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:56.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:39:56.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:39:56.391+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:56.491+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:56.591+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:56.692+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:56.792+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:56.892+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:56.992+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:57.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:39:57.092+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:57.192+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:57.293+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:57.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:39:57.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:39:57.393+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:57.493+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:57.593+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:57.693+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:57.793+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:57.893+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:57.994+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:58.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:39:58.094+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:58.194+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:58.294+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:58.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:39:58.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:39:58.394+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:58.494+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:58.595+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:58.695+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:58.795+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:58.895+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:58.995+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:59.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:39:59.095+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:59.196+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:59.296+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:59.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:39:59.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:39:59.396+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:59.496+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:59.596+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:59.696+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:59.797+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:59.897+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:39:59.997+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:00.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:40:00.097+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:00.197+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:00.297+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:00.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:40:00.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:40:00.398+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:00.498+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:00.598+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:00.698+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:00.798+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:00.898+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:00.999+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:01.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:40:01.099+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:01.199+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:01.299+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:01.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:40:01.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:40:01.399+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:01.499+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:01.599+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:01.700+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:01.800+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:01.900+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:02.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:40:02.001+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:02.101+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:02.201+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:02.301+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:02.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:40:02.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:40:02.402+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:02.502+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:02.602+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:02.702+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:02.802+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:02.902+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:03.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:40:03.002+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:03.102+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:03.203+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:03.303+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:03.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:40:03.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:40:03.403+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:03.503+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:03.603+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:03.703+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:03.803+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:03.904+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:04.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:40:04.006+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:04.107+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:04.207+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:04.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:40:04.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:40:04.307+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:04.407+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:04.507+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:04.607+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:04.708+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:04.808+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:04.908+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:05.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:40:05.008+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:05.108+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:05.208+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:05.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:40:05.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:40:05.308+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:05.409+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:05.509+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:05.609+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:05.709+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:05.809+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:05.909+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:06.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:40:06.009+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:06.110+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:06.210+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:06.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:40:06.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:40:06.310+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:06.410+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:06.510+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:06.610+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:06.710+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:06.811+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:06.911+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:07.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:40:07.011+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:07.111+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:07.211+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:07.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:40:07.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:40:07.312+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:07.412+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:07.512+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:07.612+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:07.712+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:07.813+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:07.913+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:08.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:40:08.013+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:08.113+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:08.213+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:08.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:40:08.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:40:08.313+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:08.413+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:08.514+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:08.614+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:08.714+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:08.814+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:08.914+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:09.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:40:09.014+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:09.114+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:09.214+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:09.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:40:09.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:40:09.315+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:09.415+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:09.515+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:09.615+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:09.715+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:09.815+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:09.915+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:10.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:40:10.016+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:10.116+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:10.216+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:10.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:40:10.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:40:10.316+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:10.416+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:10.516+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:10.616+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:10.717+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:10.817+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:10.917+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:11.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:40:11.018+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:11.118+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:11.218+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:11.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:40:11.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:40:11.319+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:11.419+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:11.519+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:11.619+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:11.719+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:11.819+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:11.919+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:12.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:40:12.020+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:12.120+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:12.220+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:12.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:40:12.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:40:12.320+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:12.420+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:12.520+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:12.621+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:12.721+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:12.821+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:12.921+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:13.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:40:13.021+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:13.121+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:13.222+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:13.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:40:13.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:40:13.322+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:13.422+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:13.522+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:13.622+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:13.722+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:13.822+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:13.923+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:14.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:40:14.023+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:14.123+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:14.223+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:14.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:40:14.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:40:14.323+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:14.424+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:14.524+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:14.624+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:14.724+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:14.824+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:14.925+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:15.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:40:15.025+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:15.125+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:15.225+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:15.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:40:15.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:40:15.325+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:15.425+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:15.526+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:15.626+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:15.726+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:15.826+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:15.926+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:16.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:40:16.026+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:16.126+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:16.227+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:16.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:40:16.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:40:16.327+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:16.427+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:16.527+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:16.627+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:16.727+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:16.827+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:16.928+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:17.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:40:17.028+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:17.128+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:17.228+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:17.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:40:17.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:40:17.328+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:17.428+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:17.528+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:17.628+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:17.729+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:17.829+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:17.929+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:18.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:40:18.029+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:18.129+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:18.229+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:18.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:40:18.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:40:18.329+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:18.430+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:18.530+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:18.630+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:18.730+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:18.830+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:18.930+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:19.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:40:19.030+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:19.131+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:19.231+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:19.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:40:19.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:40:19.331+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:19.431+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:19.531+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:19.631+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:19.732+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:19.832+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:19.932+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:20.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:40:20.032+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:20.132+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:20.233+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:20.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:40:20.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:40:20.333+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:20.336+0000 D2 WRITE    [abortExpiredTransactions] Beginning scanSessions. Scanning 0 sessions.
2020-10-02T20:40:20.336+0000 D3 COMMAND  [PeriodicTaskRunner] task: DBConnectionPool-cleaner took: 0ms
2020-10-02T20:40:20.336+0000 D3 COMMAND  [PeriodicTaskRunner] task: DBConnectionPool-cleaner took: 0ms
2020-10-02T20:40:20.336+0000 D2 -        [PeriodicTaskRunner] cleaning up unused lock buckets of the global lock manager
2020-10-02T20:40:20.336+0000 D3 COMMAND  [PeriodicTaskRunner] task: UnusedLockCleaner took: 0ms
2020-10-02T20:40:20.337+0000 D3 INDEX    [TTLMonitor] thread awake
2020-10-02T20:40:20.337+0000 D3 STORAGE  [TTLMonitor] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:40:20.337+0000 D3 STORAGE  [TTLMonitor] WT begin_transaction for snapshot id 470
2020-10-02T20:40:20.337+0000 D3 STORAGE  [TTLMonitor]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:40:20.337+0000 D3 STORAGE  [TTLMonitor] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:40:20.337+0000 D3 STORAGE  [TTLMonitor] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:40:20.337+0000 D3 STORAGE  [TTLMonitor]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:40:20.337+0000 D3 STORAGE  [TTLMonitor] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:40:20.337+0000 D3 STORAGE  [TTLMonitor] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:40:20.337+0000 D3 STORAGE  [TTLMonitor]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:40:20.337+0000 D3 STORAGE  [TTLMonitor] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:40:20.337+0000 D3 STORAGE  [TTLMonitor] WT rollback_transaction for snapshot id 470
2020-10-02T20:40:20.337+0000 D1 INDEX    [TTLMonitor] ns: config.system.sessions key: { lastUse: 1 } name: lsidTTLIndex
2020-10-02T20:40:20.337+0000 D4 -        [TTLMonitor] Taking ticket. Available: 1000000000
2020-10-02T20:40:20.337+0000 D3 STORAGE  [TTLMonitor] WT begin_transaction for snapshot id 471
2020-10-02T20:40:20.338+0000 D1 INDEX    [TTLMonitor] deleted: 0
2020-10-02T20:40:20.338+0000 D3 STORAGE  [TTLMonitor] WT rollback_transaction for snapshot id 471
2020-10-02T20:40:20.433+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:20.533+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:20.633+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:20.734+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:20.834+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:20.934+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:21.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:40:21.034+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:21.134+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:21.234+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:21.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:40:21.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 999999999 Now: 1000000000
2020-10-02T20:40:21.335+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:21.435+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:21.535+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:21.635+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:21.735+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:21.835+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:21.935+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:22.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:40:22.036+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:22.136+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:22.236+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:22.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:40:22.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:40:22.336+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:22.437+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:22.537+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:22.637+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:22.737+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:22.837+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:22.937+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:23.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:40:23.037+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:23.138+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:23.238+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:23.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:40:23.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:40:23.338+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:23.438+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:23.538+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:23.638+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:23.738+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:23.839+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:23.939+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:24.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:40:24.039+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:24.139+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:24.239+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:24.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:40:24.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:40:24.339+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:24.439+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:24.539+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:24.640+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:24.740+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:24.840+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:24.940+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:25.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:40:25.040+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:25.140+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:25.240+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:25.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:40:25.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:40:25.341+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:25.441+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:25.541+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:25.641+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:25.741+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:25.841+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:25.942+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:26.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:40:26.042+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:26.142+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:26.242+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:26.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:40:26.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:40:26.342+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:26.443+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:26.543+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:26.643+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:26.743+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:26.844+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:26.944+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:27.001+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:40:27.044+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:27.144+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:27.244+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:27.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:40:27.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:40:27.344+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:27.445+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:27.545+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:27.645+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:27.745+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:27.845+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:27.946+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:28.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:40:28.046+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:28.146+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:28.246+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:28.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:40:28.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:40:28.346+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:28.446+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:28.547+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:28.647+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:28.747+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:28.847+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:28.947+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:29.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:40:29.047+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:29.147+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:29.248+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:29.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:40:29.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:40:29.348+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:29.448+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:29.548+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:29.648+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:29.748+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:29.849+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:29.949+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:30.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:40:30.049+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:30.149+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:30.249+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:30.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:40:30.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:40:30.349+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:30.449+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:30.550+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:30.650+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:30.750+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:30.850+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:30.950+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:31.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:40:31.050+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:31.150+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:31.251+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:31.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:40:31.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:40:31.351+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:31.451+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:31.551+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:31.651+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:31.751+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:31.852+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:31.952+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:32.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:40:32.052+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:32.152+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:32.252+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:32.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:40:32.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:40:32.352+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:32.452+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:32.552+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:32.653+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:32.753+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:32.853+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:32.953+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:33.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:40:33.053+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:33.153+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:33.254+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:33.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:40:33.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:40:33.354+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:33.454+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:33.554+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:33.654+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:33.754+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:33.854+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:33.955+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:34.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:40:34.055+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:34.155+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:34.255+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:34.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:40:34.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:40:34.356+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:34.456+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:34.556+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:34.656+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:34.756+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:34.857+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:34.957+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:35.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:40:35.057+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:35.157+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:35.257+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:35.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:40:35.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:40:35.357+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:35.457+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:35.557+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:35.658+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:35.758+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:35.858+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:35.958+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:36.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:40:36.058+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:36.158+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:36.259+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:36.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:40:36.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:40:36.359+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:36.459+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:36.559+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:36.659+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:36.759+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:36.860+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:36.952+0000 I  NETWORK  [listener] connection accepted from 172.16.19.208:53972 #1 (1 connection now open)
2020-10-02T20:40:36.952+0000 D3 EXECUTOR [listener] Starting new executor thread in passthrough mode
2020-10-02T20:40:36.952+0000 I  NETWORK  [listener] connection accepted from 172.16.19.208:53974 #2 (2 connections now open)
2020-10-02T20:40:36.952+0000 D3 EXECUTOR [listener] Starting new executor thread in passthrough mode
2020-10-02T20:40:36.952+0000 D2 COMMAND  [conn1] run command admin.$cmd { isMaster: 1, compression: [ "zlib", "snappy" ], client: { driver: { name: "mongo-go-driver", version: "v1.3.4" }, os: { type: "linux", architecture: "amd64" }, platform: "go1.13.10", application: { name: "mongosqld" } }, $readPreference: { mode: "secondaryPreferred" }, $db: "admin" }
2020-10-02T20:40:36.952+0000 D2 COMMAND  [conn2] run command admin.$cmd { isMaster: 1, compression: [ "zlib", "snappy" ], client: { driver: { name: "mongo-go-driver", version: "v1.3.4" }, os: { type: "linux", architecture: "amd64" }, platform: "go1.13.10", application: { name: "mongosqld" } }, $readPreference: { mode: "secondaryPreferred" }, $db: "admin" }
2020-10-02T20:40:36.952+0000 I  NETWORK  [conn2] received client metadata from 172.16.19.208:53974 conn2: { driver: { name: "mongo-go-driver", version: "v1.3.4" }, os: { type: "linux", architecture: "amd64" }, platform: "go1.13.10", application: { name: "mongosqld" } }
2020-10-02T20:40:36.952+0000 I  NETWORK  [conn1] received client metadata from 172.16.19.208:53972 conn1: { driver: { name: "mongo-go-driver", version: "v1.3.4" }, os: { type: "linux", architecture: "amd64" }, platform: "go1.13.10", application: { name: "mongosqld" } }
2020-10-02T20:40:36.952+0000 D3 NETWORK  [conn2] Starting server-side compression negotiation
2020-10-02T20:40:36.952+0000 D3 NETWORK  [conn2] zlib is supported
2020-10-02T20:40:36.952+0000 D3 NETWORK  [conn1] Starting server-side compression negotiation
2020-10-02T20:40:36.952+0000 D3 NETWORK  [conn1] zlib is supported
2020-10-02T20:40:36.952+0000 D3 NETWORK  [conn2] snappy is supported
2020-10-02T20:40:36.952+0000 D3 NETWORK  [conn1] snappy is supported
2020-10-02T20:40:36.952+0000 I  COMMAND  [conn1] command admin.$cmd appName: "mongosqld" command: isMaster { isMaster: 1, compression: [ "zlib", "snappy" ], client: { driver: { name: "mongo-go-driver", version: "v1.3.4" }, os: { type: "linux", architecture: "amd64" }, platform: "go1.13.10", application: { name: "mongosqld" } }, $readPreference: { mode: "secondaryPreferred" }, $db: "admin" } numYields:0 reslen:301 locks:{} protocol:op_query 0ms
2020-10-02T20:40:36.952+0000 I  COMMAND  [conn2] command admin.$cmd appName: "mongosqld" command: isMaster { isMaster: 1, compression: [ "zlib", "snappy" ], client: { driver: { name: "mongo-go-driver", version: "v1.3.4" }, os: { type: "linux", architecture: "amd64" }, platform: "go1.13.10", application: { name: "mongosqld" } }, $readPreference: { mode: "secondaryPreferred" }, $db: "admin" } numYields:0 reslen:301 locks:{} protocol:op_query 0ms
2020-10-02T20:40:36.953+0000 I  NETWORK  [listener] connection accepted from 172.16.19.208:53976 #3 (3 connections now open)
2020-10-02T20:40:36.953+0000 D3 EXECUTOR [listener] Starting new executor thread in passthrough mode
2020-10-02T20:40:36.954+0000 D2 COMMAND  [conn3] run command admin.$cmd { isMaster: 1, compression: [], client: { driver: { name: "mongo-go-driver", version: "v1.3.4" }, os: { type: "linux", architecture: "amd64" }, platform: "go1.13.10", application: { name: "mongosqld" } }, $readPreference: { mode: "secondaryPreferred" }, $db: "admin" }
2020-10-02T20:40:36.954+0000 I  NETWORK  [conn3] received client metadata from 172.16.19.208:53976 conn3: { driver: { name: "mongo-go-driver", version: "v1.3.4" }, os: { type: "linux", architecture: "amd64" }, platform: "go1.13.10", application: { name: "mongosqld" } }
2020-10-02T20:40:36.954+0000 D3 NETWORK  [conn3] Starting server-side compression negotiation
2020-10-02T20:40:36.954+0000 D3 NETWORK  [conn3] No compressors provided
2020-10-02T20:40:36.954+0000 I  COMMAND  [conn3] command admin.$cmd appName: "mongosqld" command: isMaster { isMaster: 1, compression: [], client: { driver: { name: "mongo-go-driver", version: "v1.3.4" }, os: { type: "linux", architecture: "amd64" }, platform: "go1.13.10", application: { name: "mongosqld" } }, $readPreference: { mode: "secondaryPreferred" }, $db: "admin" } numYields:0 reslen:257 locks:{} protocol:op_query 0ms
2020-10-02T20:40:36.955+0000 D2 NETWORK  [conn3] Session from 172.16.19.208:53976 encountered a network error during SourceMessage: HostUnreachable: Connection closed by peer
2020-10-02T20:40:36.955+0000 I  NETWORK  [conn3] end connection 172.16.19.208:53976 (2 connections now open)
2020-10-02T20:40:36.955+0000 D3 NETWORK  [conn3] Cancelling outstanding I/O operations on connection to 172.16.19.208:53976
2020-10-02T20:40:36.962+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:37.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:40:37.063+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:37.163+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:37.263+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:37.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:40:37.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:40:37.364+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:37.434+0000 D2 COMMAND  [conn2] run command admin.$cmd { isMaster: 1, $db: "admin" }
2020-10-02T20:40:37.434+0000 D3 NETWORK  [conn2] Starting server-side compression negotiation
2020-10-02T20:40:37.434+0000 I  COMMAND  [conn2] command admin.$cmd appName: "mongosqld" command: isMaster { isMaster: 1, $db: "admin" } numYields:0 reslen:286 locks:{} protocol:op_msg 0ms
2020-10-02T20:40:37.464+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:37.564+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:37.664+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:37.764+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:37.864+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:37.964+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:38.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:40:38.065+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:38.165+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:38.265+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:38.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:40:38.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:40:38.365+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:38.465+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:38.565+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:38.665+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:38.765+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:38.866+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:38.966+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:39.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:40:39.066+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:39.166+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:39.266+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:39.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:40:39.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:40:39.366+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:39.466+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:39.567+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:39.667+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:39.767+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:39.867+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:39.967+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:40.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:40:40.067+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:40.167+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:40.268+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:40.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:40:40.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:40:40.368+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:40.468+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:40.568+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:40.668+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:40.768+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:40.868+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:40.968+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:41.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:40:41.069+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:41.169+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:41.269+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:41.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:40:41.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:40:41.369+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:41.469+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:41.569+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:41.669+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:41.770+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:41.870+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:41.970+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:42.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:40:42.070+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:42.170+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:42.270+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:42.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:40:42.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:40:42.370+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:42.470+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:42.571+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:42.671+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:42.771+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:42.871+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:42.971+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:43.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:40:43.071+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:43.171+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:43.271+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:43.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:40:43.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:40:43.372+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:43.472+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:43.572+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:43.672+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:43.772+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:43.872+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:43.972+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:44.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:40:44.073+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:44.173+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:44.273+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:44.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:40:44.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:40:44.373+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:44.473+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:44.573+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:44.674+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:44.774+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:44.874+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:44.974+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:45.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:40:45.074+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:45.174+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:45.274+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:45.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:40:45.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:40:45.375+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:45.475+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:45.575+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:45.675+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:45.775+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:45.876+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:45.976+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:46.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:40:46.076+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:46.176+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:46.276+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:46.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:40:46.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:40:46.376+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:46.476+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:46.577+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:46.677+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:46.777+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:46.877+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:46.934+0000 D2 COMMAND  [conn1] run command admin.$cmd { isMaster: 1, $db: "admin" }
2020-10-02T20:40:46.934+0000 D2 COMMAND  [conn2] run command admin.$cmd { isMaster: 1, $db: "admin" }
2020-10-02T20:40:46.934+0000 D3 NETWORK  [conn2] Starting server-side compression negotiation
2020-10-02T20:40:46.934+0000 D3 NETWORK  [conn1] Starting server-side compression negotiation
2020-10-02T20:40:46.934+0000 I  COMMAND  [conn2] command admin.$cmd appName: "mongosqld" command: isMaster { isMaster: 1, $db: "admin" } numYields:0 reslen:286 locks:{} protocol:op_msg 0ms
2020-10-02T20:40:46.934+0000 I  COMMAND  [conn1] command admin.$cmd appName: "mongosqld" command: isMaster { isMaster: 1, $db: "admin" } numYields:0 reslen:286 locks:{} protocol:op_msg 0ms
2020-10-02T20:40:46.977+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:47.001+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:40:47.077+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:47.177+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:47.278+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:47.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:40:47.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:40:47.378+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:47.478+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:47.578+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:47.678+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:47.778+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:47.878+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:47.979+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:48.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:40:48.079+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:48.179+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:48.279+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:48.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:40:48.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:40:48.379+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:48.479+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:48.580+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:48.680+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:48.780+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:48.880+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:48.980+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:49.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:40:49.081+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:49.181+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:49.281+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:49.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:40:49.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:40:49.381+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:49.481+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:49.581+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:49.682+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:49.782+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:49.882+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:49.982+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:50.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:40:50.082+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:50.182+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:50.282+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:50.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:40:50.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:40:50.336+0000 D2 WRITE    [abortExpiredTransactions] Beginning scanSessions. Scanning 0 sessions.
2020-10-02T20:40:50.382+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:50.483+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:50.583+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:50.683+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:50.783+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:50.883+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:50.984+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:51.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:40:51.084+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:51.184+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:51.284+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:51.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:40:51.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:40:51.384+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:51.484+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:51.585+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:51.685+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:51.785+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:51.885+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:51.985+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:52.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:40:52.085+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:52.186+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:52.286+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:52.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:40:52.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:40:52.386+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:52.486+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:52.586+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:52.686+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:52.787+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:52.887+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:52.987+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:53.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:40:53.087+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:53.187+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:53.287+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:53.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:40:53.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:40:53.387+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:53.488+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:53.588+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:53.688+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:53.788+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:53.888+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:53.988+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:54.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:40:54.088+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:54.189+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:54.289+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:54.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:40:54.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:40:54.389+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:54.489+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:54.589+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:54.689+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:54.789+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:54.890+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:54.990+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:55.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:40:55.090+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:55.190+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:55.290+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:55.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:40:55.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:40:55.391+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:55.491+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:55.591+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:55.691+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:55.791+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:55.891+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:55.991+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:56.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:40:56.092+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:56.192+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:56.292+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:56.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:40:56.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:40:56.392+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:56.492+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:56.593+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:56.693+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:56.793+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:56.893+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:56.934+0000 D2 COMMAND  [conn2] run command admin.$cmd { isMaster: 1, $db: "admin" }
2020-10-02T20:40:56.934+0000 D2 COMMAND  [conn1] run command admin.$cmd { isMaster: 1, $db: "admin" }
2020-10-02T20:40:56.934+0000 D3 NETWORK  [conn2] Starting server-side compression negotiation
2020-10-02T20:40:56.934+0000 D3 NETWORK  [conn1] Starting server-side compression negotiation
2020-10-02T20:40:56.934+0000 I  COMMAND  [conn1] command admin.$cmd appName: "mongosqld" command: isMaster { isMaster: 1, $db: "admin" } numYields:0 reslen:286 locks:{} protocol:op_msg 0ms
2020-10-02T20:40:56.934+0000 I  COMMAND  [conn2] command admin.$cmd appName: "mongosqld" command: isMaster { isMaster: 1, $db: "admin" } numYields:0 reslen:286 locks:{} protocol:op_msg 0ms
2020-10-02T20:40:56.993+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:57.001+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:40:57.093+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:57.194+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:57.294+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:57.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:40:57.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:40:57.394+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:57.494+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:57.594+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:57.694+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:57.795+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:57.895+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:57.995+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:58.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:40:58.095+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:58.195+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:58.295+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:58.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:40:58.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:40:58.396+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:58.496+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:58.596+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:58.696+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:58.796+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:58.896+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:58.996+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:59.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:40:59.097+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:59.197+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:59.297+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:59.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:40:59.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:40:59.397+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:59.497+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:59.597+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:59.698+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:59.798+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:59.898+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:40:59.998+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:00.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:41:00.098+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:00.199+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:00.299+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:00.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:41:00.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:41:00.399+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:00.499+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:00.599+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:00.699+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:00.799+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:00.900+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:01.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:41:01.001+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:01.101+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:01.201+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:01.301+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:01.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:41:01.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:41:01.402+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:01.502+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:01.602+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:01.702+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:01.802+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:01.902+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:02.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:41:02.002+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:02.103+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:02.203+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:02.303+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:02.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:41:02.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:41:02.403+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:02.503+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:02.604+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:02.704+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:02.804+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:02.904+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:03.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:41:03.004+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:03.105+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:03.205+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:03.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:41:03.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:41:03.305+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:03.405+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:03.505+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:03.605+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:03.706+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:03.806+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:03.906+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:04.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:41:04.006+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:04.106+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:04.206+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:04.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:41:04.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:41:04.307+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:04.407+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:04.507+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:04.607+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:04.707+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:04.807+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:04.908+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:05.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:41:05.008+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:05.108+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:05.208+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:05.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:41:05.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:41:05.308+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:05.408+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:05.509+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:05.609+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:05.709+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:05.809+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:05.909+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:06.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:41:06.010+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:06.110+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:06.210+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:06.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:41:06.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:41:06.310+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:06.410+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:06.510+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:06.611+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:06.711+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:06.811+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:06.911+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:06.934+0000 D2 COMMAND  [conn1] run command admin.$cmd { isMaster: 1, $db: "admin" }
2020-10-02T20:41:06.934+0000 D2 COMMAND  [conn2] run command admin.$cmd { isMaster: 1, $db: "admin" }
2020-10-02T20:41:06.934+0000 D3 NETWORK  [conn2] Starting server-side compression negotiation
2020-10-02T20:41:06.934+0000 D3 NETWORK  [conn1] Starting server-side compression negotiation
2020-10-02T20:41:06.934+0000 I  COMMAND  [conn2] command admin.$cmd appName: "mongosqld" command: isMaster { isMaster: 1, $db: "admin" } numYields:0 reslen:286 locks:{} protocol:op_msg 0ms
2020-10-02T20:41:06.934+0000 I  COMMAND  [conn1] command admin.$cmd appName: "mongosqld" command: isMaster { isMaster: 1, $db: "admin" } numYields:0 reslen:286 locks:{} protocol:op_msg 0ms
2020-10-02T20:41:07.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:41:07.011+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:07.112+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:07.212+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:07.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:41:07.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:41:07.312+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:07.412+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:07.512+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:07.612+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:07.712+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:07.813+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:07.913+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:08.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:41:08.013+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:08.113+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:08.213+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:08.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:41:08.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:41:08.313+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:08.414+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:08.514+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:08.614+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:08.714+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:08.814+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:08.914+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:09.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:41:09.015+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:09.115+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:09.215+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:09.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:41:09.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:41:09.315+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:09.415+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:09.515+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:09.616+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:09.716+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:09.816+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:09.916+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:10.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:41:10.016+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:10.116+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:10.216+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:10.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:41:10.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:41:10.317+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:10.417+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:10.517+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:10.617+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:10.717+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:10.817+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:10.917+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:11.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:41:11.018+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:11.118+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:11.218+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:11.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:41:11.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:41:11.318+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:11.418+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:11.518+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:11.619+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:11.719+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:11.819+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:11.919+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:12.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:41:12.019+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:12.120+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:12.220+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:12.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:41:12.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:41:12.320+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:12.420+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:12.520+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:12.620+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:12.720+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:12.821+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:12.921+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:13.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:41:13.021+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:13.121+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:13.221+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:13.231+0000 I  NETWORK  [listener] connection accepted from 172.16.19.208:53998 #4 (3 connections now open)
2020-10-02T20:41:13.231+0000 D3 EXECUTOR [listener] Starting new executor thread in passthrough mode
2020-10-02T20:41:13.231+0000 D2 COMMAND  [conn4] run command admin.$cmd { isMaster: 1, compression: [ "zlib", "snappy" ], client: { driver: { name: "mongo-go-driver", version: "v1.3.4" }, os: { type: "linux", architecture: "amd64" }, platform: "go1.13.10", application: { name: "mongosqld" } }, $readPreference: { mode: "secondaryPreferred" }, $db: "admin" }
2020-10-02T20:41:13.231+0000 I  NETWORK  [conn4] received client metadata from 172.16.19.208:53998 conn4: { driver: { name: "mongo-go-driver", version: "v1.3.4" }, os: { type: "linux", architecture: "amd64" }, platform: "go1.13.10", application: { name: "mongosqld" } }
2020-10-02T20:41:13.231+0000 D3 NETWORK  [conn4] Starting server-side compression negotiation
2020-10-02T20:41:13.231+0000 D3 NETWORK  [conn4] zlib is supported
2020-10-02T20:41:13.231+0000 D3 NETWORK  [conn4] snappy is supported
2020-10-02T20:41:13.231+0000 I  COMMAND  [conn4] command admin.$cmd appName: "mongosqld" command: isMaster { isMaster: 1, compression: [ "zlib", "snappy" ], client: { driver: { name: "mongo-go-driver", version: "v1.3.4" }, os: { type: "linux", architecture: "amd64" }, platform: "go1.13.10", application: { name: "mongosqld" } }, $readPreference: { mode: "secondaryPreferred" }, $db: "admin" } numYields:0 reslen:301 locks:{} protocol:op_query 0ms
2020-10-02T20:41:13.232+0000 I  NETWORK  [listener] connection accepted from 172.16.19.208:54000 #5 (4 connections now open)
2020-10-02T20:41:13.232+0000 D3 EXECUTOR [listener] Starting new executor thread in passthrough mode
2020-10-02T20:41:13.232+0000 D2 COMMAND  [conn5] run command admin.$cmd { isMaster: 1, compression: [ "zlib", "snappy" ], client: { driver: { name: "mongo-go-driver", version: "v1.3.4" }, os: { type: "linux", architecture: "amd64" }, platform: "go1.13.10", application: { name: "mongosqld" } }, $readPreference: { mode: "secondaryPreferred" }, $db: "admin" }
2020-10-02T20:41:13.232+0000 I  NETWORK  [conn5] received client metadata from 172.16.19.208:54000 conn5: { driver: { name: "mongo-go-driver", version: "v1.3.4" }, os: { type: "linux", architecture: "amd64" }, platform: "go1.13.10", application: { name: "mongosqld" } }
2020-10-02T20:41:13.232+0000 D3 NETWORK  [conn5] Starting server-side compression negotiation
2020-10-02T20:41:13.232+0000 D3 NETWORK  [conn5] zlib is supported
2020-10-02T20:41:13.232+0000 D3 NETWORK  [conn5] snappy is supported
2020-10-02T20:41:13.232+0000 I  COMMAND  [conn5] command admin.$cmd appName: "mongosqld" command: isMaster { isMaster: 1, compression: [ "zlib", "snappy" ], client: { driver: { name: "mongo-go-driver", version: "v1.3.4" }, os: { type: "linux", architecture: "amd64" }, platform: "go1.13.10", application: { name: "mongosqld" } }, $readPreference: { mode: "secondaryPreferred" }, $db: "admin" } numYields:0 reslen:301 locks:{} protocol:op_query 0ms
2020-10-02T20:41:13.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:41:13.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:41:13.321+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:13.421+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:13.463+0000 D2 COMMAND  [conn4] run command $external.$cmd { saslStart: 1, mechanism: "GSSAPI", payload: "xxx", $db: "$external" }
2020-10-02T20:41:13.471+0000 I  COMMAND  [conn4] command $external.$cmd appName: "mongosqld" command: saslStart { saslStart: 1, mechanism: "GSSAPI", payload: "xxx", $db: "$external" } numYields:0 reslen:235 locks:{} protocol:op_msg 7ms
2020-10-02T20:41:13.472+0000 D2 COMMAND  [conn4] run command $external.$cmd { saslContinue: 1, conversationId: 1, payload: "xxx", $db: "$external" }
2020-10-02T20:41:13.472+0000 I  COMMAND  [conn4] command $external.$cmd appName: "mongosqld" command: saslContinue { saslContinue: 1, conversationId: 1, payload: "xxx", $db: "$external" } numYields:0 reslen:111 locks:{} protocol:op_msg 0ms
2020-10-02T20:41:13.472+0000 D2 COMMAND  [conn4] run command $external.$cmd { saslContinue: 1, conversationId: 1, payload: "xxx", $db: "$external" }
2020-10-02T20:41:13.473+0000 D1 ACCESS   [conn4] Getting user asadoma@is1.morgan@$external from disk
2020-10-02T20:41:13.473+0000 I  SHARDING [conn4] Marking collection admin.system.users as collection version: <unsharded>
2020-10-02T20:41:13.473+0000 D2 QUERY    [conn4] Relevant index 0 is kp: { user: 1, db: 1 } unique name: '(user_1_db_1, )' io: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }
2020-10-02T20:41:13.473+0000 D2 QUERY    [conn4] Only one plan is available; it will be run but will not be cached. ns: admin.system.users query: { user: "asadoma@is1.morgan", db: "$external" } sort: {} projection: {}, planSummary: IXSCAN { user: 1, db: 1 }
2020-10-02T20:41:13.473+0000 D3 STORAGE  [conn4] WT begin_transaction for snapshot id 618
2020-10-02T20:41:13.474+0000 D3 STORAGE  [conn4] WT rollback_transaction for snapshot id 618
2020-10-02T20:41:13.474+0000 I  ACCESS   [conn4] Successfully authenticated as principal asadoma@is1.morgan on $external from client 172.16.19.208:53998
2020-10-02T20:41:13.474+0000 I  COMMAND  [conn4] command admin.system.users appName: "mongosqld" command: saslContinue { saslContinue: 1, conversationId: 1, payload: "xxx", $db: "$external" } numYields:0 queryHash:0A298B98 planCacheKey:C2D1BA7E reslen:79 locks:{ ReplicationStateTransition: { acquireCount: { w: 1 } }, Global: { acquireCount: { r: 1 } }, Database: { acquireCount: { r: 1 } }, Collection: { acquireCount: { r: 1 } }, Mutex: { acquireCount: { r: 1 } } } storage:{ data: { bytesRead: 2371, timeReadingMicros: 4 } } protocol:op_msg 1ms
2020-10-02T20:41:13.475+0000 D2 COMMAND  [conn5] run command $external.$cmd { saslStart: 1, mechanism: "GSSAPI", payload: "xxx", $db: "$external" }
2020-10-02T20:41:13.482+0000 I  COMMAND  [conn5] command $external.$cmd appName: "mongosqld" command: saslStart { saslStart: 1, mechanism: "GSSAPI", payload: "xxx", $db: "$external" } numYields:0 reslen:235 locks:{} protocol:op_msg 6ms
2020-10-02T20:41:13.483+0000 D2 COMMAND  [conn5] run command $external.$cmd { saslContinue: 1, conversationId: 1, payload: "xxx", $db: "$external" }
2020-10-02T20:41:13.483+0000 I  COMMAND  [conn5] command $external.$cmd appName: "mongosqld" command: saslContinue { saslContinue: 1, conversationId: 1, payload: "xxx", $db: "$external" } numYields:0 reslen:111 locks:{} protocol:op_msg 0ms
2020-10-02T20:41:13.486+0000 D2 COMMAND  [conn5] run command $external.$cmd { saslContinue: 1, conversationId: 1, payload: "xxx", $db: "$external" }
2020-10-02T20:41:13.486+0000 D1 ACCESS   [conn5] Returning user asadoma@is1.morgan@$external from cache
2020-10-02T20:41:13.486+0000 I  ACCESS   [conn5] Successfully authenticated as principal asadoma@is1.morgan on $external from client 172.16.19.208:54000
2020-10-02T20:41:13.486+0000 I  COMMAND  [conn5] command $external.$cmd appName: "mongosqld" command: saslContinue { saslContinue: 1, conversationId: 1, payload: "xxx", $db: "$external" } numYields:0 reslen:79 locks:{} protocol:op_msg 0ms
2020-10-02T20:41:13.487+0000 I  NETWORK  [listener] connection accepted from 172.16.19.208:54002 #6 (5 connections now open)
2020-10-02T20:41:13.487+0000 D3 EXECUTOR [listener] Starting new executor thread in passthrough mode
2020-10-02T20:41:13.487+0000 D2 COMMAND  [conn6] run command admin.$cmd { isMaster: 1, compression: [], client: { driver: { name: "mongo-go-driver", version: "v1.3.4" }, os: { type: "linux", architecture: "amd64" }, platform: "go1.13.10", application: { name: "mongosqld" } }, $readPreference: { mode: "secondaryPreferred" }, $db: "admin" }
2020-10-02T20:41:13.487+0000 I  NETWORK  [conn6] received client metadata from 172.16.19.208:54002 conn6: { driver: { name: "mongo-go-driver", version: "v1.3.4" }, os: { type: "linux", architecture: "amd64" }, platform: "go1.13.10", application: { name: "mongosqld" } }
2020-10-02T20:41:13.487+0000 D3 NETWORK  [conn6] Starting server-side compression negotiation
2020-10-02T20:41:13.487+0000 D3 NETWORK  [conn6] No compressors provided
2020-10-02T20:41:13.487+0000 I  COMMAND  [conn6] command admin.$cmd appName: "mongosqld" command: isMaster { isMaster: 1, compression: [], client: { driver: { name: "mongo-go-driver", version: "v1.3.4" }, os: { type: "linux", architecture: "amd64" }, platform: "go1.13.10", application: { name: "mongosqld" } }, $readPreference: { mode: "secondaryPreferred" }, $db: "admin" } numYields:0 reslen:257 locks:{} protocol:op_query 0ms
2020-10-02T20:41:13.489+0000 D2 NETWORK  [conn6] Session from 172.16.19.208:54002 encountered a network error during SourceMessage: HostUnreachable: Connection closed by peer
2020-10-02T20:41:13.489+0000 I  NETWORK  [conn6] end connection 172.16.19.208:54002 (4 connections now open)
2020-10-02T20:41:13.489+0000 D3 NETWORK  [conn6] Cancelling outstanding I/O operations on connection to 172.16.19.208:54002
2020-10-02T20:41:13.489+0000 D2 NETWORK  [conn5] Session from 172.16.19.208:54000 encountered a network error during SourceMessage: HostUnreachable: Connection closed by peer
2020-10-02T20:41:13.489+0000 I  NETWORK  [conn5] end connection 172.16.19.208:54000 (3 connections now open)
2020-10-02T20:41:13.489+0000 D2 NETWORK  [conn4] Session from 172.16.19.208:53998 encountered a network error during SourceMessage: HostUnreachable: Connection closed by peer
2020-10-02T20:41:13.489+0000 D3 NETWORK  [conn5] Cancelling outstanding I/O operations on connection to 172.16.19.208:54000
2020-10-02T20:41:13.489+0000 I  NETWORK  [conn4] end connection 172.16.19.208:53998 (2 connections now open)
2020-10-02T20:41:13.489+0000 D3 NETWORK  [conn4] Cancelling outstanding I/O operations on connection to 172.16.19.208:53998
2020-10-02T20:41:13.522+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:13.622+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:13.722+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:13.822+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:13.922+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:14.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:41:14.023+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:14.123+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:14.223+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:14.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:41:14.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:41:14.323+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:14.424+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:14.524+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:14.624+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:14.724+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:14.824+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:14.924+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:15.003+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:41:15.025+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:15.125+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:15.225+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:15.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:41:15.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:41:15.325+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:15.425+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:15.526+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:15.626+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:15.726+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:15.826+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:15.926+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:16.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:41:16.026+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:16.127+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:16.227+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:16.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:41:16.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:41:16.327+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:16.427+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:16.527+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:16.627+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:16.728+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:16.828+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:16.928+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:16.934+0000 D2 COMMAND  [conn1] run command admin.$cmd { isMaster: 1, $db: "admin" }
2020-10-02T20:41:16.934+0000 D2 COMMAND  [conn2] run command admin.$cmd { isMaster: 1, $db: "admin" }
2020-10-02T20:41:16.934+0000 D3 NETWORK  [conn1] Starting server-side compression negotiation
2020-10-02T20:41:16.934+0000 D3 NETWORK  [conn2] Starting server-side compression negotiation
2020-10-02T20:41:16.934+0000 I  COMMAND  [conn2] command admin.$cmd appName: "mongosqld" command: isMaster { isMaster: 1, $db: "admin" } numYields:0 reslen:286 locks:{} protocol:op_msg 0ms
2020-10-02T20:41:16.934+0000 I  COMMAND  [conn1] command admin.$cmd appName: "mongosqld" command: isMaster { isMaster: 1, $db: "admin" } numYields:0 reslen:286 locks:{} protocol:op_msg 0ms
2020-10-02T20:41:17.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:41:17.028+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:17.128+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:17.228+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:17.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:41:17.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:41:17.329+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:17.429+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:17.529+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:17.629+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:17.729+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:17.829+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:17.930+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:18.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:41:18.030+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:18.130+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:18.230+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:18.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:41:18.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:41:18.330+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:18.430+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:18.530+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:18.631+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:18.731+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:18.831+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:18.931+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:19.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:41:19.031+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:19.131+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:19.231+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:19.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:41:19.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:41:19.332+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:19.432+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:19.532+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:19.632+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:19.732+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:19.832+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:19.932+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:20.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:41:20.033+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:20.133+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:20.233+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:20.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:41:20.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:41:20.333+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:20.336+0000 D2 WRITE    [abortExpiredTransactions] Beginning scanSessions. Scanning 0 sessions.
2020-10-02T20:41:20.337+0000 D3 COMMAND  [PeriodicTaskRunner] task: DBConnectionPool-cleaner took: 0ms
2020-10-02T20:41:20.337+0000 D3 COMMAND  [PeriodicTaskRunner] task: DBConnectionPool-cleaner took: 0ms
2020-10-02T20:41:20.337+0000 D2 -        [PeriodicTaskRunner] cleaning up unused lock buckets of the global lock manager
2020-10-02T20:41:20.337+0000 D3 COMMAND  [PeriodicTaskRunner] task: UnusedLockCleaner took: 0ms
2020-10-02T20:41:20.338+0000 D3 INDEX    [TTLMonitor] thread awake
2020-10-02T20:41:20.338+0000 D3 STORAGE  [TTLMonitor] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:41:20.338+0000 D3 STORAGE  [TTLMonitor] WT begin_transaction for snapshot id 644
2020-10-02T20:41:20.338+0000 D3 STORAGE  [TTLMonitor]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:41:20.338+0000 D3 STORAGE  [TTLMonitor] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:41:20.338+0000 D3 STORAGE  [TTLMonitor] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:41:20.338+0000 D3 STORAGE  [TTLMonitor]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:41:20.338+0000 D3 STORAGE  [TTLMonitor] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:41:20.338+0000 D3 STORAGE  [TTLMonitor] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:41:20.338+0000 D3 STORAGE  [TTLMonitor]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:41:20.338+0000 D3 STORAGE  [TTLMonitor] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:41:20.338+0000 D3 STORAGE  [TTLMonitor] WT rollback_transaction for snapshot id 644
2020-10-02T20:41:20.338+0000 D1 INDEX    [TTLMonitor] ns: config.system.sessions key: { lastUse: 1 } name: lsidTTLIndex
2020-10-02T20:41:20.338+0000 D4 -        [TTLMonitor] Taking ticket. Available: 1000000000
2020-10-02T20:41:20.338+0000 D3 STORAGE  [TTLMonitor] WT begin_transaction for snapshot id 645
2020-10-02T20:41:20.338+0000 D1 INDEX    [TTLMonitor] deleted: 0
2020-10-02T20:41:20.338+0000 D3 STORAGE  [TTLMonitor] WT rollback_transaction for snapshot id 645
2020-10-02T20:41:20.433+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:20.533+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:20.633+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:20.734+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:20.834+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:20.934+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:21.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:41:21.034+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:21.134+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:21.234+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:21.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:41:21.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 999999999 Now: 1000000000
2020-10-02T20:41:21.334+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:21.435+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:21.535+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:21.635+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:21.735+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:21.835+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:21.935+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:22.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:41:22.036+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:22.136+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:22.236+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:22.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:41:22.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:41:22.336+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:22.436+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:22.536+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:22.636+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:22.737+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:22.837+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:22.937+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:23.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:41:23.037+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:23.137+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:23.237+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:23.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:41:23.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:41:23.337+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:23.438+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:23.538+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:23.638+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:23.738+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:23.838+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:23.938+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:24.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:41:24.038+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:24.139+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:24.239+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:24.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:41:24.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:41:24.339+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:24.439+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:24.539+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:24.639+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:24.740+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:24.840+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:24.940+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:25.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:41:25.040+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:25.140+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:25.240+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:25.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:41:25.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:41:25.341+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:25.441+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:25.541+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:25.641+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:25.741+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:25.842+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:25.942+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:26.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:41:26.042+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:26.142+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:26.242+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:26.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:41:26.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:41:26.342+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:26.442+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:26.543+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:26.643+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:26.743+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:26.843+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:26.934+0000 D2 COMMAND  [conn1] run command admin.$cmd { isMaster: 1, $db: "admin" }
2020-10-02T20:41:26.934+0000 D2 COMMAND  [conn2] run command admin.$cmd { isMaster: 1, $db: "admin" }
2020-10-02T20:41:26.934+0000 D3 NETWORK  [conn2] Starting server-side compression negotiation
2020-10-02T20:41:26.934+0000 D3 NETWORK  [conn1] Starting server-side compression negotiation
2020-10-02T20:41:26.934+0000 I  COMMAND  [conn2] command admin.$cmd appName: "mongosqld" command: isMaster { isMaster: 1, $db: "admin" } numYields:0 reslen:286 locks:{} protocol:op_msg 0ms
2020-10-02T20:41:26.934+0000 I  COMMAND  [conn1] command admin.$cmd appName: "mongosqld" command: isMaster { isMaster: 1, $db: "admin" } numYields:0 reslen:286 locks:{} protocol:op_msg 0ms
2020-10-02T20:41:26.943+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:27.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:41:27.044+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:27.144+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:27.244+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:27.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:41:27.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:41:27.344+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:27.444+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:27.544+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:27.645+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:27.745+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:27.845+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:27.945+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:28.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:41:28.045+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:28.145+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:28.246+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:28.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:41:28.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:41:28.346+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:28.446+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:28.546+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:28.646+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:28.746+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:28.846+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:28.947+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:29.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:41:29.047+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:29.147+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:29.247+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:29.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:41:29.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:41:29.347+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:29.447+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:29.547+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:29.648+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:29.748+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:29.848+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:29.877+0000 I  NETWORK  [listener] connection accepted from 172.16.19.208:54016 #7 (3 connections now open)
2020-10-02T20:41:29.877+0000 D3 EXECUTOR [listener] Starting new executor thread in passthrough mode
2020-10-02T20:41:29.877+0000 D2 COMMAND  [conn7] run command admin.$cmd { isMaster: 1, compression: [ "zlib", "snappy" ], client: { driver: { name: "mongo-go-driver", version: "v1.3.4" }, os: { type: "linux", architecture: "amd64" }, platform: "go1.13.10", application: { name: "mongosqld" } }, $readPreference: { mode: "secondaryPreferred" }, $db: "admin" }
2020-10-02T20:41:29.877+0000 I  NETWORK  [conn7] received client metadata from 172.16.19.208:54016 conn7: { driver: { name: "mongo-go-driver", version: "v1.3.4" }, os: { type: "linux", architecture: "amd64" }, platform: "go1.13.10", application: { name: "mongosqld" } }
2020-10-02T20:41:29.877+0000 D3 NETWORK  [conn7] Starting server-side compression negotiation
2020-10-02T20:41:29.877+0000 D3 NETWORK  [conn7] zlib is supported
2020-10-02T20:41:29.877+0000 D3 NETWORK  [conn7] snappy is supported
2020-10-02T20:41:29.877+0000 I  COMMAND  [conn7] command admin.$cmd appName: "mongosqld" command: isMaster { isMaster: 1, compression: [ "zlib", "snappy" ], client: { driver: { name: "mongo-go-driver", version: "v1.3.4" }, os: { type: "linux", architecture: "amd64" }, platform: "go1.13.10", application: { name: "mongosqld" } }, $readPreference: { mode: "secondaryPreferred" }, $db: "admin" } numYields:0 reslen:301 locks:{} protocol:op_query 0ms
2020-10-02T20:41:29.878+0000 I  NETWORK  [listener] connection accepted from 172.16.19.208:54018 #8 (4 connections now open)
2020-10-02T20:41:29.878+0000 D3 EXECUTOR [listener] Starting new executor thread in passthrough mode
2020-10-02T20:41:29.879+0000 D2 COMMAND  [conn8] run command admin.$cmd { isMaster: 1, compression: [ "zlib", "snappy" ], client: { driver: { name: "mongo-go-driver", version: "v1.3.4" }, os: { type: "linux", architecture: "amd64" }, platform: "go1.13.10", application: { name: "mongosqld" } }, $readPreference: { mode: "secondaryPreferred" }, $db: "admin" }
2020-10-02T20:41:29.879+0000 I  NETWORK  [conn8] received client metadata from 172.16.19.208:54018 conn8: { driver: { name: "mongo-go-driver", version: "v1.3.4" }, os: { type: "linux", architecture: "amd64" }, platform: "go1.13.10", application: { name: "mongosqld" } }
2020-10-02T20:41:29.879+0000 D3 NETWORK  [conn8] Starting server-side compression negotiation
2020-10-02T20:41:29.879+0000 D3 NETWORK  [conn8] zlib is supported
2020-10-02T20:41:29.879+0000 D3 NETWORK  [conn8] snappy is supported
2020-10-02T20:41:29.879+0000 I  COMMAND  [conn8] command admin.$cmd appName: "mongosqld" command: isMaster { isMaster: 1, compression: [ "zlib", "snappy" ], client: { driver: { name: "mongo-go-driver", version: "v1.3.4" }, os: { type: "linux", architecture: "amd64" }, platform: "go1.13.10", application: { name: "mongosqld" } }, $readPreference: { mode: "secondaryPreferred" }, $db: "admin" } numYields:0 reslen:301 locks:{} protocol:op_query 0ms
2020-10-02T20:41:29.948+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:29.996+0000 D2 COMMAND  [conn7] run command $external.$cmd { saslStart: 1, mechanism: "GSSAPI", payload: "xxx", $db: "$external" }
2020-10-02T20:41:30.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:41:30.005+0000 I  COMMAND  [conn7] command $external.$cmd appName: "mongosqld" command: saslStart { saslStart: 1, mechanism: "GSSAPI", payload: "xxx", $db: "$external" } numYields:0 reslen:235 locks:{} protocol:op_msg 9ms
2020-10-02T20:41:30.006+0000 D2 COMMAND  [conn7] run command $external.$cmd { saslContinue: 1, conversationId: 1, payload: "xxx", $db: "$external" }
2020-10-02T20:41:30.006+0000 I  COMMAND  [conn7] command $external.$cmd appName: "mongosqld" command: saslContinue { saslContinue: 1, conversationId: 1, payload: "xxx", $db: "$external" } numYields:0 reslen:111 locks:{} protocol:op_msg 0ms
2020-10-02T20:41:30.006+0000 D2 COMMAND  [conn7] run command $external.$cmd { saslContinue: 1, conversationId: 1, payload: "xxx", $db: "$external" }
2020-10-02T20:41:30.007+0000 D1 ACCESS   [conn7] Returning user asadoma@is1.morgan@$external from cache
2020-10-02T20:41:30.007+0000 I  ACCESS   [conn7] Successfully authenticated as principal asadoma@is1.morgan on $external from client 172.16.19.208:54016
2020-10-02T20:41:30.007+0000 I  COMMAND  [conn7] command $external.$cmd appName: "mongosqld" command: saslContinue { saslContinue: 1, conversationId: 1, payload: "xxx", $db: "$external" } numYields:0 reslen:79 locks:{} protocol:op_msg 0ms
2020-10-02T20:41:30.010+0000 D2 COMMAND  [conn8] run command $external.$cmd { saslStart: 1, mechanism: "GSSAPI", payload: "xxx", $db: "$external" }
2020-10-02T20:41:30.020+0000 I  COMMAND  [conn8] command $external.$cmd appName: "mongosqld" command: saslStart { saslStart: 1, mechanism: "GSSAPI", payload: "xxx", $db: "$external" } numYields:0 reslen:234 locks:{} protocol:op_msg 9ms
2020-10-02T20:41:30.020+0000 D2 COMMAND  [conn8] run command $external.$cmd { saslContinue: 1, conversationId: 1, payload: "xxx", $db: "$external" }
2020-10-02T20:41:30.020+0000 I  COMMAND  [conn8] command $external.$cmd appName: "mongosqld" command: saslContinue { saslContinue: 1, conversationId: 1, payload: "xxx", $db: "$external" } numYields:0 reslen:111 locks:{} protocol:op_msg 0ms
2020-10-02T20:41:30.021+0000 D2 COMMAND  [conn8] run command $external.$cmd { saslContinue: 1, conversationId: 1, payload: "xxx", $db: "$external" }
2020-10-02T20:41:30.021+0000 D1 ACCESS   [conn8] Returning user asadoma@is1.morgan@$external from cache
2020-10-02T20:41:30.021+0000 I  ACCESS   [conn8] Successfully authenticated as principal asadoma@is1.morgan on $external from client 172.16.19.208:54018
2020-10-02T20:41:30.021+0000 I  COMMAND  [conn8] command $external.$cmd appName: "mongosqld" command: saslContinue { saslContinue: 1, conversationId: 1, payload: "xxx", $db: "$external" } numYields:0 reslen:79 locks:{} protocol:op_msg 0ms
2020-10-02T20:41:30.023+0000 I  NETWORK  [listener] connection accepted from 172.16.19.208:54020 #9 (5 connections now open)
2020-10-02T20:41:30.023+0000 D3 EXECUTOR [listener] Starting new executor thread in passthrough mode
2020-10-02T20:41:30.023+0000 D2 COMMAND  [conn9] run command admin.$cmd { isMaster: 1, compression: [], client: { driver: { name: "mongo-go-driver", version: "v1.3.4" }, os: { type: "linux", architecture: "amd64" }, platform: "go1.13.10", application: { name: "mongosqld" } }, $readPreference: { mode: "secondaryPreferred" }, $db: "admin" }
2020-10-02T20:41:30.023+0000 I  NETWORK  [conn9] received client metadata from 172.16.19.208:54020 conn9: { driver: { name: "mongo-go-driver", version: "v1.3.4" }, os: { type: "linux", architecture: "amd64" }, platform: "go1.13.10", application: { name: "mongosqld" } }
2020-10-02T20:41:30.023+0000 D3 NETWORK  [conn9] Starting server-side compression negotiation
2020-10-02T20:41:30.023+0000 D3 NETWORK  [conn9] No compressors provided
2020-10-02T20:41:30.023+0000 I  COMMAND  [conn9] command admin.$cmd appName: "mongosqld" command: isMaster { isMaster: 1, compression: [], client: { driver: { name: "mongo-go-driver", version: "v1.3.4" }, os: { type: "linux", architecture: "amd64" }, platform: "go1.13.10", application: { name: "mongosqld" } }, $readPreference: { mode: "secondaryPreferred" }, $db: "admin" } numYields:0 reslen:257 locks:{} protocol:op_query 0ms
2020-10-02T20:41:30.024+0000 D2 NETWORK  [conn9] Session from 172.16.19.208:54020 encountered a network error during SourceMessage: HostUnreachable: Connection closed by peer
2020-10-02T20:41:30.024+0000 I  NETWORK  [conn9] end connection 172.16.19.208:54020 (4 connections now open)
2020-10-02T20:41:30.024+0000 D3 NETWORK  [conn9] Cancelling outstanding I/O operations on connection to 172.16.19.208:54020
2020-10-02T20:41:30.024+0000 D2 NETWORK  [conn8] Session from 172.16.19.208:54018 encountered a network error during SourceMessage: HostUnreachable: Connection closed by peer
2020-10-02T20:41:30.024+0000 D2 NETWORK  [conn7] Session from 172.16.19.208:54016 encountered a network error during SourceMessage: HostUnreachable: Connection closed by peer
2020-10-02T20:41:30.024+0000 I  NETWORK  [conn8] end connection 172.16.19.208:54018 (3 connections now open)
2020-10-02T20:41:30.024+0000 I  NETWORK  [conn7] end connection 172.16.19.208:54016 (2 connections now open)
2020-10-02T20:41:30.024+0000 D3 NETWORK  [conn8] Cancelling outstanding I/O operations on connection to 172.16.19.208:54018
2020-10-02T20:41:30.024+0000 D3 NETWORK  [conn7] Cancelling outstanding I/O operations on connection to 172.16.19.208:54016
2020-10-02T20:41:30.048+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:30.148+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:30.248+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:30.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:41:30.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:41:30.349+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:30.449+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:30.549+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:30.649+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:30.749+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:30.849+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:30.950+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:31.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:41:31.050+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:31.150+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:31.250+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:31.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:41:31.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:41:31.350+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:31.450+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:31.551+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:31.651+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:31.751+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:31.851+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:31.951+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:32.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:41:32.052+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:32.152+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:32.252+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:32.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:41:32.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:41:32.352+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:32.452+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:32.552+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:32.653+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:32.753+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:32.853+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:32.953+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:33.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:41:33.053+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:33.153+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:33.254+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:33.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:41:33.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:41:33.354+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:33.454+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:33.554+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:33.654+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:33.754+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:33.854+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:33.955+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:34.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:41:34.055+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:34.155+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:34.255+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:34.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:41:34.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:41:34.355+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:34.455+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:34.556+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:34.656+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:34.756+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:34.856+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:34.956+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:35.002+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:41:35.057+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:35.157+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:35.257+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:35.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:41:35.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:41:35.357+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:35.457+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:35.557+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:35.657+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:35.758+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:35.858+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:35.958+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:36.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:41:36.058+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:36.158+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:36.259+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:36.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:41:36.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:41:36.359+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:36.459+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:36.559+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:36.659+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:36.759+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:36.859+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:36.934+0000 D2 COMMAND  [conn1] run command admin.$cmd { isMaster: 1, $db: "admin" }
2020-10-02T20:41:36.934+0000 D2 COMMAND  [conn2] run command admin.$cmd { isMaster: 1, $db: "admin" }
2020-10-02T20:41:36.934+0000 D3 NETWORK  [conn2] Starting server-side compression negotiation
2020-10-02T20:41:36.934+0000 D3 NETWORK  [conn1] Starting server-side compression negotiation
2020-10-02T20:41:36.934+0000 I  COMMAND  [conn1] command admin.$cmd appName: "mongosqld" command: isMaster { isMaster: 1, $db: "admin" } numYields:0 reslen:286 locks:{} protocol:op_msg 0ms
2020-10-02T20:41:36.934+0000 I  COMMAND  [conn2] command admin.$cmd appName: "mongosqld" command: isMaster { isMaster: 1, $db: "admin" } numYields:0 reslen:286 locks:{} protocol:op_msg 0ms
2020-10-02T20:41:36.960+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:37.001+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:41:37.060+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:37.160+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:37.260+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:37.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:41:37.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:41:37.360+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:37.460+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:37.560+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:37.661+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:37.761+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:37.861+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:37.961+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:38.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:41:38.061+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:38.161+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:38.261+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:38.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:41:38.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:41:38.362+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:38.462+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:38.562+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:38.662+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:38.762+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:38.862+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:38.962+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:39.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:41:39.063+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:39.163+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:39.263+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:39.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:41:39.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:41:39.363+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:39.463+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:39.563+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:39.663+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:39.764+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:39.864+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:39.964+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:40.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:41:40.064+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:40.164+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:40.265+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:40.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:41:40.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:41:40.365+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:40.465+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:40.565+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:40.665+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:40.765+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:40.865+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:40.966+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:41.001+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:41:41.066+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:41.166+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:41.266+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:41.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:41:41.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:41:41.366+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:41.467+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:41.567+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:41.667+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:41.767+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:41.867+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:41.967+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:42.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:41:42.067+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:42.168+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:42.268+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:42.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:41:42.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:41:42.368+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:42.468+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:42.568+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:42.668+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:42.769+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:42.869+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:42.969+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:43.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:41:43.069+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:43.169+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:43.270+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:43.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:41:43.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:41:43.370+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:43.470+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:43.570+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:43.670+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:43.770+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:43.870+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:43.970+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:44.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:41:44.071+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:44.171+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:44.271+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:44.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:41:44.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:41:44.371+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:44.471+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:44.571+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:44.672+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:44.772+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:44.872+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:44.972+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:45.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:41:45.072+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:45.172+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:45.272+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:45.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:41:45.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:41:45.373+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:45.473+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:45.573+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:45.673+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:45.773+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:45.873+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:45.974+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:46.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:41:46.074+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:46.174+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:46.274+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:46.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:41:46.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:41:46.374+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:46.474+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:46.575+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:46.675+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:46.775+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:46.875+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:46.934+0000 D2 COMMAND  [conn1] run command admin.$cmd { isMaster: 1, $db: "admin" }
2020-10-02T20:41:46.934+0000 D2 COMMAND  [conn2] run command admin.$cmd { isMaster: 1, $db: "admin" }
2020-10-02T20:41:46.934+0000 D3 NETWORK  [conn1] Starting server-side compression negotiation
2020-10-02T20:41:46.934+0000 D3 NETWORK  [conn2] Starting server-side compression negotiation
2020-10-02T20:41:46.934+0000 I  COMMAND  [conn1] command admin.$cmd appName: "mongosqld" command: isMaster { isMaster: 1, $db: "admin" } numYields:0 reslen:286 locks:{} protocol:op_msg 0ms
2020-10-02T20:41:46.934+0000 I  COMMAND  [conn2] command admin.$cmd appName: "mongosqld" command: isMaster { isMaster: 1, $db: "admin" } numYields:0 reslen:286 locks:{} protocol:op_msg 0ms
2020-10-02T20:41:46.975+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:47.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:41:47.076+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:47.176+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:47.276+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:47.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:41:47.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:41:47.376+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:47.476+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:47.576+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:47.677+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:47.777+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:47.877+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:47.978+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:48.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:41:48.078+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:48.178+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:48.278+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:48.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:41:48.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:41:48.379+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:48.479+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:48.579+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:48.679+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:48.779+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:48.879+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:48.979+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:49.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:41:49.080+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:49.180+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:49.280+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:49.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:41:49.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:41:49.380+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:49.480+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:49.580+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:49.681+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:49.781+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:49.881+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:49.981+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:50.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:41:50.081+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:50.182+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:50.282+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:50.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:41:50.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:41:50.336+0000 D2 WRITE    [abortExpiredTransactions] Beginning scanSessions. Scanning 0 sessions.
2020-10-02T20:41:50.382+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:50.482+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:50.582+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:50.683+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:50.783+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:50.883+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:50.984+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:51.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:41:51.084+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:51.184+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:51.284+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:51.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:41:51.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:41:51.384+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:51.485+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:51.585+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:51.685+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:51.785+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:51.885+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:51.986+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:52.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:41:52.086+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:52.186+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:52.286+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:52.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:41:52.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:41:52.386+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:52.487+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:52.587+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:52.687+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:52.787+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:52.887+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:52.987+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:53.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:41:53.088+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:53.188+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:53.288+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:53.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:41:53.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:41:53.388+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:53.488+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:53.588+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:53.688+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:53.789+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:53.889+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:53.989+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:54.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:41:54.089+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:54.189+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:54.290+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:54.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:41:54.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:41:54.390+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:54.490+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:54.590+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:54.690+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:54.791+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:54.891+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:54.991+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:55.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:41:55.091+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:55.191+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:55.291+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:55.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:41:55.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:41:55.392+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:55.492+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:55.592+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:55.692+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:55.792+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:55.892+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:55.993+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:56.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:41:56.093+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:56.193+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:56.293+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:56.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:41:56.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:41:56.393+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:56.494+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:56.594+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:56.695+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:56.795+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:56.896+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:56.934+0000 D2 COMMAND  [conn2] run command admin.$cmd { isMaster: 1, $db: "admin" }
2020-10-02T20:41:56.934+0000 D2 COMMAND  [conn1] run command admin.$cmd { isMaster: 1, $db: "admin" }
2020-10-02T20:41:56.934+0000 D3 NETWORK  [conn1] Starting server-side compression negotiation
2020-10-02T20:41:56.934+0000 D3 NETWORK  [conn2] Starting server-side compression negotiation
2020-10-02T20:41:56.934+0000 I  COMMAND  [conn1] command admin.$cmd appName: "mongosqld" command: isMaster { isMaster: 1, $db: "admin" } numYields:0 reslen:286 locks:{} protocol:op_msg 0ms
2020-10-02T20:41:56.934+0000 I  COMMAND  [conn2] command admin.$cmd appName: "mongosqld" command: isMaster { isMaster: 1, $db: "admin" } numYields:0 reslen:286 locks:{} protocol:op_msg 0ms
2020-10-02T20:41:56.996+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:57.001+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:41:57.096+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:57.196+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:57.296+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:57.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:41:57.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:41:57.396+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:57.497+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:57.597+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:57.697+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:57.797+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:57.897+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:57.997+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:58.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:41:58.098+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:58.198+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:58.298+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:58.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:41:58.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:41:58.398+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:58.498+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:58.598+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:58.699+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:58.799+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:58.899+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:58.999+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:59.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:41:59.099+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:59.199+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:59.300+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:59.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:41:59.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:41:59.400+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:59.500+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:59.600+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:59.700+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:59.800+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:41:59.901+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:00.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:42:00.001+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:00.102+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:00.202+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:00.302+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:00.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:42:00.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:42:00.403+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:00.503+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:00.603+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:00.703+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:00.803+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:00.904+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:01.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:42:01.004+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:01.104+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:01.204+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:01.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:42:01.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:42:01.304+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:01.404+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:01.505+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:01.605+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:01.705+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:01.805+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:01.905+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:02.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:42:02.005+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:02.106+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:02.206+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:02.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:42:02.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:42:02.306+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:02.406+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:02.507+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:02.607+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:02.707+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:02.808+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:02.908+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:03.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:42:03.008+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:03.108+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:03.208+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:03.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:42:03.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:42:03.308+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:03.409+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:03.509+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:03.609+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:03.709+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:03.809+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:03.909+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:04.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:42:04.009+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:04.110+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:04.210+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:04.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:42:04.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:42:04.310+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:04.410+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:04.510+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:04.610+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:04.711+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:04.811+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:04.911+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:05.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:42:05.011+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:05.111+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:05.211+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:05.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:42:05.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:42:05.311+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:05.412+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:05.512+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:05.612+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:05.712+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:05.738+0000 I  NETWORK  [listener] connection accepted from 172.16.19.208:54042 #10 (3 connections now open)
2020-10-02T20:42:05.738+0000 D3 EXECUTOR [listener] Starting new executor thread in passthrough mode
2020-10-02T20:42:05.739+0000 D2 COMMAND  [conn10] run command admin.$cmd { isMaster: 1, compression: [ "zlib", "snappy" ], client: { driver: { name: "mongo-go-driver", version: "v1.3.4" }, os: { type: "linux", architecture: "amd64" }, platform: "go1.13.10", application: { name: "mongosqld" } }, $readPreference: { mode: "secondaryPreferred" }, $db: "admin" }
2020-10-02T20:42:05.739+0000 I  NETWORK  [conn10] received client metadata from 172.16.19.208:54042 conn10: { driver: { name: "mongo-go-driver", version: "v1.3.4" }, os: { type: "linux", architecture: "amd64" }, platform: "go1.13.10", application: { name: "mongosqld" } }
2020-10-02T20:42:05.739+0000 D3 NETWORK  [conn10] Starting server-side compression negotiation
2020-10-02T20:42:05.739+0000 D3 NETWORK  [conn10] zlib is supported
2020-10-02T20:42:05.739+0000 D3 NETWORK  [conn10] snappy is supported
2020-10-02T20:42:05.739+0000 I  COMMAND  [conn10] command admin.$cmd appName: "mongosqld" command: isMaster { isMaster: 1, compression: [ "zlib", "snappy" ], client: { driver: { name: "mongo-go-driver", version: "v1.3.4" }, os: { type: "linux", architecture: "amd64" }, platform: "go1.13.10", application: { name: "mongosqld" } }, $readPreference: { mode: "secondaryPreferred" }, $db: "admin" } numYields:0 reslen:301 locks:{} protocol:op_query 0ms
2020-10-02T20:42:05.740+0000 I  NETWORK  [listener] connection accepted from 172.16.19.208:54044 #11 (4 connections now open)
2020-10-02T20:42:05.740+0000 D3 EXECUTOR [listener] Starting new executor thread in passthrough mode
2020-10-02T20:42:05.740+0000 D2 COMMAND  [conn11] run command admin.$cmd { isMaster: 1, compression: [ "zlib", "snappy" ], client: { driver: { name: "mongo-go-driver", version: "v1.3.4" }, os: { type: "linux", architecture: "amd64" }, platform: "go1.13.10", application: { name: "mongosqld" } }, $readPreference: { mode: "secondaryPreferred" }, $db: "admin" }
2020-10-02T20:42:05.740+0000 I  NETWORK  [conn11] received client metadata from 172.16.19.208:54044 conn11: { driver: { name: "mongo-go-driver", version: "v1.3.4" }, os: { type: "linux", architecture: "amd64" }, platform: "go1.13.10", application: { name: "mongosqld" } }
2020-10-02T20:42:05.740+0000 D3 NETWORK  [conn11] Starting server-side compression negotiation
2020-10-02T20:42:05.740+0000 D3 NETWORK  [conn11] zlib is supported
2020-10-02T20:42:05.740+0000 D3 NETWORK  [conn11] snappy is supported
2020-10-02T20:42:05.740+0000 I  COMMAND  [conn11] command admin.$cmd appName: "mongosqld" command: isMaster { isMaster: 1, compression: [ "zlib", "snappy" ], client: { driver: { name: "mongo-go-driver", version: "v1.3.4" }, os: { type: "linux", architecture: "amd64" }, platform: "go1.13.10", application: { name: "mongosqld" } }, $readPreference: { mode: "secondaryPreferred" }, $db: "admin" } numYields:0 reslen:301 locks:{} protocol:op_query 0ms
2020-10-02T20:42:05.812+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:05.897+0000 D2 COMMAND  [conn10] run command $external.$cmd { saslStart: 1, mechanism: "GSSAPI", payload: "xxx", $db: "$external" }
2020-10-02T20:42:05.906+0000 I  COMMAND  [conn10] command $external.$cmd appName: "mongosqld" command: saslStart { saslStart: 1, mechanism: "GSSAPI", payload: "xxx", $db: "$external" } numYields:0 reslen:235 locks:{} protocol:op_msg 8ms
2020-10-02T20:42:05.906+0000 D2 COMMAND  [conn10] run command $external.$cmd { saslContinue: 1, conversationId: 1, payload: "xxx", $db: "$external" }
2020-10-02T20:42:05.906+0000 I  COMMAND  [conn10] command $external.$cmd appName: "mongosqld" command: saslContinue { saslContinue: 1, conversationId: 1, payload: "xxx", $db: "$external" } numYields:0 reslen:111 locks:{} protocol:op_msg 0ms
2020-10-02T20:42:05.907+0000 D2 COMMAND  [conn10] run command $external.$cmd { saslContinue: 1, conversationId: 1, payload: "xxx", $db: "$external" }
2020-10-02T20:42:05.907+0000 D1 ACCESS   [conn10] Returning user asadoma@is1.morgan@$external from cache
2020-10-02T20:42:05.907+0000 I  ACCESS   [conn10] Successfully authenticated as principal asadoma@is1.morgan on $external from client 172.16.19.208:54042
2020-10-02T20:42:05.907+0000 I  COMMAND  [conn10] command $external.$cmd appName: "mongosqld" command: saslContinue { saslContinue: 1, conversationId: 1, payload: "xxx", $db: "$external" } numYields:0 reslen:79 locks:{} protocol:op_msg 0ms
2020-10-02T20:42:05.908+0000 D2 COMMAND  [conn11] run command $external.$cmd { saslStart: 1, mechanism: "GSSAPI", payload: "xxx", $db: "$external" }
2020-10-02T20:42:05.913+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:05.915+0000 I  COMMAND  [conn11] command $external.$cmd appName: "mongosqld" command: saslStart { saslStart: 1, mechanism: "GSSAPI", payload: "xxx", $db: "$external" } numYields:0 reslen:235 locks:{} protocol:op_msg 6ms
2020-10-02T20:42:05.916+0000 D2 COMMAND  [conn11] run command $external.$cmd { saslContinue: 1, conversationId: 1, payload: "xxx", $db: "$external" }
2020-10-02T20:42:05.916+0000 I  COMMAND  [conn11] command $external.$cmd appName: "mongosqld" command: saslContinue { saslContinue: 1, conversationId: 1, payload: "xxx", $db: "$external" } numYields:0 reslen:111 locks:{} protocol:op_msg 0ms
2020-10-02T20:42:05.916+0000 D2 COMMAND  [conn11] run command $external.$cmd { saslContinue: 1, conversationId: 1, payload: "xxx", $db: "$external" }
2020-10-02T20:42:05.916+0000 D1 ACCESS   [conn11] Returning user asadoma@is1.morgan@$external from cache
2020-10-02T20:42:05.916+0000 I  ACCESS   [conn11] Successfully authenticated as principal asadoma@is1.morgan on $external from client 172.16.19.208:54044
2020-10-02T20:42:05.916+0000 I  COMMAND  [conn11] command $external.$cmd appName: "mongosqld" command: saslContinue { saslContinue: 1, conversationId: 1, payload: "xxx", $db: "$external" } numYields:0 reslen:79 locks:{} protocol:op_msg 0ms
2020-10-02T20:42:05.918+0000 I  NETWORK  [listener] connection accepted from 172.16.19.208:54046 #12 (5 connections now open)
2020-10-02T20:42:05.918+0000 D3 EXECUTOR [listener] Starting new executor thread in passthrough mode
2020-10-02T20:42:05.918+0000 D2 COMMAND  [conn12] run command admin.$cmd { isMaster: 1, compression: [], client: { driver: { name: "mongo-go-driver", version: "v1.3.4" }, os: { type: "linux", architecture: "amd64" }, platform: "go1.13.10", application: { name: "mongosqld" } }, $readPreference: { mode: "secondaryPreferred" }, $db: "admin" }
2020-10-02T20:42:05.918+0000 I  NETWORK  [conn12] received client metadata from 172.16.19.208:54046 conn12: { driver: { name: "mongo-go-driver", version: "v1.3.4" }, os: { type: "linux", architecture: "amd64" }, platform: "go1.13.10", application: { name: "mongosqld" } }
2020-10-02T20:42:05.918+0000 D3 NETWORK  [conn12] Starting server-side compression negotiation
2020-10-02T20:42:05.918+0000 D3 NETWORK  [conn12] No compressors provided
2020-10-02T20:42:05.918+0000 I  COMMAND  [conn12] command admin.$cmd appName: "mongosqld" command: isMaster { isMaster: 1, compression: [], client: { driver: { name: "mongo-go-driver", version: "v1.3.4" }, os: { type: "linux", architecture: "amd64" }, platform: "go1.13.10", application: { name: "mongosqld" } }, $readPreference: { mode: "secondaryPreferred" }, $db: "admin" } numYields:0 reslen:257 locks:{} protocol:op_query 0ms
2020-10-02T20:42:05.919+0000 D2 NETWORK  [conn12] Session from 172.16.19.208:54046 encountered a network error during SourceMessage: HostUnreachable: Connection closed by peer
2020-10-02T20:42:05.919+0000 I  NETWORK  [conn12] end connection 172.16.19.208:54046 (4 connections now open)
2020-10-02T20:42:05.919+0000 D3 NETWORK  [conn12] Cancelling outstanding I/O operations on connection to 172.16.19.208:54046
2020-10-02T20:42:05.919+0000 D2 NETWORK  [conn11] Session from 172.16.19.208:54044 encountered a network error during SourceMessage: HostUnreachable: Connection closed by peer
2020-10-02T20:42:05.919+0000 D2 NETWORK  [conn10] Session from 172.16.19.208:54042 encountered a network error during SourceMessage: HostUnreachable: Connection closed by peer
2020-10-02T20:42:05.919+0000 I  NETWORK  [conn11] end connection 172.16.19.208:54044 (3 connections now open)
2020-10-02T20:42:05.919+0000 D3 NETWORK  [conn11] Cancelling outstanding I/O operations on connection to 172.16.19.208:54044
2020-10-02T20:42:05.919+0000 I  NETWORK  [conn10] end connection 172.16.19.208:54042 (2 connections now open)
2020-10-02T20:42:05.919+0000 D3 NETWORK  [conn10] Cancelling outstanding I/O operations on connection to 172.16.19.208:54042
2020-10-02T20:42:06.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:42:06.013+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:06.113+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:06.213+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:06.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:42:06.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:42:06.313+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:06.413+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:06.513+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:06.614+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:06.714+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:06.814+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:06.914+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:06.934+0000 D2 COMMAND  [conn1] run command admin.$cmd { isMaster: 1, $db: "admin" }
2020-10-02T20:42:06.934+0000 D2 COMMAND  [conn2] run command admin.$cmd { isMaster: 1, $db: "admin" }
2020-10-02T20:42:06.934+0000 D3 NETWORK  [conn2] Starting server-side compression negotiation
2020-10-02T20:42:06.934+0000 D3 NETWORK  [conn1] Starting server-side compression negotiation
2020-10-02T20:42:06.934+0000 I  COMMAND  [conn2] command admin.$cmd appName: "mongosqld" command: isMaster { isMaster: 1, $db: "admin" } numYields:0 reslen:286 locks:{} protocol:op_msg 0ms
2020-10-02T20:42:06.934+0000 I  COMMAND  [conn1] command admin.$cmd appName: "mongosqld" command: isMaster { isMaster: 1, $db: "admin" } numYields:0 reslen:286 locks:{} protocol:op_msg 0ms
2020-10-02T20:42:07.002+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:42:07.014+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:07.114+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:07.214+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:07.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:42:07.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:42:07.315+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:07.415+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:07.515+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:07.615+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:07.715+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:07.815+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:07.915+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:08.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:42:08.016+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:08.116+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:08.216+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:08.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:42:08.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:42:08.316+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:08.416+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:08.516+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:08.616+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:08.717+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:08.817+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:08.917+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:09.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:42:09.017+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:09.117+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:09.217+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:09.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:42:09.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:42:09.317+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:09.418+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:09.518+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:09.618+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:09.718+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:09.818+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:09.918+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:10.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:42:10.019+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:10.119+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:10.219+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:10.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:42:10.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:42:10.319+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:10.419+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:10.519+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:10.619+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:10.720+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:10.820+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:10.920+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:11.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:42:11.020+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:11.120+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:11.220+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:11.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:42:11.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:42:11.321+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:11.421+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:11.521+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:11.621+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:11.721+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:11.822+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:11.922+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:12.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:42:12.022+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:12.122+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:12.222+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:12.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:42:12.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:42:12.322+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:12.423+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:12.523+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:12.623+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:12.723+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:12.823+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:12.924+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:13.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:42:13.024+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:13.124+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:13.224+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:13.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:42:13.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:42:13.324+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:13.425+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:13.525+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:13.625+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:13.725+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:13.826+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:13.926+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:14.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:42:14.026+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:14.126+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:14.226+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:14.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:42:14.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:42:14.326+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:14.426+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:14.527+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:14.627+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:14.727+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:14.827+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:14.927+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:15.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:42:15.027+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:15.128+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:15.228+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:15.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:42:15.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:42:15.328+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:15.428+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:15.528+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:15.628+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:15.728+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:15.829+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:15.929+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:16.001+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:42:16.029+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:16.129+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:16.230+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:16.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:42:16.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:42:16.330+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:16.430+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:16.530+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:16.630+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:16.730+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:16.831+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:16.931+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:16.934+0000 D2 COMMAND  [conn1] run command admin.$cmd { isMaster: 1, $db: "admin" }
2020-10-02T20:42:16.934+0000 D2 COMMAND  [conn2] run command admin.$cmd { isMaster: 1, $db: "admin" }
2020-10-02T20:42:16.934+0000 D3 NETWORK  [conn1] Starting server-side compression negotiation
2020-10-02T20:42:16.934+0000 D3 NETWORK  [conn2] Starting server-side compression negotiation
2020-10-02T20:42:16.934+0000 I  COMMAND  [conn1] command admin.$cmd appName: "mongosqld" command: isMaster { isMaster: 1, $db: "admin" } numYields:0 reslen:286 locks:{} protocol:op_msg 0ms
2020-10-02T20:42:16.934+0000 I  COMMAND  [conn2] command admin.$cmd appName: "mongosqld" command: isMaster { isMaster: 1, $db: "admin" } numYields:0 reslen:286 locks:{} protocol:op_msg 0ms
2020-10-02T20:42:17.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:42:17.031+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:17.131+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:17.231+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:17.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:42:17.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:42:17.331+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:17.431+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:17.532+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:17.632+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:17.732+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:17.832+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:17.933+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:18.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:42:18.033+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:18.133+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:18.233+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:18.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:42:18.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:42:18.333+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:18.434+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:18.534+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:18.634+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:18.734+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:18.834+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:18.935+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:19.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:42:19.035+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:19.135+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:19.235+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:19.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:42:19.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:42:19.336+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:19.436+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:19.536+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:19.636+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:19.736+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:19.836+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:19.937+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:20.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:42:20.037+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:20.137+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:20.237+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:20.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:42:20.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:42:20.336+0000 D2 WRITE    [abortExpiredTransactions] Beginning scanSessions. Scanning 0 sessions.
2020-10-02T20:42:20.337+0000 D2 COMMAND  [LogicalSessionCacheRefresh] run command config.$cmd { listIndexes: "system.sessions", cursor: {}, $db: "config" }
2020-10-02T20:42:20.337+0000 D3 COMMAND  [PeriodicTaskRunner] task: DBConnectionPool-cleaner took: 0ms
2020-10-02T20:42:20.337+0000 D3 COMMAND  [PeriodicTaskRunner] task: DBConnectionPool-cleaner took: 0ms
2020-10-02T20:42:20.337+0000 D2 -        [PeriodicTaskRunner] cleaning up unused lock buckets of the global lock manager
2020-10-02T20:42:20.337+0000 D3 COMMAND  [PeriodicTaskRunner] task: UnusedLockCleaner took: 0ms
2020-10-02T20:42:20.337+0000 D3 STORAGE  [LogicalSessionCacheRefresh] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:42:20.337+0000 D2 COMMAND  [LogicalSessionCacheReap] run command config.$cmd { listIndexes: "system.sessions", cursor: {}, $db: "config" }
2020-10-02T20:42:20.337+0000 D3 STORAGE  [LogicalSessionCacheRefresh] WT begin_transaction for snapshot id 827
2020-10-02T20:42:20.337+0000 D3 STORAGE  [LogicalSessionCacheReap] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:42:20.337+0000 D3 STORAGE  [LogicalSessionCacheRefresh]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:42:20.337+0000 D3 STORAGE  [LogicalSessionCacheReap] WT begin_transaction for snapshot id 826
2020-10-02T20:42:20.337+0000 D3 STORAGE  [LogicalSessionCacheRefresh] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:42:20.337+0000 D3 STORAGE  [LogicalSessionCacheReap]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:42:20.337+0000 D3 STORAGE  [LogicalSessionCacheRefresh] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:42:20.337+0000 D3 STORAGE  [LogicalSessionCacheReap] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:42:20.337+0000 D3 STORAGE  [LogicalSessionCacheRefresh]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:42:20.337+0000 D3 STORAGE  [LogicalSessionCacheReap] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:42:20.337+0000 D3 STORAGE  [LogicalSessionCacheRefresh] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:42:20.337+0000 D3 STORAGE  [LogicalSessionCacheReap]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:42:20.337+0000 D3 STORAGE  [LogicalSessionCacheRefresh] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:42:20.337+0000 D3 STORAGE  [LogicalSessionCacheReap] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:42:20.337+0000 D3 STORAGE  [LogicalSessionCacheRefresh]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:42:20.337+0000 D3 STORAGE  [LogicalSessionCacheReap] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:42:20.337+0000 D3 STORAGE  [LogicalSessionCacheRefresh] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:42:20.337+0000 D3 STORAGE  [LogicalSessionCacheReap]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:42:20.337+0000 D3 STORAGE  [LogicalSessionCacheReap] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:42:20.337+0000 D3 STORAGE  [LogicalSessionCacheRefresh] WT rollback_transaction for snapshot id 827
2020-10-02T20:42:20.337+0000 D3 STORAGE  [LogicalSessionCacheReap] WT rollback_transaction for snapshot id 826
2020-10-02T20:42:20.337+0000 I  COMMAND  [LogicalSessionCacheReap] command config.system.sessions command: listIndexes { listIndexes: "system.sessions", cursor: {}, $db: "config" } numYields:0 reslen:307 locks:{ ReplicationStateTransition: { acquireCount: { w: 1 } }, Global: { acquireCount: { r: 1 } }, Database: { acquireCount: { r: 1 } }, Collection: { acquireCount: { r: 1 } }, Mutex: { acquireCount: { r: 1 } } } storage:{} protocol:op_msg 0ms
2020-10-02T20:42:20.337+0000 I  COMMAND  [LogicalSessionCacheRefresh] command config.system.sessions command: listIndexes { listIndexes: "system.sessions", cursor: {}, $db: "config" } numYields:0 reslen:307 locks:{ ReplicationStateTransition: { acquireCount: { w: 1 } }, Global: { acquireCount: { r: 1 } }, Database: { acquireCount: { r: 1 } }, Collection: { acquireCount: { r: 1 } }, Mutex: { acquireCount: { r: 1 } } } storage:{} protocol:op_msg 0ms
2020-10-02T20:42:20.337+0000 D2 WRITE    [LogicalSessionCacheReap] Beginning scanSessions. Scanning 0 sessions.
2020-10-02T20:42:20.337+0000 D2 COMMAND  [LogicalSessionCacheReap] run command config.$cmd { find: "transactions", filter: { lastWriteDate: { $lt: new Date(1601669540337) } }, projection: { _id: 1 }, sort: { _id: 1 }, $db: "config" }
2020-10-02T20:42:20.337+0000 D2 QUERY    [LogicalSessionCacheReap] Collection config.transactions does not exist. Using EOF plan: ns: config.transactions query: { lastWriteDate: { $lt: new Date(1601669540337) } } sort: { _id: 1 } projection: { _id: 1 }
2020-10-02T20:42:20.337+0000 I  COMMAND  [LogicalSessionCacheReap] command config.transactions command: find { find: "transactions", filter: { lastWriteDate: { $lt: new Date(1601669540337) } }, projection: { _id: 1 }, sort: { _id: 1 }, $db: "config" } planSummary: EOF keysExamined:0 docsExamined:0 cursorExhausted:1 numYields:0 nreturned:0 reslen:108 locks:{ ReplicationStateTransition: { acquireCount: { w: 1 } }, Global: { acquireCount: { r: 1 } }, Database: { acquireCount: { r: 1 } }, Collection: { acquireCount: { r: 2 } }, Mutex: { acquireCount: { r: 1 } } } storage:{} protocol:op_msg 0ms
2020-10-02T20:42:20.337+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:20.338+0000 D3 INDEX    [TTLMonitor] thread awake
2020-10-02T20:42:20.338+0000 D3 STORAGE  [TTLMonitor] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:42:20.338+0000 D3 STORAGE  [TTLMonitor] WT begin_transaction for snapshot id 830
2020-10-02T20:42:20.338+0000 D3 STORAGE  [TTLMonitor]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:42:20.338+0000 D3 STORAGE  [TTLMonitor] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:42:20.338+0000 D3 STORAGE  [TTLMonitor] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:42:20.338+0000 D3 STORAGE  [TTLMonitor]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:42:20.338+0000 D3 STORAGE  [TTLMonitor] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:42:20.338+0000 D3 STORAGE  [TTLMonitor] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:42:20.338+0000 D3 STORAGE  [TTLMonitor]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:42:20.338+0000 D3 STORAGE  [TTLMonitor] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:42:20.338+0000 D3 STORAGE  [TTLMonitor] WT rollback_transaction for snapshot id 830
2020-10-02T20:42:20.338+0000 D1 INDEX    [TTLMonitor] ns: config.system.sessions key: { lastUse: 1 } name: lsidTTLIndex
2020-10-02T20:42:20.338+0000 D4 -        [TTLMonitor] Taking ticket. Available: 1000000000
2020-10-02T20:42:20.338+0000 D3 STORAGE  [TTLMonitor] WT begin_transaction for snapshot id 831
2020-10-02T20:42:20.338+0000 D1 INDEX    [TTLMonitor] deleted: 0
2020-10-02T20:42:20.338+0000 D3 STORAGE  [TTLMonitor] WT rollback_transaction for snapshot id 831
2020-10-02T20:42:20.437+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:20.537+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:20.638+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:20.738+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:20.838+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:20.938+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:21.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:42:21.038+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:21.138+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:21.238+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:21.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:42:21.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 999999999 Now: 1000000000
2020-10-02T20:42:21.339+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:21.439+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:21.539+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:21.639+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:21.739+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:21.840+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:21.940+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:22.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:42:22.040+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:22.140+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:22.240+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:22.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:42:22.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:42:22.340+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:22.441+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:22.541+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:22.641+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:22.742+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:22.842+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:22.942+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:23.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:42:23.042+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:23.143+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:23.243+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:23.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:42:23.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:42:23.343+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:23.443+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:23.544+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:23.644+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:23.744+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:23.844+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:23.944+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:24.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:42:24.044+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:24.144+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:24.245+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:24.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:42:24.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:42:24.345+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:24.445+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:24.545+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:24.645+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:24.745+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:24.845+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:24.946+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:25.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:42:25.046+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:25.146+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:25.246+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:25.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:42:25.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:42:25.346+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:25.446+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:25.547+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:25.647+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:25.747+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:25.847+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:25.947+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:26.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:42:26.047+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:26.147+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:26.248+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:26.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:42:26.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:42:26.348+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:26.448+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:26.548+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:26.648+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:26.748+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:26.849+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:26.934+0000 D2 COMMAND  [conn2] run command admin.$cmd { isMaster: 1, $db: "admin" }
2020-10-02T20:42:26.934+0000 D2 COMMAND  [conn1] run command admin.$cmd { isMaster: 1, $db: "admin" }
2020-10-02T20:42:26.934+0000 D3 NETWORK  [conn1] Starting server-side compression negotiation
2020-10-02T20:42:26.934+0000 D3 NETWORK  [conn2] Starting server-side compression negotiation
2020-10-02T20:42:26.934+0000 I  COMMAND  [conn1] command admin.$cmd appName: "mongosqld" command: isMaster { isMaster: 1, $db: "admin" } numYields:0 reslen:286 locks:{} protocol:op_msg 0ms
2020-10-02T20:42:26.934+0000 I  COMMAND  [conn2] command admin.$cmd appName: "mongosqld" command: isMaster { isMaster: 1, $db: "admin" } numYields:0 reslen:286 locks:{} protocol:op_msg 0ms
2020-10-02T20:42:26.949+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:27.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:42:27.049+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:27.149+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:27.249+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:27.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:42:27.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:42:27.349+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:27.450+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:27.550+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:27.650+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:27.750+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:27.850+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:27.951+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:28.006+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:42:28.051+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:28.151+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:28.251+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:28.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:42:28.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:42:28.351+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:28.452+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:28.552+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:28.652+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:28.752+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:28.852+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:28.953+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:29.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:42:29.053+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:29.153+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:29.253+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:29.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:42:29.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:42:29.353+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:29.453+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:29.554+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:29.654+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:29.754+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:29.854+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:29.954+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:30.003+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:42:30.055+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:30.155+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:30.255+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:30.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:42:30.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:42:30.355+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:30.455+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:30.555+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:30.655+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:30.756+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:30.856+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:30.956+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:31.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:42:31.056+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:31.156+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:31.257+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:31.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:42:31.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:42:31.357+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:31.457+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:31.557+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:31.657+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:31.757+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:31.858+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:31.958+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:32.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:42:32.058+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:32.158+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:32.258+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:32.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:42:32.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:42:32.359+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:32.459+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:32.559+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:32.659+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:32.759+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:32.859+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:32.960+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:33.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:42:33.060+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:33.160+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:33.260+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:33.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:42:33.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:42:33.360+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:33.460+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:33.560+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:33.661+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:33.761+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:33.861+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:33.961+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:34.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:42:34.062+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:34.162+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:34.262+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:34.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:42:34.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:42:34.362+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:34.462+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:34.562+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:34.663+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:34.763+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:34.863+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:34.963+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:35.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:42:35.063+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:35.163+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:35.264+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:35.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:42:35.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:42:35.364+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:35.464+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:35.564+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:35.664+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:35.764+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:35.865+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:35.965+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:36.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:42:36.065+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:36.165+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:36.265+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:36.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:42:36.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:42:36.365+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:36.466+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:36.566+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:36.666+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:36.766+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:36.866+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:36.935+0000 D2 COMMAND  [conn1] run command admin.$cmd { isMaster: 1, $db: "admin" }
2020-10-02T20:42:36.935+0000 D2 COMMAND  [conn2] run command admin.$cmd { isMaster: 1, $db: "admin" }
2020-10-02T20:42:36.935+0000 D3 NETWORK  [conn2] Starting server-side compression negotiation
2020-10-02T20:42:36.935+0000 D3 NETWORK  [conn1] Starting server-side compression negotiation
2020-10-02T20:42:36.936+0000 I  COMMAND  [conn1] command admin.$cmd appName: "mongosqld" command: isMaster { isMaster: 1, $db: "admin" } numYields:0 reslen:286 locks:{} protocol:op_msg 0ms
2020-10-02T20:42:36.936+0000 I  COMMAND  [conn2] command admin.$cmd appName: "mongosqld" command: isMaster { isMaster: 1, $db: "admin" } numYields:0 reslen:286 locks:{} protocol:op_msg 0ms
2020-10-02T20:42:36.966+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:37.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:42:37.067+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:37.167+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:37.267+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:37.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:42:37.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:42:37.367+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:37.467+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:37.567+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:37.668+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:37.768+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:37.868+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:37.968+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:38.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:42:38.068+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:38.168+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:38.268+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:38.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:42:38.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:42:38.369+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:38.469+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:38.569+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:38.669+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:38.769+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:38.869+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:38.970+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:39.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:42:39.070+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:39.170+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:39.270+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:39.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:42:39.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:42:39.370+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:39.470+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:39.570+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:39.671+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:39.771+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:39.871+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:39.971+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:40.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:42:40.071+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:40.171+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:40.272+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:40.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:42:40.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:42:40.372+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:40.472+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:40.572+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:40.672+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:40.772+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:40.872+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:40.973+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:41.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:42:41.073+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:41.173+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:41.273+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:41.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:42:41.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:42:41.373+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:41.474+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:41.574+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:41.674+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:41.774+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:41.874+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:41.975+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:42.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:42:42.075+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:42.175+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:42.275+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:42.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:42:42.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:42:42.375+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:42.476+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:42.576+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:42.676+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:42.776+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:42.876+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:42.976+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:43.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:42:43.076+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:43.177+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:43.277+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:43.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:42:43.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:42:43.377+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:43.477+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:43.577+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:43.677+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:43.778+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:43.878+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:43.978+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:44.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:42:44.078+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:44.178+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:44.279+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:44.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:42:44.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:42:44.379+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:44.479+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:44.579+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:44.679+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:44.779+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:44.880+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:44.980+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:45.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:42:45.080+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:45.180+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:45.280+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:45.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:42:45.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:42:45.380+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:45.481+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:45.581+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:45.681+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:45.781+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:45.881+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:45.981+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:46.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:42:46.081+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:46.182+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:46.282+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:46.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:42:46.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:42:46.382+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:46.482+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:46.582+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:46.682+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:46.783+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:46.883+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:46.934+0000 D2 COMMAND  [conn2] run command admin.$cmd { isMaster: 1, $db: "admin" }
2020-10-02T20:42:46.934+0000 D2 COMMAND  [conn1] run command admin.$cmd { isMaster: 1, $db: "admin" }
2020-10-02T20:42:46.934+0000 D3 NETWORK  [conn1] Starting server-side compression negotiation
2020-10-02T20:42:46.934+0000 D3 NETWORK  [conn2] Starting server-side compression negotiation
2020-10-02T20:42:46.934+0000 I  COMMAND  [conn2] command admin.$cmd appName: "mongosqld" command: isMaster { isMaster: 1, $db: "admin" } numYields:0 reslen:286 locks:{} protocol:op_msg 0ms
2020-10-02T20:42:46.934+0000 I  COMMAND  [conn1] command admin.$cmd appName: "mongosqld" command: isMaster { isMaster: 1, $db: "admin" } numYields:0 reslen:286 locks:{} protocol:op_msg 0ms
2020-10-02T20:42:46.983+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:47.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:42:47.083+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:47.183+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:47.284+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:47.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:42:47.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:42:47.384+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:47.484+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:47.584+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:47.684+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:47.784+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:47.885+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:47.985+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:48.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:42:48.085+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:48.185+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:48.285+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:48.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:42:48.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:42:48.386+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:48.486+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:48.586+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:48.686+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:48.786+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:48.887+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:48.987+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:49.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:42:49.087+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:49.187+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:49.287+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:49.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:42:49.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:42:49.387+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:49.487+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:49.588+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:49.688+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:49.788+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:49.888+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:49.988+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:50.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:42:50.088+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:50.188+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:50.289+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:50.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:42:50.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:42:50.336+0000 D2 WRITE    [abortExpiredTransactions] Beginning scanSessions. Scanning 0 sessions.
2020-10-02T20:42:50.389+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:50.489+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:50.589+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:50.689+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:50.790+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:50.890+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:50.990+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:51.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:42:51.090+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:51.190+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:51.291+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:51.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:42:51.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:42:51.391+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:51.491+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:51.591+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:51.691+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:51.792+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:51.892+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:51.992+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:52.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:42:52.092+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:52.192+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:52.293+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:52.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:42:52.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:42:52.393+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:52.493+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:52.593+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:52.693+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:52.793+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:52.893+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:52.994+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:53.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:42:53.094+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:53.194+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:53.294+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:53.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:42:53.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:42:53.394+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:53.494+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:53.595+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:53.695+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:53.795+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:53.895+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:53.995+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:54.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:42:54.096+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:54.196+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:54.296+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:54.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:42:54.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:42:54.396+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:54.496+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:54.596+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:54.697+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:54.797+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:54.897+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:54.997+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:55.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:42:55.097+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:55.197+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:55.298+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:55.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:42:55.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:42:55.398+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:55.498+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:55.598+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:55.698+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:55.798+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:55.898+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:55.999+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:56.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:42:56.099+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:56.199+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:56.299+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:56.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:42:56.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:42:56.399+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:56.499+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:56.600+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:56.700+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:56.800+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:56.900+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:56.934+0000 D2 COMMAND  [conn1] run command admin.$cmd { isMaster: 1, $db: "admin" }
2020-10-02T20:42:56.934+0000 D2 COMMAND  [conn2] run command admin.$cmd { isMaster: 1, $db: "admin" }
2020-10-02T20:42:56.934+0000 D3 NETWORK  [conn1] Starting server-side compression negotiation
2020-10-02T20:42:56.934+0000 D3 NETWORK  [conn2] Starting server-side compression negotiation
2020-10-02T20:42:56.934+0000 I  COMMAND  [conn1] command admin.$cmd appName: "mongosqld" command: isMaster { isMaster: 1, $db: "admin" } numYields:0 reslen:286 locks:{} protocol:op_msg 0ms
2020-10-02T20:42:56.934+0000 I  COMMAND  [conn2] command admin.$cmd appName: "mongosqld" command: isMaster { isMaster: 1, $db: "admin" } numYields:0 reslen:286 locks:{} protocol:op_msg 0ms
2020-10-02T20:42:57.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:42:57.001+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:57.101+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:57.201+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:57.301+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:57.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:42:57.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:42:57.401+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:57.502+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:57.602+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:57.702+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:57.802+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:57.903+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:58.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:42:58.003+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:58.103+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:58.203+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:58.303+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:58.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:42:58.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:42:58.403+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:58.504+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:58.604+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:58.704+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:58.804+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:58.904+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:59.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:42:59.005+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:59.105+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:59.205+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:59.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:42:59.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:42:59.305+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:59.405+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:59.505+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:59.605+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:59.706+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:59.806+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:42:59.906+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:00.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:43:00.006+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:00.106+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:00.206+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:00.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:43:00.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:43:00.307+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:00.407+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:00.507+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:00.607+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:00.707+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:00.807+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:00.908+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:01.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:43:01.008+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:01.108+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:01.208+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:01.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:43:01.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:43:01.308+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:01.408+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:01.508+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:01.609+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:01.709+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:01.809+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:01.909+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:02.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:43:02.009+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:02.110+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:02.210+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:02.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:43:02.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:43:02.310+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:02.410+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:02.510+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:02.610+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:02.711+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:02.811+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:02.911+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:03.002+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:43:03.011+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:03.111+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:03.212+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:03.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:43:03.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:43:03.312+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:03.412+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:03.512+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:03.612+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:03.712+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:03.813+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:03.913+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:04.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:43:04.013+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:04.113+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:04.213+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:04.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:43:04.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:43:04.313+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:04.414+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:04.514+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:04.614+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:04.714+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:04.814+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:04.914+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:05.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:43:05.015+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:05.115+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:05.215+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:05.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:43:05.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:43:05.315+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:05.415+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:05.516+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:05.616+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:05.716+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:05.816+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:05.916+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:06.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:43:06.016+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:06.117+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:06.217+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:06.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:43:06.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:43:06.317+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:06.417+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:06.517+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:06.617+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:06.717+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:06.818+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:06.918+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:06.934+0000 D2 COMMAND  [conn2] run command admin.$cmd { isMaster: 1, $db: "admin" }
2020-10-02T20:43:06.934+0000 D2 COMMAND  [conn1] run command admin.$cmd { isMaster: 1, $db: "admin" }
2020-10-02T20:43:06.934+0000 D3 NETWORK  [conn1] Starting server-side compression negotiation
2020-10-02T20:43:06.934+0000 D3 NETWORK  [conn2] Starting server-side compression negotiation
2020-10-02T20:43:06.934+0000 I  COMMAND  [conn2] command admin.$cmd appName: "mongosqld" command: isMaster { isMaster: 1, $db: "admin" } numYields:0 reslen:286 locks:{} protocol:op_msg 0ms
2020-10-02T20:43:06.934+0000 I  COMMAND  [conn1] command admin.$cmd appName: "mongosqld" command: isMaster { isMaster: 1, $db: "admin" } numYields:0 reslen:286 locks:{} protocol:op_msg 0ms
2020-10-02T20:43:07.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:43:07.018+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:07.118+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:07.218+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:07.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:43:07.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:43:07.319+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:07.419+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:07.519+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:07.619+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:07.719+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:07.819+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:07.919+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:08.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:43:08.020+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:08.120+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:08.220+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:08.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:43:08.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:43:08.320+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:08.420+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:08.520+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:08.621+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:08.721+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:08.821+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:08.921+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:09.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:43:09.021+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:09.121+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:09.222+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:09.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:43:09.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:43:09.322+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:09.422+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:09.522+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:09.622+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:09.722+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:09.823+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:09.923+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:10.001+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:43:10.023+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:10.123+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:10.223+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:10.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:43:10.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:43:10.324+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:10.424+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:10.524+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:10.624+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:10.724+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:10.824+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:10.924+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:11.001+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:43:11.025+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:11.125+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:11.225+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:11.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:43:11.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:43:11.325+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:11.425+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:11.525+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:11.625+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:11.726+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:11.826+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:11.926+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:12.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:43:12.026+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:12.126+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:12.226+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:12.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:43:12.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:43:12.327+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:12.427+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:12.527+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:12.627+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:12.727+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:12.827+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:12.927+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:13.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:43:13.028+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:13.128+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:13.228+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:13.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:43:13.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:43:13.328+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:13.428+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:13.528+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:13.628+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:13.728+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:13.829+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:13.929+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:14.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:43:14.029+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:14.129+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:14.229+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:14.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:43:14.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:43:14.329+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:14.429+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:14.529+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:14.630+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:14.730+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:14.830+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:14.930+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:15.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:43:15.030+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:15.130+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:15.230+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:15.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:43:15.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:43:15.331+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:15.431+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:15.531+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:15.631+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:15.731+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:15.831+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:15.931+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:16.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:43:16.032+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:16.132+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:16.232+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:16.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:43:16.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:43:16.332+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:16.432+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:16.532+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:16.632+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:16.732+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:16.833+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:16.933+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:16.934+0000 D2 COMMAND  [conn1] run command admin.$cmd { isMaster: 1, $db: "admin" }
2020-10-02T20:43:16.934+0000 D2 COMMAND  [conn2] run command admin.$cmd { isMaster: 1, $db: "admin" }
2020-10-02T20:43:16.934+0000 D3 NETWORK  [conn2] Starting server-side compression negotiation
2020-10-02T20:43:16.934+0000 D3 NETWORK  [conn1] Starting server-side compression negotiation
2020-10-02T20:43:16.934+0000 I  COMMAND  [conn1] command admin.$cmd appName: "mongosqld" command: isMaster { isMaster: 1, $db: "admin" } numYields:0 reslen:286 locks:{} protocol:op_msg 0ms
2020-10-02T20:43:16.934+0000 I  COMMAND  [conn2] command admin.$cmd appName: "mongosqld" command: isMaster { isMaster: 1, $db: "admin" } numYields:0 reslen:286 locks:{} protocol:op_msg 0ms
2020-10-02T20:43:17.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:43:17.033+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:17.133+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:17.233+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:17.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:43:17.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:43:17.333+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:17.433+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:17.533+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:17.634+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:17.734+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:17.834+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:17.934+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:18.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:43:18.034+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:18.134+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:18.235+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:18.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:43:18.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:43:18.335+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:18.435+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:18.535+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:18.635+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:18.735+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:18.835+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:18.936+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:19.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:43:19.036+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:19.136+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:19.236+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:19.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:43:19.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:43:19.336+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:19.436+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:19.537+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:19.637+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:19.737+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:19.837+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:19.937+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:20.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:43:20.037+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:20.137+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:20.237+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:20.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:43:20.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:43:20.336+0000 D2 WRITE    [abortExpiredTransactions] Beginning scanSessions. Scanning 0 sessions.
2020-10-02T20:43:20.337+0000 D3 COMMAND  [PeriodicTaskRunner] task: DBConnectionPool-cleaner took: 0ms
2020-10-02T20:43:20.337+0000 D3 COMMAND  [PeriodicTaskRunner] task: DBConnectionPool-cleaner took: 0ms
2020-10-02T20:43:20.337+0000 D2 -        [PeriodicTaskRunner] cleaning up unused lock buckets of the global lock manager
2020-10-02T20:43:20.337+0000 D3 COMMAND  [PeriodicTaskRunner] task: UnusedLockCleaner took: 0ms
2020-10-02T20:43:20.338+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:20.338+0000 D3 INDEX    [TTLMonitor] thread awake
2020-10-02T20:43:20.338+0000 D3 STORAGE  [TTLMonitor] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:43:20.338+0000 D3 STORAGE  [TTLMonitor] WT begin_transaction for snapshot id 994
2020-10-02T20:43:20.338+0000 D3 STORAGE  [TTLMonitor]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:43:20.338+0000 D3 STORAGE  [TTLMonitor] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:43:20.338+0000 D3 STORAGE  [TTLMonitor] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:43:20.338+0000 D3 STORAGE  [TTLMonitor]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:43:20.338+0000 D3 STORAGE  [TTLMonitor] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:43:20.338+0000 D3 STORAGE  [TTLMonitor] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:43:20.338+0000 D3 STORAGE  [TTLMonitor]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:43:20.338+0000 D3 STORAGE  [TTLMonitor] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:43:20.338+0000 D3 STORAGE  [TTLMonitor] WT rollback_transaction for snapshot id 994
2020-10-02T20:43:20.338+0000 D1 INDEX    [TTLMonitor] ns: config.system.sessions key: { lastUse: 1 } name: lsidTTLIndex
2020-10-02T20:43:20.338+0000 D4 -        [TTLMonitor] Taking ticket. Available: 1000000000
2020-10-02T20:43:20.338+0000 D3 STORAGE  [TTLMonitor] WT begin_transaction for snapshot id 995
2020-10-02T20:43:20.338+0000 D1 INDEX    [TTLMonitor] deleted: 0
2020-10-02T20:43:20.339+0000 D3 STORAGE  [TTLMonitor] WT rollback_transaction for snapshot id 995
2020-10-02T20:43:20.438+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:20.538+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:20.638+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:20.738+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:20.838+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:20.938+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:21.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:43:21.039+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:21.139+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:21.239+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:21.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:43:21.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 999999999 Now: 1000000000
2020-10-02T20:43:21.339+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:21.439+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:21.540+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:21.640+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:21.740+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:21.840+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:21.940+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:22.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:43:22.040+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:22.140+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:22.241+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:22.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:43:22.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:43:22.341+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:22.441+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:22.541+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:22.641+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:22.742+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:22.842+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:22.942+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:23.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:43:23.042+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:23.143+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:23.243+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:23.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:43:23.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:43:23.343+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:23.443+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:23.543+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:23.643+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:23.744+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:23.844+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:23.944+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:24.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:43:24.044+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:24.144+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:24.244+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:24.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:43:24.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:43:24.345+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:24.445+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:24.545+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:24.645+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:24.745+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:24.846+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:24.946+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:25.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:43:25.046+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:25.146+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:25.246+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:25.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:43:25.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:43:25.346+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:25.447+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:25.547+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:25.647+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:25.747+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:25.847+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:25.947+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:26.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:43:26.047+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:26.148+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:26.248+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:26.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:43:26.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:43:26.348+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:26.448+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:26.549+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:26.649+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:26.749+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:26.849+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:26.934+0000 D2 COMMAND  [conn1] run command admin.$cmd { isMaster: 1, $db: "admin" }
2020-10-02T20:43:26.934+0000 D2 COMMAND  [conn2] run command admin.$cmd { isMaster: 1, $db: "admin" }
2020-10-02T20:43:26.934+0000 D3 NETWORK  [conn2] Starting server-side compression negotiation
2020-10-02T20:43:26.934+0000 D3 NETWORK  [conn1] Starting server-side compression negotiation
2020-10-02T20:43:26.934+0000 I  COMMAND  [conn2] command admin.$cmd appName: "mongosqld" command: isMaster { isMaster: 1, $db: "admin" } numYields:0 reslen:286 locks:{} protocol:op_msg 0ms
2020-10-02T20:43:26.934+0000 I  COMMAND  [conn1] command admin.$cmd appName: "mongosqld" command: isMaster { isMaster: 1, $db: "admin" } numYields:0 reslen:286 locks:{} protocol:op_msg 0ms
2020-10-02T20:43:26.949+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:27.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:43:27.050+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:27.150+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:27.250+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:27.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:43:27.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:43:27.350+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:27.450+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:27.551+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:27.651+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:27.751+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:27.851+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:27.951+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:28.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:43:28.052+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:28.152+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:28.252+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:28.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:43:28.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:43:28.352+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:28.452+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:28.552+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:28.653+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:28.753+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:28.853+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:28.953+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:29.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:43:29.053+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:29.154+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:29.254+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:29.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:43:29.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:43:29.354+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:29.454+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:29.555+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:29.655+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:29.755+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:29.855+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:29.955+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:30.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:43:30.055+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:30.155+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:30.256+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:30.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:43:30.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:43:30.356+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:30.456+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:30.556+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:30.656+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:30.757+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:30.857+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:30.957+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:31.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:43:31.057+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:31.157+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:31.257+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:31.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:43:31.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:43:31.358+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:31.458+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:31.558+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:31.658+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:31.759+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:31.859+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:31.959+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:32.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:43:32.059+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:32.159+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:32.259+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:32.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:43:32.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:43:32.360+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:32.460+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:32.560+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:32.660+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:32.760+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:32.860+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:32.961+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:33.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:43:33.061+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:33.161+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:33.261+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:33.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:43:33.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:43:33.361+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:33.461+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:33.562+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:33.662+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:33.762+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:33.862+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:33.962+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:34.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:43:34.062+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:34.163+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:34.263+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:34.304+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:43:34.304+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:43:34.363+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:34.463+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:34.563+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:34.663+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:34.763+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:34.864+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:34.964+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:35.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:43:35.064+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:35.164+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:35.264+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:35.307+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:43:35.307+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:43:35.365+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:35.465+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:35.565+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:35.665+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:35.765+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:35.865+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:35.965+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:36.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:43:36.066+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:36.166+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:36.266+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:36.307+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:43:36.307+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:43:36.366+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:36.466+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:36.567+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:36.667+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:36.767+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:36.867+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:36.934+0000 D2 COMMAND  [conn2] run command admin.$cmd { isMaster: 1, $db: "admin" }
2020-10-02T20:43:36.934+0000 D2 COMMAND  [conn1] run command admin.$cmd { isMaster: 1, $db: "admin" }
2020-10-02T20:43:36.934+0000 D3 NETWORK  [conn2] Starting server-side compression negotiation
2020-10-02T20:43:36.934+0000 D3 NETWORK  [conn1] Starting server-side compression negotiation
2020-10-02T20:43:36.934+0000 I  COMMAND  [conn2] command admin.$cmd appName: "mongosqld" command: isMaster { isMaster: 1, $db: "admin" } numYields:0 reslen:286 locks:{} protocol:op_msg 0ms
2020-10-02T20:43:36.934+0000 I  COMMAND  [conn1] command admin.$cmd appName: "mongosqld" command: isMaster { isMaster: 1, $db: "admin" } numYields:0 reslen:286 locks:{} protocol:op_msg 0ms
2020-10-02T20:43:36.967+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:37.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:43:37.067+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:37.168+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:37.268+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:37.307+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:43:37.307+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:43:37.368+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:37.468+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:37.568+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:37.668+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:37.768+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:37.869+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:37.969+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:38.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:43:38.069+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:38.169+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:38.269+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:38.307+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:43:38.307+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:43:38.369+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:38.470+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:38.570+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:38.670+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:38.770+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:38.870+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:38.970+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:39.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:43:39.071+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:39.171+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:39.271+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:39.307+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:43:39.307+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:43:39.371+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:39.471+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:39.571+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:39.671+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:39.772+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:39.872+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:39.972+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:40.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:43:40.072+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:40.172+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:40.272+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:40.307+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:43:40.307+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:43:40.372+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:40.473+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:40.573+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:40.673+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:40.773+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:40.873+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:40.973+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:41.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:43:41.074+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:41.174+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:41.274+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:41.307+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:43:41.307+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:43:41.374+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:41.474+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:41.575+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:41.675+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:41.775+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:41.875+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:41.975+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:42.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:43:42.075+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:42.175+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:42.276+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:42.307+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:43:42.307+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:43:42.376+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:42.476+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:42.576+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:42.676+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:42.776+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:42.876+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:42.977+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:43.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:43:43.077+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:43.177+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:43.277+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:43.307+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:43:43.307+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:43:43.377+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:43.477+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:43.578+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:43.678+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:43.778+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:43.878+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:43.978+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:44.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:43:44.079+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:44.179+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:44.279+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:44.307+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:43:44.307+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:43:44.379+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:44.479+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:44.579+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:44.679+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:44.780+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:44.880+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:44.980+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:45.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:43:45.080+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:45.180+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:45.281+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:45.307+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:43:45.307+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:43:45.381+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:45.481+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:45.581+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:45.681+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:45.781+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:45.881+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:45.982+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:46.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:43:46.082+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:46.182+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:46.282+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:46.307+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:43:46.307+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:43:46.382+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:46.483+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:46.583+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:46.683+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:46.783+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:46.883+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:46.934+0000 D2 COMMAND  [conn1] run command admin.$cmd { isMaster: 1, $db: "admin" }
2020-10-02T20:43:46.934+0000 D2 COMMAND  [conn2] run command admin.$cmd { isMaster: 1, $db: "admin" }
2020-10-02T20:43:46.934+0000 D3 NETWORK  [conn2] Starting server-side compression negotiation
2020-10-02T20:43:46.934+0000 D3 NETWORK  [conn1] Starting server-side compression negotiation
2020-10-02T20:43:46.934+0000 I  COMMAND  [conn2] command admin.$cmd appName: "mongosqld" command: isMaster { isMaster: 1, $db: "admin" } numYields:0 reslen:286 locks:{} protocol:op_msg 0ms
2020-10-02T20:43:46.934+0000 I  COMMAND  [conn1] command admin.$cmd appName: "mongosqld" command: isMaster { isMaster: 1, $db: "admin" } numYields:0 reslen:286 locks:{} protocol:op_msg 0ms
2020-10-02T20:43:46.983+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:47.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:43:47.083+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:47.184+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:47.284+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:47.307+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:43:47.307+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:43:47.384+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:47.484+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:47.584+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:47.684+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:47.785+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:47.885+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:47.985+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:48.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:43:48.085+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:48.185+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:48.286+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:48.307+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:43:48.307+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:43:48.386+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:48.486+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:48.586+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:48.686+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:48.786+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:48.887+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:48.987+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:49.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:43:49.087+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:49.187+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:49.287+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:49.307+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:43:49.307+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:43:49.387+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:49.488+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:49.588+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:49.688+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:49.788+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:49.888+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:49.988+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:50.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:43:50.089+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:50.189+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:50.289+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:50.307+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:43:50.307+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:43:50.336+0000 D2 WRITE    [abortExpiredTransactions] Beginning scanSessions. Scanning 0 sessions.
2020-10-02T20:43:50.389+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:50.489+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:50.590+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:50.690+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:50.790+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:50.890+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:50.990+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:51.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:43:51.090+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:51.191+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:51.291+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:51.307+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:43:51.307+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:43:51.391+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:51.491+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:51.591+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:51.691+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:51.791+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:51.892+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:51.992+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:52.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:43:52.092+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:52.192+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:52.292+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:52.307+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:43:52.307+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:43:52.392+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:52.492+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:52.593+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:52.693+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:52.793+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:52.893+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:52.993+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:53.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:43:53.093+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:53.193+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:53.294+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:53.307+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:43:53.307+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:43:53.394+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:53.494+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:53.594+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:53.694+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:53.794+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:53.894+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:53.994+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:54.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:43:54.095+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:54.195+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:54.295+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:54.307+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:43:54.307+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:43:54.395+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:54.495+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:54.595+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:54.695+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:54.796+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:54.896+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:54.996+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:55.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:43:55.096+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:55.196+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:55.296+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:55.307+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:43:55.307+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:43:55.396+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:55.497+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:55.597+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:55.697+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:55.797+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:55.897+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:55.997+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:56.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:43:56.097+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:56.198+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:56.298+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:56.307+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:43:56.307+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:43:56.398+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:56.498+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:56.598+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:56.698+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:56.798+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:56.899+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:56.934+0000 D2 COMMAND  [conn2] run command admin.$cmd { isMaster: 1, $db: "admin" }
2020-10-02T20:43:56.934+0000 D2 COMMAND  [conn1] run command admin.$cmd { isMaster: 1, $db: "admin" }
2020-10-02T20:43:56.934+0000 D3 NETWORK  [conn1] Starting server-side compression negotiation
2020-10-02T20:43:56.934+0000 D3 NETWORK  [conn2] Starting server-side compression negotiation
2020-10-02T20:43:56.934+0000 I  COMMAND  [conn1] command admin.$cmd appName: "mongosqld" command: isMaster { isMaster: 1, $db: "admin" } numYields:0 reslen:286 locks:{} protocol:op_msg 0ms
2020-10-02T20:43:56.934+0000 I  COMMAND  [conn2] command admin.$cmd appName: "mongosqld" command: isMaster { isMaster: 1, $db: "admin" } numYields:0 reslen:286 locks:{} protocol:op_msg 0ms
2020-10-02T20:43:56.999+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:57.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:43:57.099+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:57.199+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:57.299+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:57.307+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:43:57.307+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:43:57.399+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:57.499+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:57.600+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:57.700+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:57.800+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:57.900+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:58.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:43:58.001+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:58.101+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:58.201+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:58.302+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:58.307+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:43:58.307+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:43:58.402+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:58.502+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:58.602+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:58.703+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:58.803+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:58.903+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:59.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:43:59.003+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:59.103+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:59.203+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:59.304+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:59.307+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:43:59.307+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:43:59.404+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:59.504+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:59.604+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:59.705+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:59.805+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:43:59.905+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:44:00.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:44:00.005+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:44:00.105+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:44:00.205+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:44:00.305+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:44:00.307+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:44:00.307+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:44:00.406+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:44:00.506+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:44:00.606+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:44:00.706+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:44:00.806+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:44:00.907+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:44:01.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:44:01.007+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:44:01.107+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:44:01.207+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:44:01.307+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:44:01.307+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:44:01.307+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:44:01.407+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:44:01.507+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:44:01.608+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:44:01.708+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:44:01.808+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:44:01.908+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:44:02.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:44:02.008+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:44:02.109+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:44:02.209+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:44:02.307+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:44:02.307+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:44:02.309+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:44:02.409+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:44:02.509+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:44:02.609+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:44:02.710+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:44:02.810+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:44:02.910+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:44:03.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:44:03.010+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:44:03.110+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:44:03.211+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:44:03.307+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:44:03.307+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:44:03.311+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:44:03.411+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:44:03.511+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:44:03.611+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:44:03.711+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:44:03.811+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:44:03.912+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:44:04.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:44:04.012+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:44:04.112+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:44:04.212+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:44:04.307+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:44:04.307+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:44:04.312+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:44:04.412+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:44:04.480+0000 I  CONTROL  [signalProcessingThread] got signal 2 (Interrupt), will terminate after current cmd ends
2020-10-02T20:44:04.480+0000 D1 -        [signalProcessingThread] User Assertion: NotMaster: not primary so can't step down src/mongo/db/repl/replication_coordinator_impl.cpp 2062
2020-10-02T20:44:04.480+0000 D1 QUERY    [signalProcessingThread] received interrupt request for unknown op: 2  known ops: 
2020-10-02T20:44:04.480+0000 D1 -        [waitForMajority] User Assertion: InterruptedAtShutdown: operation was interrupted src/mongo/util/interruptible.h 333
2020-10-02T20:44:04.480+0000 D1 SHARDING [waitForMajority] Unable to wait for new op time due to: InterruptedAtShutdown: operation was interrupted
2020-10-02T20:44:04.480+0000 D2 -        [signalProcessingThread] Stopping periodic job LogicalSessionCacheRefresh
2020-10-02T20:44:04.480+0000 D2 -        [signalProcessingThread] Stopping periodic job LogicalSessionCacheReap
2020-10-02T20:44:04.480+0000 I  NETWORK  [signalProcessingThread] shutdown: going to close listening sockets...
2020-10-02T20:44:04.480+0000 I  NETWORK  [listener] removing socket file: /tmp/mongodb-27000.sock
2020-10-02T20:44:04.481+0000 I  -        [signalProcessingThread] Stopping further Flow Control ticket acquisitions.
2020-10-02T20:44:04.481+0000 D2 -        [signalProcessingThread] Stopping periodic job abortExpiredTransactions
2020-10-02T20:44:04.481+0000 D2 -        [signalProcessingThread] Stopping periodic job startPeriodicThreadToDecreaseSnapshotHistoryCachePressure
2020-10-02T20:44:04.481+0000 D1 QUERY    [signalProcessingThread] received interrupt request for unknown op: 1091  known ops: 
2020-10-02T20:44:04.481+0000 D2 WRITE    [signalProcessingThread] Beginning scanSessions. Scanning 0 sessions.
2020-10-02T20:44:04.481+0000 I  FTDC     [signalProcessingThread] Shutting down full-time diagnostic data capture
2020-10-02T20:44:04.483+0000 I  STORAGE  [signalProcessingThread] Deregistering all the collections
2020-10-02T20:44:04.483+0000 D1 STORAGE  [signalProcessingThread] Deregistering collection admin.system.version with UUID 0d876cab-c7c4-40a4-90c6-c23dd6e3b179
2020-10-02T20:44:04.483+0000 D1 STORAGE  [signalProcessingThread] ~WiredTigerRecordStore for: admin.system.version
2020-10-02T20:44:04.483+0000 D1 STORAGE  [signalProcessingThread] Deregistering collection local.startup_log with UUID 97fc5f31-0917-4d2e-a65c-606750d317e5
2020-10-02T20:44:04.483+0000 D1 STORAGE  [signalProcessingThread] ~WiredTigerRecordStore for: local.startup_log
2020-10-02T20:44:04.483+0000 D1 STORAGE  [signalProcessingThread] Deregistering collection movies.movies with UUID 77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a
2020-10-02T20:44:04.483+0000 D1 STORAGE  [signalProcessingThread] ~WiredTigerRecordStore for: movies.movies
2020-10-02T20:44:04.483+0000 D1 STORAGE  [signalProcessingThread] Deregistering collection admin.system.users with UUID afe8728a-bcfa-4477-b0ae-3a6884f97746
2020-10-02T20:44:04.483+0000 D1 STORAGE  [signalProcessingThread] ~WiredTigerRecordStore for: admin.system.users
2020-10-02T20:44:04.483+0000 D1 STORAGE  [signalProcessingThread] Deregistering collection test.inventory with UUID 66dd6c2e-e14a-4284-a2a5-a7574ac1fd74
2020-10-02T20:44:04.483+0000 D1 STORAGE  [signalProcessingThread] ~WiredTigerRecordStore for: test.inventory
2020-10-02T20:44:04.483+0000 D1 STORAGE  [signalProcessingThread] Deregistering collection config.system.sessions with UUID fbf72919-58ff-41f2-ba34-93b2acda7d24
2020-10-02T20:44:04.483+0000 D1 STORAGE  [signalProcessingThread] ~WiredTigerRecordStore for: config.system.sessions
2020-10-02T20:44:04.483+0000 D1 STORAGE  [signalProcessingThread] ~WiredTigerRecordStore for: _mdb_catalog
2020-10-02T20:44:04.483+0000 I  STORAGE  [signalProcessingThread] Timestamp monitor shutting down
2020-10-02T20:44:04.483+0000 D2 -        [signalProcessingThread] Stopping periodic job TimestampMonitor
2020-10-02T20:44:04.483+0000 I  STORAGE  [signalProcessingThread] WiredTigerKVEngine shutting down
2020-10-02T20:44:04.483+0000 I  STORAGE  [signalProcessingThread] Shutting down session sweeper thread
2020-10-02T20:44:04.483+0000 D1 STORAGE  [WTIdleSessionSweeper] stopping WTIdleSessionSweeper thread
2020-10-02T20:44:04.484+0000 I  STORAGE  [signalProcessingThread] Finished shutting down session sweeper thread
2020-10-02T20:44:04.484+0000 I  STORAGE  [signalProcessingThread] Shutting down journal flusher thread
2020-10-02T20:44:04.513+0000 D1 STORAGE  [WTJournalFlusher] stopping WTJournalFlusher thread
2020-10-02T20:44:04.513+0000 I  STORAGE  [signalProcessingThread] Finished shutting down journal flusher thread
2020-10-02T20:44:04.513+0000 I  STORAGE  [signalProcessingThread] Shutting down checkpoint thread
2020-10-02T20:44:04.513+0000 D1 STORAGE  [WTCheckpointThread] stopping WTCheckpointThread thread
2020-10-02T20:44:04.513+0000 I  STORAGE  [signalProcessingThread] Finished shutting down checkpoint thread
2020-10-02T20:44:04.513+0000 D2 RECOVERY [signalProcessingThread] Shutdown timestamps. StableTimestamp: 0 Initial data timestamp: 0
2020-10-02T20:44:04.518+0000 I  STORAGE  [signalProcessingThread] shutdown: removing fs lock...
2020-10-02T20:44:04.518+0000 I  CONTROL  [signalProcessingThread] now exiting
2020-10-02T20:44:04.518+0000 I  CONTROL  [signalProcessingThread] shutting down with code:0
2020-10-02T20:45:26.977+0000 I  CONTROL  [main] ***** SERVER RESTARTED *****
2020-10-02T20:45:26.982+0000 I  CONTROL  [main] Automatically disabling TLS 1.0, to force-enable TLS 1.0 specify --sslDisabledProtocols 'none'
2020-10-02T20:45:26.982+0000 W  ASIO     [main] No TransportLayer configured during NetworkInterface startup
2020-10-02T20:45:26.982+0000 D2 CONNPOOL [main] Controller for NetworkInterfaceTL-MongotExecutor is LimitController
2020-10-02T20:45:26.988+0000 D2 CONNPOOL [main] Controller for LDAP is LimitController
2020-10-02T20:45:26.989+0000 W  ASIO     [main] No TransportLayer configured during NetworkInterface startup
2020-10-02T20:45:26.989+0000 D2 CONNPOOL [main] Controller for NetworkInterfaceTL-Replication is LimitController
2020-10-02T20:45:26.989+0000 D1 NETWORK  [main] fd limit hard:4096 soft:1024 max conn: 819
2020-10-02T20:45:26.989+0000 I  CONTROL  [initandlisten] MongoDB starting : pid=23670 port=27000 dbpath=/home/bimongod/data/ 64-bit host=ip-172-16-42-253.lab.morganstanley.com
2020-10-02T20:45:26.989+0000 I  CONTROL  [initandlisten] db version v4.2.7
2020-10-02T20:45:26.989+0000 I  CONTROL  [initandlisten] git version: 51d9fe12b5d19720e72dcd7db0f2f17dd9a19212
2020-10-02T20:45:26.989+0000 I  CONTROL  [initandlisten] OpenSSL version: OpenSSL 1.0.1e-fips 11 Feb 2013
2020-10-02T20:45:26.989+0000 I  CONTROL  [initandlisten] allocator: tcmalloc
2020-10-02T20:45:26.989+0000 I  CONTROL  [initandlisten] modules: enterprise 
2020-10-02T20:45:26.989+0000 I  CONTROL  [initandlisten] build environment:
2020-10-02T20:45:26.989+0000 I  CONTROL  [initandlisten]     distmod: rhel70
2020-10-02T20:45:26.989+0000 I  CONTROL  [initandlisten]     distarch: x86_64
2020-10-02T20:45:26.989+0000 I  CONTROL  [initandlisten]     target_arch: x86_64
2020-10-02T20:45:26.990+0000 I  CONTROL  [initandlisten] options: { config: "mongod.conf", net: { bindIp: "0.0.0.0", port: 27000 }, processManagement: { pidFilePath: "/home/bimongod/mongod.pid" }, security: { authorization: "enabled", sasl: { serviceName: "bimongod" } }, setParameter: { authenticationMechanisms: "GSSAPI" }, storage: { dbPath: "/home/bimongod/data/", directoryPerDB: true, engine: "wiredTiger", wiredTiger: { engineConfig: { directoryForIndexes: true } } }, systemLog: { destination: "file", logAppend: true, path: "/home/bimongod/log/mongod_krb.log", verbosity: 4 } }
2020-10-02T20:45:26.990+0000 D1 NETWORK  [initandlisten] fd limit hard:4096 soft:1024 max conn: 819
2020-10-02T20:45:26.990+0000 D2 -        [initandlisten] Starting periodic job FlowControlRefresher
2020-10-02T20:45:26.990+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:45:26.990+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:45:26.990+0000 I  STORAGE  [initandlisten] wiredtiger_open config: create,cache_size=1352M,cache_overflow=(file_max=0M),session_max=33000,eviction=(threads_min=4,threads_max=4),config_base=false,statistics=(fast),log=(enabled=true,archive=true,path=journal,compressor=snappy),file_manager=(close_idle_time=100000,close_scan_interval=10,close_handle_minimum=250),statistics_log=(wait=0),verbose=[recovery_progress,checkpoint_progress,recovery],
2020-10-02T20:45:27.531+0000 I  STORAGE  [initandlisten] WiredTiger message [1601671527:531528][23670:0x7f1b60f88c80], txn-recover: Recovering file:WiredTiger.wt with id 0 @ (77, 6912)
2020-10-02T20:45:27.531+0000 I  STORAGE  [initandlisten] WiredTiger message [1601671527:531581][23670:0x7f1b60f88c80], txn-recover: Recovering log 77 through 78
2020-10-02T20:45:27.579+0000 I  STORAGE  [initandlisten] WiredTiger message [1601671527:579813][23670:0x7f1b60f88c80], txn-recover: Recovering log 78 through 78
2020-10-02T20:45:27.657+0000 I  STORAGE  [initandlisten] WiredTiger message [1601671527:657683][23670:0x7f1b60f88c80], txn-recover: Recovering file:WiredTigerLAS.wt with id 93 @ (1, 0)
2020-10-02T20:45:27.657+0000 I  STORAGE  [initandlisten] WiredTiger message [1601671527:657744][23670:0x7f1b60f88c80], txn-recover: Recovering file:_mdb_catalog.wt with id 3 @ (18, 12032)
2020-10-02T20:45:27.657+0000 I  STORAGE  [initandlisten] WiredTiger message [1601671527:657759][23670:0x7f1b60f88c80], txn-recover: Recovering file:admin/collection/0--2310914167168443545.wt with id 4 @ (7, 4864)
2020-10-02T20:45:27.657+0000 I  STORAGE  [initandlisten] WiredTiger message [1601671527:657774][23670:0x7f1b60f88c80], txn-recover: Recovering file:admin/collection/0--732801831392209623.wt with id 17 @ (61, 5248)
2020-10-02T20:45:27.657+0000 I  STORAGE  [initandlisten] WiredTiger message [1601671527:657787][23670:0x7f1b60f88c80], txn-recover: Recovering file:admin/index/1--2310914167168443545.wt with id 5 @ (7, 4864)
2020-10-02T20:45:27.657+0000 I  STORAGE  [initandlisten] WiredTiger message [1601671527:657807][23670:0x7f1b60f88c80], txn-recover: Recovering file:admin/index/1--732801831392209623.wt with id 18 @ (52, 6912)
2020-10-02T20:45:27.657+0000 I  STORAGE  [initandlisten] WiredTiger message [1601671527:657821][23670:0x7f1b60f88c80], txn-recover: Recovering file:admin/index/2--732801831392209623.wt with id 19 @ (52, 6912)
2020-10-02T20:45:27.657+0000 I  STORAGE  [initandlisten] WiredTiger message [1601671527:657834][23670:0x7f1b60f88c80], txn-recover: Recovering file:config/collection/4--2310914167168443545.wt with id 8 @ (64, 6784)
2020-10-02T20:45:27.657+0000 I  STORAGE  [initandlisten] WiredTiger message [1601671527:657846][23670:0x7f1b60f88c80], txn-recover: Recovering file:config/index/5--2310914167168443545.wt with id 9 @ (66, 6784)
2020-10-02T20:45:27.657+0000 I  STORAGE  [initandlisten] WiredTiger message [1601671527:657859][23670:0x7f1b60f88c80], txn-recover: Recovering file:config/index/6--2310914167168443545.wt with id 10 @ (77, 5120)
2020-10-02T20:45:27.657+0000 I  STORAGE  [initandlisten] WiredTiger message [1601671527:657872][23670:0x7f1b60f88c80], txn-recover: Recovering file:local/collection/2--2310914167168443545.wt with id 6 @ (77, 3584)
2020-10-02T20:45:27.657+0000 I  STORAGE  [initandlisten] WiredTiger message [1601671527:657884][23670:0x7f1b60f88c80], txn-recover: Recovering file:local/index/3--2310914167168443545.wt with id 7 @ (77, 3584)
2020-10-02T20:45:27.657+0000 I  STORAGE  [initandlisten] WiredTiger message [1601671527:657897][23670:0x7f1b60f88c80], txn-recover: Recovering file:movies/collection/0-5928759223889663863.wt with id 33 @ (18, 12032)
2020-10-02T20:45:27.657+0000 I  STORAGE  [initandlisten] WiredTiger message [1601671527:657910][23670:0x7f1b60f88c80], txn-recover: Recovering file:movies/index/1-5928759223889663863.wt with id 34 @ (18, 12032)
2020-10-02T20:45:27.657+0000 I  STORAGE  [initandlisten] WiredTiger message [1601671527:657936][23670:0x7f1b60f88c80], txn-recover: Recovering file:sizeStorer.wt with id 2 @ (77, 5120)
2020-10-02T20:45:27.657+0000 I  STORAGE  [initandlisten] WiredTiger message [1601671527:657948][23670:0x7f1b60f88c80], txn-recover: Recovering file:test/collection/0-3817864913425832323.wt with id 21 @ (8, 8448)
2020-10-02T20:45:27.657+0000 I  STORAGE  [initandlisten] WiredTiger message [1601671527:657961][23670:0x7f1b60f88c80], txn-recover: Recovering file:test/index/1-3817864913425832323.wt with id 22 @ (8, 8448)
2020-10-02T20:45:27.657+0000 I  STORAGE  [initandlisten] WiredTiger message [1601671527:657969][23670:0x7f1b60f88c80], txn-recover: Main recovery loop: starting at 77/7040 to 78/256
2020-10-02T20:45:27.748+0000 I  STORAGE  [initandlisten] WiredTiger message [1601671527:748962][23670:0x7f1b60f88c80], txn-recover: Recovering log 77 through 78
2020-10-02T20:45:27.807+0000 I  STORAGE  [initandlisten] WiredTiger message [1601671527:807478][23670:0x7f1b60f88c80], txn-recover: Recovering log 78 through 78
2020-10-02T20:45:27.860+0000 I  STORAGE  [initandlisten] WiredTiger message [1601671527:860195][23670:0x7f1b60f88c80], txn-recover: Set global recovery timestamp: (0, 0)
2020-10-02T20:45:27.870+0000 I  RECOVERY [initandlisten] WiredTiger recoveryTimestamp. Ts: Timestamp(0, 0)
2020-10-02T20:45:27.870+0000 D1 COMMAND  [WTIdleSessionSweeper] BackgroundJob starting: WTIdleSessionSweeper
2020-10-02T20:45:27.870+0000 D1 STORAGE  [WTIdleSessionSweeper] starting WTIdleSessionSweeper thread
2020-10-02T20:45:27.870+0000 D1 COMMAND  [WTJournalFlusher] BackgroundJob starting: WTJournalFlusher
2020-10-02T20:45:27.870+0000 D1 STORAGE  [WTJournalFlusher] starting WTJournalFlusher thread
2020-10-02T20:45:27.870+0000 D1 COMMAND  [WTCheckpointThread] BackgroundJob starting: WTCheckpointThread
2020-10-02T20:45:27.871+0000 D1 STORAGE  [WTCheckpointThread] starting WTCheckpointThread thread
2020-10-02T20:45:27.871+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:27.872+0000 D3 STORAGE  [initandlisten] WT begin_transaction for snapshot id 1
2020-10-02T20:45:27.872+0000 D2 STORAGE  [initandlisten] WiredTigerUtil::checkApplicationMetadataFormatVersion  uri: table:_mdb_catalog ok range 1 -> 1 current: 1
2020-10-02T20:45:27.872+0000 D2 STORAGE  [initandlisten] WiredTigerSizeStorer::load table:_mdb_catalog -> { numRecords: 7, dataSize: 3611 }
2020-10-02T20:45:27.872+0000 D2 RECOVERY [initandlisten] loadCatalog:
2020-10-02T20:45:27.873+0000 D2 RECOVERY [initandlisten] 	Id: RecordId(1) Value: { md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--2310914167168443545" }, ns: "admin.system.version", ident: "admin/collection/0--2310914167168443545" }
2020-10-02T20:45:27.873+0000 D2 RECOVERY [initandlisten] 	Id: RecordId(2) Value: { isFeatureDoc: true, ns: null, nonRepairable: 0, repairable: 1 }
2020-10-02T20:45:27.873+0000 D2 RECOVERY [initandlisten] 	Id: RecordId(3) Value: { md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "local/index/3--2310914167168443545" }, ns: "local.startup_log", ident: "local/collection/2--2310914167168443545" }
2020-10-02T20:45:27.873+0000 D2 RECOVERY [initandlisten] 	Id: RecordId(4) Value: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:45:27.873+0000 D2 RECOVERY [initandlisten] 	Id: RecordId(5) Value: { md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--732801831392209623", user_1_db_1: "admin/index/2--732801831392209623" }, ns: "admin.system.users", ident: "admin/collection/0--732801831392209623" }
2020-10-02T20:45:27.873+0000 D2 RECOVERY [initandlisten] 	Id: RecordId(6) Value: { md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "test/index/1-3817864913425832323" }, ns: "test.inventory", ident: "test/collection/0-3817864913425832323" }
2020-10-02T20:45:27.873+0000 D2 RECOVERY [initandlisten] 	Id: RecordId(7) Value: { md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "movies/index/1-5928759223889663863" }, ns: "movies.movies", ident: "movies/collection/0-5928759223889663863" }
2020-10-02T20:45:27.873+0000 D3 STORAGE  [initandlisten] WT rollback_transaction for snapshot id 1
2020-10-02T20:45:27.873+0000 D3 STORAGE  [initandlisten] WT begin_transaction for snapshot id 2
2020-10-02T20:45:27.873+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.users @ RecordId(5)
2020-10-02T20:45:27.873+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--732801831392209623", user_1_db_1: "admin/index/2--732801831392209623" }, ns: "admin.system.users", ident: "admin/collection/0--732801831392209623" }
2020-10-02T20:45:27.873+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.873+0000 D2 STORAGE  [initandlisten] WiredTigerUtil::checkApplicationMetadataFormatVersion  uri: table:admin/collection/0--732801831392209623 ok range 1 -> 1 current: 1
2020-10-02T20:45:27.873+0000 D2 STORAGE  [initandlisten] WiredTigerSizeStorer::load table:admin/collection/0--732801831392209623 -> { numRecords: 6, dataSize: 1901 }
2020-10-02T20:45:27.873+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.users @ RecordId(5)
2020-10-02T20:45:27.873+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--732801831392209623", user_1_db_1: "admin/index/2--732801831392209623" }, ns: "admin.system.users", ident: "admin/collection/0--732801831392209623" }
2020-10-02T20:45:27.873+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.873+0000 D1 STORAGE  [initandlisten] Registering collection admin.system.users with UUID afe8728a-bcfa-4477-b0ae-3a6884f97746
2020-10-02T20:45:27.873+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.users @ RecordId(5)
2020-10-02T20:45:27.873+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--732801831392209623", user_1_db_1: "admin/index/2--732801831392209623" }, ns: "admin.system.users", ident: "admin/collection/0--732801831392209623" }
2020-10-02T20:45:27.873+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.873+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.version @ RecordId(1)
2020-10-02T20:45:27.873+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--2310914167168443545" }, ns: "admin.system.version", ident: "admin/collection/0--2310914167168443545" }
2020-10-02T20:45:27.873+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.873+0000 D2 STORAGE  [initandlisten] WiredTigerUtil::checkApplicationMetadataFormatVersion  uri: table:admin/collection/0--2310914167168443545 ok range 1 -> 1 current: 1
2020-10-02T20:45:27.873+0000 D2 STORAGE  [initandlisten] WiredTigerSizeStorer::load table:admin/collection/0--2310914167168443545 -> { numRecords: 2, dataSize: 104 }
2020-10-02T20:45:27.873+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.version @ RecordId(1)
2020-10-02T20:45:27.873+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--2310914167168443545" }, ns: "admin.system.version", ident: "admin/collection/0--2310914167168443545" }
2020-10-02T20:45:27.874+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.874+0000 D1 STORAGE  [initandlisten] Registering collection admin.system.version with UUID 0d876cab-c7c4-40a4-90c6-c23dd6e3b179
2020-10-02T20:45:27.874+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.version @ RecordId(1)
2020-10-02T20:45:27.874+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--2310914167168443545" }, ns: "admin.system.version", ident: "admin/collection/0--2310914167168443545" }
2020-10-02T20:45:27.874+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.874+0000 D3 STORAGE  [initandlisten] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:45:27.874+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:45:27.874+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.874+0000 D2 STORAGE  [initandlisten] WiredTigerUtil::checkApplicationMetadataFormatVersion  uri: table:config/collection/4--2310914167168443545 ok range 1 -> 1 current: 1
2020-10-02T20:45:27.874+0000 D2 STORAGE  [initandlisten] WiredTigerSizeStorer::load table:config/collection/4--2310914167168443545 -> { numRecords: 0, dataSize: 0 }
2020-10-02T20:45:27.874+0000 D3 STORAGE  [initandlisten] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:45:27.874+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:45:27.874+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.874+0000 D1 STORAGE  [initandlisten] Registering collection config.system.sessions with UUID fbf72919-58ff-41f2-ba34-93b2acda7d24
2020-10-02T20:45:27.874+0000 D3 STORAGE  [initandlisten] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:45:27.874+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:45:27.874+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.874+0000 D3 STORAGE  [initandlisten] looking up metadata for: local.startup_log @ RecordId(3)
2020-10-02T20:45:27.874+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "local/index/3--2310914167168443545" }, ns: "local.startup_log", ident: "local/collection/2--2310914167168443545" }
2020-10-02T20:45:27.874+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.874+0000 D2 STORAGE  [initandlisten] WiredTigerUtil::checkApplicationMetadataFormatVersion  uri: table:local/collection/2--2310914167168443545 ok range 1 -> 1 current: 1
2020-10-02T20:45:27.874+0000 D2 STORAGE  [initandlisten] WiredTigerSizeStorer::load table:local/collection/2--2310914167168443545 -> { numRecords: 77, dataSize: 160145 }
2020-10-02T20:45:27.874+0000 D3 STORAGE  [initandlisten] looking up metadata for: local.startup_log @ RecordId(3)
2020-10-02T20:45:27.874+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "local/index/3--2310914167168443545" }, ns: "local.startup_log", ident: "local/collection/2--2310914167168443545" }
2020-10-02T20:45:27.874+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.874+0000 D1 STORAGE  [initandlisten] Registering collection local.startup_log with UUID 97fc5f31-0917-4d2e-a65c-606750d317e5
2020-10-02T20:45:27.874+0000 D3 STORAGE  [initandlisten] looking up metadata for: local.startup_log @ RecordId(3)
2020-10-02T20:45:27.874+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "local/index/3--2310914167168443545" }, ns: "local.startup_log", ident: "local/collection/2--2310914167168443545" }
2020-10-02T20:45:27.874+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.874+0000 D3 STORAGE  [initandlisten] looking up metadata for: movies.movies @ RecordId(7)
2020-10-02T20:45:27.874+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "movies/index/1-5928759223889663863" }, ns: "movies.movies", ident: "movies/collection/0-5928759223889663863" }
2020-10-02T20:45:27.874+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.874+0000 D2 STORAGE  [initandlisten] WiredTigerUtil::checkApplicationMetadataFormatVersion  uri: table:movies/collection/0-5928759223889663863 ok range 1 -> 1 current: 1
2020-10-02T20:45:27.874+0000 D2 STORAGE  [initandlisten] WiredTigerSizeStorer::load table:movies/collection/0-5928759223889663863 -> { numRecords: 3, dataSize: 128 }
2020-10-02T20:45:27.874+0000 D3 STORAGE  [initandlisten] looking up metadata for: movies.movies @ RecordId(7)
2020-10-02T20:45:27.874+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "movies/index/1-5928759223889663863" }, ns: "movies.movies", ident: "movies/collection/0-5928759223889663863" }
2020-10-02T20:45:27.874+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.874+0000 D1 STORAGE  [initandlisten] Registering collection movies.movies with UUID 77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a
2020-10-02T20:45:27.874+0000 D3 STORAGE  [initandlisten] looking up metadata for: movies.movies @ RecordId(7)
2020-10-02T20:45:27.874+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "movies/index/1-5928759223889663863" }, ns: "movies.movies", ident: "movies/collection/0-5928759223889663863" }
2020-10-02T20:45:27.874+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.874+0000 D3 STORAGE  [initandlisten] looking up metadata for: test.inventory @ RecordId(6)
2020-10-02T20:45:27.874+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "test/index/1-3817864913425832323" }, ns: "test.inventory", ident: "test/collection/0-3817864913425832323" }
2020-10-02T20:45:27.874+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.874+0000 D2 STORAGE  [initandlisten] WiredTigerUtil::checkApplicationMetadataFormatVersion  uri: table:test/collection/0-3817864913425832323 ok range 1 -> 1 current: 1
2020-10-02T20:45:27.875+0000 D2 STORAGE  [initandlisten] WiredTigerSizeStorer::load table:test/collection/0-3817864913425832323 -> { numRecords: 1, dataSize: 122 }
2020-10-02T20:45:27.875+0000 D3 STORAGE  [initandlisten] looking up metadata for: test.inventory @ RecordId(6)
2020-10-02T20:45:27.875+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "test/index/1-3817864913425832323" }, ns: "test.inventory", ident: "test/collection/0-3817864913425832323" }
2020-10-02T20:45:27.875+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.875+0000 D1 STORAGE  [initandlisten] Registering collection test.inventory with UUID 66dd6c2e-e14a-4284-a2a5-a7574ac1fd74
2020-10-02T20:45:27.875+0000 D3 STORAGE  [initandlisten] looking up metadata for: test.inventory @ RecordId(6)
2020-10-02T20:45:27.875+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "test/index/1-3817864913425832323" }, ns: "test.inventory", ident: "test/collection/0-3817864913425832323" }
2020-10-02T20:45:27.875+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.875+0000 D3 STORAGE  [initandlisten] WT rollback_transaction for snapshot id 2
2020-10-02T20:45:27.875+0000 I  STORAGE  [initandlisten] Timestamp monitor starting
2020-10-02T20:45:27.875+0000 D2 -        [initandlisten] Starting periodic job TimestampMonitor
2020-10-02T20:45:27.876+0000 D1 STORAGE  [initandlisten] flushing directory /home/bimongod/data
2020-10-02T20:45:27.877+0000 I  CONTROL  [initandlisten] 
2020-10-02T20:45:27.877+0000 I  CONTROL  [initandlisten] ** WARNING: /sys/kernel/mm/transparent_hugepage/enabled is 'always'.
2020-10-02T20:45:27.877+0000 I  CONTROL  [initandlisten] **        We suggest setting it to 'never'
2020-10-02T20:45:27.877+0000 I  CONTROL  [initandlisten] 
2020-10-02T20:45:27.877+0000 I  CONTROL  [initandlisten] ** WARNING: /sys/kernel/mm/transparent_hugepage/defrag is 'always'.
2020-10-02T20:45:27.877+0000 I  CONTROL  [initandlisten] **        We suggest setting it to 'never'
2020-10-02T20:45:27.877+0000 I  CONTROL  [initandlisten] 
2020-10-02T20:45:27.877+0000 D1 COMMAND  [SNMPAgent] BackgroundJob starting: SNMPAgent
2020-10-02T20:45:27.877+0000 D1 NETWORK  [SNMPAgent] SNMPAgent not enabled
2020-10-02T20:45:27.877+0000 D3 STORAGE  [initandlisten] WT begin_transaction for snapshot id 4
2020-10-02T20:45:27.877+0000 D2 RECOVERY [initandlisten] Reconciling collection and index idents.
2020-10-02T20:45:27.877+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.users @ RecordId(5)
2020-10-02T20:45:27.877+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--732801831392209623", user_1_db_1: "admin/index/2--732801831392209623" }, ns: "admin.system.users", ident: "admin/collection/0--732801831392209623" }
2020-10-02T20:45:27.877+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.877+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.users @ RecordId(5)
2020-10-02T20:45:27.877+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.users @ RecordId(5)
2020-10-02T20:45:27.877+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.version @ RecordId(1)
2020-10-02T20:45:27.877+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--2310914167168443545" }, ns: "admin.system.version", ident: "admin/collection/0--2310914167168443545" }
2020-10-02T20:45:27.877+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.877+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.version @ RecordId(1)
2020-10-02T20:45:27.877+0000 D3 STORAGE  [initandlisten] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:45:27.877+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:45:27.877+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.877+0000 D3 STORAGE  [initandlisten] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:45:27.877+0000 D3 STORAGE  [initandlisten] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:45:27.877+0000 D3 STORAGE  [initandlisten] looking up metadata for: local.startup_log @ RecordId(3)
2020-10-02T20:45:27.877+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "local/index/3--2310914167168443545" }, ns: "local.startup_log", ident: "local/collection/2--2310914167168443545" }
2020-10-02T20:45:27.877+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.877+0000 D3 STORAGE  [initandlisten] looking up metadata for: local.startup_log @ RecordId(3)
2020-10-02T20:45:27.877+0000 D3 STORAGE  [initandlisten] looking up metadata for: movies.movies @ RecordId(7)
2020-10-02T20:45:27.877+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "movies/index/1-5928759223889663863" }, ns: "movies.movies", ident: "movies/collection/0-5928759223889663863" }
2020-10-02T20:45:27.877+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.877+0000 D3 STORAGE  [initandlisten] looking up metadata for: movies.movies @ RecordId(7)
2020-10-02T20:45:27.877+0000 D3 STORAGE  [initandlisten] looking up metadata for: test.inventory @ RecordId(6)
2020-10-02T20:45:27.877+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "test/index/1-3817864913425832323" }, ns: "test.inventory", ident: "test/collection/0-3817864913425832323" }
2020-10-02T20:45:27.877+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.877+0000 D3 STORAGE  [initandlisten] looking up metadata for: test.inventory @ RecordId(6)
2020-10-02T20:45:27.877+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.version @ RecordId(1)
2020-10-02T20:45:27.877+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--2310914167168443545" }, ns: "admin.system.version", ident: "admin/collection/0--2310914167168443545" }
2020-10-02T20:45:27.877+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.877+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.version @ RecordId(1)
2020-10-02T20:45:27.877+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--2310914167168443545" }, ns: "admin.system.version", ident: "admin/collection/0--2310914167168443545" }
2020-10-02T20:45:27.877+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.877+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.version @ RecordId(1)
2020-10-02T20:45:27.877+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--2310914167168443545" }, ns: "admin.system.version", ident: "admin/collection/0--2310914167168443545" }
2020-10-02T20:45:27.877+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.877+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.version @ RecordId(1)
2020-10-02T20:45:27.877+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--2310914167168443545" }, ns: "admin.system.version", ident: "admin/collection/0--2310914167168443545" }
2020-10-02T20:45:27.877+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.877+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.version @ RecordId(1)
2020-10-02T20:45:27.877+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--2310914167168443545" }, ns: "admin.system.version", ident: "admin/collection/0--2310914167168443545" }
2020-10-02T20:45:27.877+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.877+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.version @ RecordId(1)
2020-10-02T20:45:27.877+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--2310914167168443545" }, ns: "admin.system.version", ident: "admin/collection/0--2310914167168443545" }
2020-10-02T20:45:27.877+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.877+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.version @ RecordId(1)
2020-10-02T20:45:27.878+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--2310914167168443545" }, ns: "admin.system.version", ident: "admin/collection/0--2310914167168443545" }
2020-10-02T20:45:27.878+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.878+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.version @ RecordId(1)
2020-10-02T20:45:27.878+0000 D2 STORAGE  [initandlisten] WiredTigerUtil::checkApplicationMetadataFormatVersion  uri: table:admin/index/1--2310914167168443545 ok range 6 -> 12 current: 8
2020-10-02T20:45:27.878+0000 D1 STORAGE  [initandlisten] admin.system.version: clearing plan cache - collection info cache reset
2020-10-02T20:45:27.878+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.users @ RecordId(5)
2020-10-02T20:45:27.878+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--732801831392209623", user_1_db_1: "admin/index/2--732801831392209623" }, ns: "admin.system.users", ident: "admin/collection/0--732801831392209623" }
2020-10-02T20:45:27.878+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.878+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.users @ RecordId(5)
2020-10-02T20:45:27.878+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--732801831392209623", user_1_db_1: "admin/index/2--732801831392209623" }, ns: "admin.system.users", ident: "admin/collection/0--732801831392209623" }
2020-10-02T20:45:27.878+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.878+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.users @ RecordId(5)
2020-10-02T20:45:27.878+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--732801831392209623", user_1_db_1: "admin/index/2--732801831392209623" }, ns: "admin.system.users", ident: "admin/collection/0--732801831392209623" }
2020-10-02T20:45:27.878+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.878+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.users @ RecordId(5)
2020-10-02T20:45:27.878+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--732801831392209623", user_1_db_1: "admin/index/2--732801831392209623" }, ns: "admin.system.users", ident: "admin/collection/0--732801831392209623" }
2020-10-02T20:45:27.878+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.878+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.users @ RecordId(5)
2020-10-02T20:45:27.878+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--732801831392209623", user_1_db_1: "admin/index/2--732801831392209623" }, ns: "admin.system.users", ident: "admin/collection/0--732801831392209623" }
2020-10-02T20:45:27.878+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.878+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.users @ RecordId(5)
2020-10-02T20:45:27.878+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--732801831392209623", user_1_db_1: "admin/index/2--732801831392209623" }, ns: "admin.system.users", ident: "admin/collection/0--732801831392209623" }
2020-10-02T20:45:27.878+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.878+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.users @ RecordId(5)
2020-10-02T20:45:27.878+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--732801831392209623", user_1_db_1: "admin/index/2--732801831392209623" }, ns: "admin.system.users", ident: "admin/collection/0--732801831392209623" }
2020-10-02T20:45:27.878+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.878+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.users @ RecordId(5)
2020-10-02T20:45:27.878+0000 D2 STORAGE  [initandlisten] WiredTigerUtil::checkApplicationMetadataFormatVersion  uri: table:admin/index/1--732801831392209623 ok range 6 -> 12 current: 8
2020-10-02T20:45:27.878+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.users @ RecordId(5)
2020-10-02T20:45:27.878+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--732801831392209623", user_1_db_1: "admin/index/2--732801831392209623" }, ns: "admin.system.users", ident: "admin/collection/0--732801831392209623" }
2020-10-02T20:45:27.878+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.878+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.users @ RecordId(5)
2020-10-02T20:45:27.878+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--732801831392209623", user_1_db_1: "admin/index/2--732801831392209623" }, ns: "admin.system.users", ident: "admin/collection/0--732801831392209623" }
2020-10-02T20:45:27.878+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.878+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.users @ RecordId(5)
2020-10-02T20:45:27.878+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--732801831392209623", user_1_db_1: "admin/index/2--732801831392209623" }, ns: "admin.system.users", ident: "admin/collection/0--732801831392209623" }
2020-10-02T20:45:27.878+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.878+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.users @ RecordId(5)
2020-10-02T20:45:27.878+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--732801831392209623", user_1_db_1: "admin/index/2--732801831392209623" }, ns: "admin.system.users", ident: "admin/collection/0--732801831392209623" }
2020-10-02T20:45:27.878+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.878+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.users @ RecordId(5)
2020-10-02T20:45:27.878+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--732801831392209623", user_1_db_1: "admin/index/2--732801831392209623" }, ns: "admin.system.users", ident: "admin/collection/0--732801831392209623" }
2020-10-02T20:45:27.878+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.878+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.users @ RecordId(5)
2020-10-02T20:45:27.878+0000 D2 STORAGE  [initandlisten] WiredTigerUtil::checkApplicationMetadataFormatVersion  uri: table:admin/index/2--732801831392209623 ok range 6 -> 12 current: 12
2020-10-02T20:45:27.879+0000 D1 STORAGE  [initandlisten] admin.system.users: clearing plan cache - collection info cache reset
2020-10-02T20:45:27.879+0000 D1 -        [initandlisten] reloading view catalog for database admin
2020-10-02T20:45:27.879+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.version @ RecordId(1)
2020-10-02T20:45:27.879+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--2310914167168443545" }, ns: "admin.system.version", ident: "admin/collection/0--2310914167168443545" }
2020-10-02T20:45:27.879+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.879+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.version @ RecordId(1)
2020-10-02T20:45:27.879+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--2310914167168443545" }, ns: "admin.system.version", ident: "admin/collection/0--2310914167168443545" }
2020-10-02T20:45:27.879+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.879+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.version @ RecordId(1)
2020-10-02T20:45:27.879+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--2310914167168443545" }, ns: "admin.system.version", ident: "admin/collection/0--2310914167168443545" }
2020-10-02T20:45:27.879+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.879+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.users @ RecordId(5)
2020-10-02T20:45:27.879+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--732801831392209623", user_1_db_1: "admin/index/2--732801831392209623" }, ns: "admin.system.users", ident: "admin/collection/0--732801831392209623" }
2020-10-02T20:45:27.879+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.879+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.users @ RecordId(5)
2020-10-02T20:45:27.879+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--732801831392209623", user_1_db_1: "admin/index/2--732801831392209623" }, ns: "admin.system.users", ident: "admin/collection/0--732801831392209623" }
2020-10-02T20:45:27.879+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.879+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.users @ RecordId(5)
2020-10-02T20:45:27.879+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--732801831392209623", user_1_db_1: "admin/index/2--732801831392209623" }, ns: "admin.system.users", ident: "admin/collection/0--732801831392209623" }
2020-10-02T20:45:27.879+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.879+0000 D3 STORAGE  [initandlisten] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:45:27.879+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:45:27.879+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.879+0000 D3 STORAGE  [initandlisten] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:45:27.879+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:45:27.879+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.879+0000 D3 STORAGE  [initandlisten] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:45:27.879+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:45:27.879+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.879+0000 D3 STORAGE  [initandlisten] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:45:27.879+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:45:27.879+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.879+0000 D3 STORAGE  [initandlisten] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:45:27.879+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:45:27.879+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.879+0000 D3 STORAGE  [initandlisten] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:45:27.879+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:45:27.879+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.879+0000 D3 STORAGE  [initandlisten] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:45:27.879+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:45:27.879+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.879+0000 D3 STORAGE  [initandlisten] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:45:27.879+0000 D2 STORAGE  [initandlisten] WiredTigerUtil::checkApplicationMetadataFormatVersion  uri: table:config/index/5--2310914167168443545 ok range 6 -> 12 current: 8
2020-10-02T20:45:27.879+0000 D3 STORAGE  [initandlisten] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:45:27.879+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:45:27.879+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.879+0000 D3 STORAGE  [initandlisten] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:45:27.879+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:45:27.879+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.879+0000 D3 STORAGE  [initandlisten] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:45:27.879+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:45:27.879+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.879+0000 D3 STORAGE  [initandlisten] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:45:27.879+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:45:27.879+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.879+0000 D3 STORAGE  [initandlisten] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:45:27.879+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:45:27.879+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.879+0000 D3 STORAGE  [initandlisten] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:45:27.879+0000 D2 STORAGE  [initandlisten] WiredTigerUtil::checkApplicationMetadataFormatVersion  uri: table:config/index/6--2310914167168443545 ok range 6 -> 12 current: 8
2020-10-02T20:45:27.880+0000 D1 STORAGE  [initandlisten] config.system.sessions: clearing plan cache - collection info cache reset
2020-10-02T20:45:27.880+0000 D1 -        [initandlisten] reloading view catalog for database config
2020-10-02T20:45:27.880+0000 D3 STORAGE  [initandlisten] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:45:27.880+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:45:27.880+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.880+0000 D3 STORAGE  [initandlisten] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:45:27.880+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:45:27.880+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.880+0000 D3 STORAGE  [initandlisten] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:45:27.880+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:45:27.880+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.880+0000 D3 STORAGE  [initandlisten] looking up metadata for: local.startup_log @ RecordId(3)
2020-10-02T20:45:27.880+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "local/index/3--2310914167168443545" }, ns: "local.startup_log", ident: "local/collection/2--2310914167168443545" }
2020-10-02T20:45:27.880+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.880+0000 D3 STORAGE  [initandlisten] looking up metadata for: local.startup_log @ RecordId(3)
2020-10-02T20:45:27.880+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "local/index/3--2310914167168443545" }, ns: "local.startup_log", ident: "local/collection/2--2310914167168443545" }
2020-10-02T20:45:27.880+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.880+0000 D3 STORAGE  [initandlisten] looking up metadata for: local.startup_log @ RecordId(3)
2020-10-02T20:45:27.880+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "local/index/3--2310914167168443545" }, ns: "local.startup_log", ident: "local/collection/2--2310914167168443545" }
2020-10-02T20:45:27.880+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.880+0000 D3 STORAGE  [initandlisten] looking up metadata for: local.startup_log @ RecordId(3)
2020-10-02T20:45:27.880+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "local/index/3--2310914167168443545" }, ns: "local.startup_log", ident: "local/collection/2--2310914167168443545" }
2020-10-02T20:45:27.880+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.880+0000 D3 STORAGE  [initandlisten] looking up metadata for: local.startup_log @ RecordId(3)
2020-10-02T20:45:27.880+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "local/index/3--2310914167168443545" }, ns: "local.startup_log", ident: "local/collection/2--2310914167168443545" }
2020-10-02T20:45:27.880+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.880+0000 D3 STORAGE  [initandlisten] looking up metadata for: local.startup_log @ RecordId(3)
2020-10-02T20:45:27.880+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "local/index/3--2310914167168443545" }, ns: "local.startup_log", ident: "local/collection/2--2310914167168443545" }
2020-10-02T20:45:27.880+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.880+0000 D3 STORAGE  [initandlisten] looking up metadata for: local.startup_log @ RecordId(3)
2020-10-02T20:45:27.880+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "local/index/3--2310914167168443545" }, ns: "local.startup_log", ident: "local/collection/2--2310914167168443545" }
2020-10-02T20:45:27.880+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.880+0000 D3 STORAGE  [initandlisten] looking up metadata for: local.startup_log @ RecordId(3)
2020-10-02T20:45:27.880+0000 D2 STORAGE  [initandlisten] WiredTigerUtil::checkApplicationMetadataFormatVersion  uri: table:local/index/3--2310914167168443545 ok range 6 -> 12 current: 8
2020-10-02T20:45:27.880+0000 D1 STORAGE  [initandlisten] local.startup_log: clearing plan cache - collection info cache reset
2020-10-02T20:45:27.880+0000 D1 -        [initandlisten] reloading view catalog for database local
2020-10-02T20:45:27.880+0000 D3 STORAGE  [initandlisten] looking up metadata for: local.startup_log @ RecordId(3)
2020-10-02T20:45:27.880+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "local/index/3--2310914167168443545" }, ns: "local.startup_log", ident: "local/collection/2--2310914167168443545" }
2020-10-02T20:45:27.880+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.880+0000 D3 STORAGE  [initandlisten] looking up metadata for: movies.movies @ RecordId(7)
2020-10-02T20:45:27.880+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "movies/index/1-5928759223889663863" }, ns: "movies.movies", ident: "movies/collection/0-5928759223889663863" }
2020-10-02T20:45:27.880+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.880+0000 D3 STORAGE  [initandlisten] looking up metadata for: movies.movies @ RecordId(7)
2020-10-02T20:45:27.880+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "movies/index/1-5928759223889663863" }, ns: "movies.movies", ident: "movies/collection/0-5928759223889663863" }
2020-10-02T20:45:27.880+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.880+0000 D3 STORAGE  [initandlisten] looking up metadata for: movies.movies @ RecordId(7)
2020-10-02T20:45:27.880+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "movies/index/1-5928759223889663863" }, ns: "movies.movies", ident: "movies/collection/0-5928759223889663863" }
2020-10-02T20:45:27.880+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.880+0000 D3 STORAGE  [initandlisten] looking up metadata for: movies.movies @ RecordId(7)
2020-10-02T20:45:27.880+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "movies/index/1-5928759223889663863" }, ns: "movies.movies", ident: "movies/collection/0-5928759223889663863" }
2020-10-02T20:45:27.880+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.880+0000 D3 STORAGE  [initandlisten] looking up metadata for: movies.movies @ RecordId(7)
2020-10-02T20:45:27.880+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "movies/index/1-5928759223889663863" }, ns: "movies.movies", ident: "movies/collection/0-5928759223889663863" }
2020-10-02T20:45:27.880+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.880+0000 D3 STORAGE  [initandlisten] looking up metadata for: movies.movies @ RecordId(7)
2020-10-02T20:45:27.880+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "movies/index/1-5928759223889663863" }, ns: "movies.movies", ident: "movies/collection/0-5928759223889663863" }
2020-10-02T20:45:27.880+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.880+0000 D3 STORAGE  [initandlisten] looking up metadata for: movies.movies @ RecordId(7)
2020-10-02T20:45:27.880+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "movies/index/1-5928759223889663863" }, ns: "movies.movies", ident: "movies/collection/0-5928759223889663863" }
2020-10-02T20:45:27.880+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.880+0000 D3 STORAGE  [initandlisten] looking up metadata for: movies.movies @ RecordId(7)
2020-10-02T20:45:27.880+0000 D2 STORAGE  [initandlisten] WiredTigerUtil::checkApplicationMetadataFormatVersion  uri: table:movies/index/1-5928759223889663863 ok range 6 -> 12 current: 8
2020-10-02T20:45:27.880+0000 D1 STORAGE  [initandlisten] movies.movies: clearing plan cache - collection info cache reset
2020-10-02T20:45:27.881+0000 D1 -        [initandlisten] reloading view catalog for database movies
2020-10-02T20:45:27.881+0000 D3 STORAGE  [initandlisten] looking up metadata for: movies.movies @ RecordId(7)
2020-10-02T20:45:27.881+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "movies/index/1-5928759223889663863" }, ns: "movies.movies", ident: "movies/collection/0-5928759223889663863" }
2020-10-02T20:45:27.881+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.881+0000 D3 STORAGE  [initandlisten] looking up metadata for: movies.movies @ RecordId(7)
2020-10-02T20:45:27.881+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "movies/index/1-5928759223889663863" }, ns: "movies.movies", ident: "movies/collection/0-5928759223889663863" }
2020-10-02T20:45:27.881+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.881+0000 D3 STORAGE  [initandlisten] looking up metadata for: movies.movies @ RecordId(7)
2020-10-02T20:45:27.881+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "movies/index/1-5928759223889663863" }, ns: "movies.movies", ident: "movies/collection/0-5928759223889663863" }
2020-10-02T20:45:27.881+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.881+0000 D3 STORAGE  [initandlisten] looking up metadata for: test.inventory @ RecordId(6)
2020-10-02T20:45:27.881+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "test/index/1-3817864913425832323" }, ns: "test.inventory", ident: "test/collection/0-3817864913425832323" }
2020-10-02T20:45:27.881+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.881+0000 D3 STORAGE  [initandlisten] looking up metadata for: test.inventory @ RecordId(6)
2020-10-02T20:45:27.881+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "test/index/1-3817864913425832323" }, ns: "test.inventory", ident: "test/collection/0-3817864913425832323" }
2020-10-02T20:45:27.881+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.881+0000 D3 STORAGE  [initandlisten] looking up metadata for: test.inventory @ RecordId(6)
2020-10-02T20:45:27.881+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "test/index/1-3817864913425832323" }, ns: "test.inventory", ident: "test/collection/0-3817864913425832323" }
2020-10-02T20:45:27.881+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.881+0000 D3 STORAGE  [initandlisten] looking up metadata for: test.inventory @ RecordId(6)
2020-10-02T20:45:27.881+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "test/index/1-3817864913425832323" }, ns: "test.inventory", ident: "test/collection/0-3817864913425832323" }
2020-10-02T20:45:27.881+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.881+0000 D3 STORAGE  [initandlisten] looking up metadata for: test.inventory @ RecordId(6)
2020-10-02T20:45:27.881+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "test/index/1-3817864913425832323" }, ns: "test.inventory", ident: "test/collection/0-3817864913425832323" }
2020-10-02T20:45:27.881+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.881+0000 D3 STORAGE  [initandlisten] looking up metadata for: test.inventory @ RecordId(6)
2020-10-02T20:45:27.881+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "test/index/1-3817864913425832323" }, ns: "test.inventory", ident: "test/collection/0-3817864913425832323" }
2020-10-02T20:45:27.881+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.881+0000 D3 STORAGE  [initandlisten] looking up metadata for: test.inventory @ RecordId(6)
2020-10-02T20:45:27.881+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "test/index/1-3817864913425832323" }, ns: "test.inventory", ident: "test/collection/0-3817864913425832323" }
2020-10-02T20:45:27.881+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.881+0000 D3 STORAGE  [initandlisten] looking up metadata for: test.inventory @ RecordId(6)
2020-10-02T20:45:27.881+0000 D2 STORAGE  [initandlisten] WiredTigerUtil::checkApplicationMetadataFormatVersion  uri: table:test/index/1-3817864913425832323 ok range 6 -> 12 current: 8
2020-10-02T20:45:27.881+0000 D1 STORAGE  [initandlisten] test.inventory: clearing plan cache - collection info cache reset
2020-10-02T20:45:27.881+0000 D1 -        [initandlisten] reloading view catalog for database test
2020-10-02T20:45:27.881+0000 D3 STORAGE  [initandlisten] looking up metadata for: test.inventory @ RecordId(6)
2020-10-02T20:45:27.881+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "test/index/1-3817864913425832323" }, ns: "test.inventory", ident: "test/collection/0-3817864913425832323" }
2020-10-02T20:45:27.881+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.881+0000 D3 STORAGE  [initandlisten] looking up metadata for: test.inventory @ RecordId(6)
2020-10-02T20:45:27.881+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "test/index/1-3817864913425832323" }, ns: "test.inventory", ident: "test/collection/0-3817864913425832323" }
2020-10-02T20:45:27.881+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.881+0000 D3 STORAGE  [initandlisten] looking up metadata for: test.inventory @ RecordId(6)
2020-10-02T20:45:27.881+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "test/index/1-3817864913425832323" }, ns: "test.inventory", ident: "test/collection/0-3817864913425832323" }
2020-10-02T20:45:27.881+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.881+0000 D2 CONNPOOL [initandlisten] Controller for NetworkInterfaceTL-CollectionRangeDeleter-TaskExecutor is LimitController
2020-10-02T20:45:27.881+0000 I  SHARDING [initandlisten] Marking collection local.system.replset as collection version: <unsharded>
2020-10-02T20:45:27.881+0000 D2 ASIO     [CollectionRangeDeleter-TaskExecutor] The NetworkInterfaceTL reactor thread is spinning up
2020-10-02T20:45:27.881+0000 D1 STORAGE  [initandlisten]     Recovering database: admin
2020-10-02T20:45:27.881+0000 D2 QUERY    [initandlisten] Using idhack: ns: admin.system.version query: { _id: "featureCompatibilityVersion" } sort: {} projection: {}
2020-10-02T20:45:27.882+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.version @ RecordId(1)
2020-10-02T20:45:27.882+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--2310914167168443545" }, ns: "admin.system.version", ident: "admin/collection/0--2310914167168443545" }
2020-10-02T20:45:27.882+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.882+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.users @ RecordId(5)
2020-10-02T20:45:27.882+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--732801831392209623", user_1_db_1: "admin/index/2--732801831392209623" }, ns: "admin.system.users", ident: "admin/collection/0--732801831392209623" }
2020-10-02T20:45:27.882+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.882+0000 D1 STORAGE  [initandlisten]     Recovering database: config
2020-10-02T20:45:27.882+0000 D3 STORAGE  [initandlisten] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:45:27.882+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:45:27.882+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.882+0000 D1 STORAGE  [initandlisten]     Recovering database: local
2020-10-02T20:45:27.882+0000 D3 STORAGE  [initandlisten] looking up metadata for: local.startup_log @ RecordId(3)
2020-10-02T20:45:27.882+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "local/index/3--2310914167168443545" }, ns: "local.startup_log", ident: "local/collection/2--2310914167168443545" }
2020-10-02T20:45:27.882+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.882+0000 D1 STORAGE  [initandlisten]     Recovering database: movies
2020-10-02T20:45:27.882+0000 D3 STORAGE  [initandlisten] looking up metadata for: movies.movies @ RecordId(7)
2020-10-02T20:45:27.882+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "movies/index/1-5928759223889663863" }, ns: "movies.movies", ident: "movies/collection/0-5928759223889663863" }
2020-10-02T20:45:27.882+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.882+0000 D1 STORAGE  [initandlisten]     Recovering database: test
2020-10-02T20:45:27.882+0000 D3 STORAGE  [initandlisten] looking up metadata for: test.inventory @ RecordId(6)
2020-10-02T20:45:27.882+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "test/index/1-3817864913425832323" }, ns: "test.inventory", ident: "test/collection/0-3817864913425832323" }
2020-10-02T20:45:27.882+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.882+0000 D3 REPL     [initandlisten] No min valid document found, returning initial sync flag value of false.
2020-10-02T20:45:27.882+0000 D1 STORAGE  [initandlisten] done repairDatabases
2020-10-02T20:45:27.882+0000 D3 STORAGE  [initandlisten] WT rollback_transaction for snapshot id 4
2020-10-02T20:45:27.882+0000 D3 REPL     [initandlisten] No min valid document found, returning initial sync flag value of false.
2020-10-02T20:45:27.882+0000 I  STORAGE  [initandlisten] Flow Control is enabled on this deployment.
2020-10-02T20:45:27.883+0000 D2 COMMAND  [initandlisten] run command admin.$cmd { find: "system.roles", $db: "admin" }
2020-10-02T20:45:27.883+0000 I  SHARDING [initandlisten] Marking collection admin.system.roles as collection version: <unsharded>
2020-10-02T20:45:27.883+0000 D2 QUERY    [initandlisten] Collection admin.system.roles does not exist. Using EOF plan: ns: admin.system.roles query: {} sort: {} projection: {}
2020-10-02T20:45:27.883+0000 I  COMMAND  [initandlisten] command admin.system.roles command: find { find: "system.roles", $db: "admin" } planSummary: EOF keysExamined:0 docsExamined:0 cursorExhausted:1 numYields:0 nreturned:0 reslen:107 locks:{ ReplicationStateTransition: { acquireCount: { w: 1 } }, Global: { acquireCount: { r: 1 } }, Database: { acquireCount: { r: 1 } }, Collection: { acquireCount: { r: 2 } }, Mutex: { acquireCount: { r: 1 } } } storage:{ data: { bytesRead: 343, timeReadingMicros: 4 } } protocol:op_msg 0ms
2020-10-02T20:45:27.883+0000 D1 ACCESS   [initandlisten] There were no users to pin, not starting tracker thread
2020-10-02T20:45:27.883+0000 D2 ACCESS   [initandlisten] Invalidating user cache
2020-10-02T20:45:27.883+0000 D4 -        [initandlisten] Taking ticket. Available: 1000000000
2020-10-02T20:45:27.883+0000 I  SHARDING [initandlisten] Marking collection admin.system.version as collection version: <unsharded>
2020-10-02T20:45:27.883+0000 D2 QUERY    [initandlisten] Using idhack: ns: admin.system.version query: { _id: "authSchema" } sort: {} projection: {}
2020-10-02T20:45:27.883+0000 D3 STORAGE  [initandlisten] WT begin_transaction for snapshot id 5
2020-10-02T20:45:27.883+0000 D3 STORAGE  [initandlisten] WT rollback_transaction for snapshot id 5
2020-10-02T20:45:27.883+0000 D2 QUERY    [initandlisten] Using idhack: ns: admin.system.version query: { _id: "shardIdentity" } sort: {} projection: {}
2020-10-02T20:45:27.883+0000 D3 STORAGE  [initandlisten] WT begin_transaction for snapshot id 6
2020-10-02T20:45:27.883+0000 D3 STORAGE  [initandlisten] WT rollback_transaction for snapshot id 6
2020-10-02T20:45:27.883+0000 D3 STORAGE  [initandlisten] WT begin_transaction for snapshot id 8
2020-10-02T20:45:27.884+0000 D2 STORAGE  [initandlisten] WiredTigerSizeStorer::store Marking table:local/collection/2--2310914167168443545 dirty, numRecords: 78, dataSize: 162280, use_count: 3
2020-10-02T20:45:27.884+0000 I  SHARDING [initandlisten] Marking collection local.startup_log as collection version: <unsharded>
2020-10-02T20:45:27.884+0000 D3 STORAGE  [initandlisten] WT commit_transaction for snapshot id 8
2020-10-02T20:45:27.884+0000 I  FTDC     [initandlisten] Initializing full-time diagnostic data capture with directory '/home/bimongod/data/diagnostic.data'
2020-10-02T20:45:27.884+0000 D1 COMMAND  [TTLMonitor] BackgroundJob starting: TTLMonitor
2020-10-02T20:45:27.885+0000 D1 COMMAND  [ClientCursorMonitor] BackgroundJob starting: ClientCursorMonitor
2020-10-02T20:45:27.885+0000 D1 COMMAND  [PeriodicTaskRunner] BackgroundJob starting: PeriodicTaskRunner
2020-10-02T20:45:27.885+0000 D2 -        [initandlisten] Starting periodic job abortExpiredTransactions
2020-10-02T20:45:27.885+0000 D2 -        [initandlisten] Starting periodic job startPeriodicThreadToDecreaseSnapshotHistoryCachePressure
2020-10-02T20:45:27.885+0000 D2 WRITE    [abortExpiredTransactions] Beginning scanSessions. Scanning 0 sessions.
2020-10-02T20:45:27.885+0000 D2 -        [initandlisten] Starting periodic job LogicalSessionCacheRefresh
2020-10-02T20:45:27.886+0000 D2 COMMAND  [LogicalSessionCacheRefresh] run command config.$cmd { listIndexes: "system.sessions", cursor: {}, $db: "config" }
2020-10-02T20:45:27.886+0000 I  SHARDING [LogicalSessionCacheRefresh] Marking collection config.system.sessions as collection version: <unsharded>
2020-10-02T20:45:27.886+0000 D3 STORAGE  [LogicalSessionCacheRefresh] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:45:27.886+0000 D3 STORAGE  [LogicalSessionCacheRefresh] WT begin_transaction for snapshot id 13
2020-10-02T20:45:27.886+0000 D3 STORAGE  [LogicalSessionCacheRefresh]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:45:27.886+0000 D3 STORAGE  [LogicalSessionCacheRefresh] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.886+0000 D3 STORAGE  [LogicalSessionCacheRefresh] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:45:27.886+0000 D3 STORAGE  [LogicalSessionCacheRefresh]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:45:27.886+0000 D3 STORAGE  [LogicalSessionCacheRefresh] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.886+0000 D3 STORAGE  [LogicalSessionCacheRefresh] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:45:27.886+0000 D3 STORAGE  [LogicalSessionCacheRefresh]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:45:27.886+0000 D3 STORAGE  [LogicalSessionCacheRefresh] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.886+0000 D3 STORAGE  [LogicalSessionCacheRefresh] WT rollback_transaction for snapshot id 13
2020-10-02T20:45:27.886+0000 I  COMMAND  [LogicalSessionCacheRefresh] command config.system.sessions command: listIndexes { listIndexes: "system.sessions", cursor: {}, $db: "config" } numYields:0 reslen:307 locks:{ ReplicationStateTransition: { acquireCount: { w: 1 } }, Global: { acquireCount: { r: 1 } }, Database: { acquireCount: { r: 1 } }, Collection: { acquireCount: { r: 1 } }, Mutex: { acquireCount: { r: 1 } } } storage:{} protocol:op_msg 0ms
2020-10-02T20:45:27.886+0000 D2 -        [initandlisten] Starting periodic job LogicalSessionCacheReap
2020-10-02T20:45:27.886+0000 D2 COMMAND  [LogicalSessionCacheReap] run command config.$cmd { listIndexes: "system.sessions", cursor: {}, $db: "config" }
2020-10-02T20:45:27.886+0000 D3 STORAGE  [LogicalSessionCacheReap] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:45:27.886+0000 D3 STORAGE  [LogicalSessionCacheReap] WT begin_transaction for snapshot id 15
2020-10-02T20:45:27.886+0000 D3 STORAGE  [LogicalSessionCacheReap]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:45:27.886+0000 D3 STORAGE  [LogicalSessionCacheReap] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.886+0000 D3 STORAGE  [LogicalSessionCacheReap] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:45:27.886+0000 D3 STORAGE  [LogicalSessionCacheReap]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:45:27.886+0000 I  NETWORK  [listener] Listening on /tmp/mongodb-27000.sock
2020-10-02T20:45:27.886+0000 D3 STORAGE  [LogicalSessionCacheReap] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.886+0000 D3 STORAGE  [LogicalSessionCacheReap] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:45:27.886+0000 I  NETWORK  [listener] Listening on 0.0.0.0
2020-10-02T20:45:27.886+0000 D3 STORAGE  [LogicalSessionCacheReap]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:45:27.886+0000 I  NETWORK  [listener] waiting for connections on port 27000
2020-10-02T20:45:27.886+0000 D3 STORAGE  [LogicalSessionCacheReap] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:27.886+0000 D3 STORAGE  [LogicalSessionCacheReap] WT rollback_transaction for snapshot id 15
2020-10-02T20:45:27.886+0000 I  COMMAND  [LogicalSessionCacheReap] command config.system.sessions command: listIndexes { listIndexes: "system.sessions", cursor: {}, $db: "config" } numYields:0 reslen:307 locks:{ ReplicationStateTransition: { acquireCount: { w: 1 } }, Global: { acquireCount: { r: 1 } }, Database: { acquireCount: { r: 1 } }, Collection: { acquireCount: { r: 1 } }, Mutex: { acquireCount: { r: 1 } } } storage:{} protocol:op_msg 0ms
2020-10-02T20:45:27.886+0000 D2 WRITE    [LogicalSessionCacheReap] Beginning scanSessions. Scanning 0 sessions.
2020-10-02T20:45:27.886+0000 D2 COMMAND  [LogicalSessionCacheReap] run command config.$cmd { find: "transactions", filter: { lastWriteDate: { $lt: new Date(1601669727886) } }, projection: { _id: 1 }, sort: { _id: 1 }, $db: "config" }
2020-10-02T20:45:27.886+0000 I  SHARDING [LogicalSessionCacheReap] Marking collection config.transactions as collection version: <unsharded>
2020-10-02T20:45:27.886+0000 D2 QUERY    [LogicalSessionCacheReap] Collection config.transactions does not exist. Using EOF plan: ns: config.transactions query: { lastWriteDate: { $lt: new Date(1601669727886) } } sort: { _id: 1 } projection: { _id: 1 }
2020-10-02T20:45:27.887+0000 I  COMMAND  [LogicalSessionCacheReap] command config.transactions command: find { find: "transactions", filter: { lastWriteDate: { $lt: new Date(1601669727886) } }, projection: { _id: 1 }, sort: { _id: 1 }, $db: "config" } planSummary: EOF keysExamined:0 docsExamined:0 cursorExhausted:1 numYields:0 nreturned:0 reslen:108 locks:{ ReplicationStateTransition: { acquireCount: { w: 1 } }, Global: { acquireCount: { r: 1 } }, Database: { acquireCount: { r: 1 } }, Collection: { acquireCount: { r: 2 } }, Mutex: { acquireCount: { r: 1 } } } storage:{} protocol:op_msg 0ms
2020-10-02T20:45:27.972+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:27.990+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:45:27.990+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 999999999 Now: 1000000000
2020-10-02T20:45:28.001+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:45:28.001+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:45:28.001+0000 I  SHARDING [ftdc] Marking collection local.oplog.rs as collection version: <unsharded>
2020-10-02T20:45:28.072+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:28.172+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:28.272+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:28.372+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:28.473+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:28.573+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:28.673+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:28.773+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:28.874+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:28.974+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:28.990+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:45:28.990+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:45:29.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:45:29.001+0000 D4 FTDC     [ftdc] full-time diagnostic data capture schema change: currrent document is longer than reference document
2020-10-02T20:45:29.074+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:29.174+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:29.274+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:29.374+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:29.474+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:29.575+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:29.675+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:29.775+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:29.875+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:29.975+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:29.990+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:45:29.990+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:45:30.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:45:30.075+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:30.176+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:30.276+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:30.376+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:30.476+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:30.576+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:30.677+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:30.777+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:30.877+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:30.977+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:30.990+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:45:30.990+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:45:31.001+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:45:31.077+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:31.177+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:31.277+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:31.377+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:31.478+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:31.578+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:31.678+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:31.778+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:31.878+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:31.978+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:31.990+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:45:31.990+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:45:32.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:45:32.079+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:32.179+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:32.279+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:32.287+0000 I  NETWORK  [listener] connection accepted from 172.16.19.208:54192 #1 (1 connection now open)
2020-10-02T20:45:32.287+0000 D3 EXECUTOR [listener] Starting new executor thread in passthrough mode
2020-10-02T20:45:32.287+0000 I  NETWORK  [listener] connection accepted from 172.16.19.208:54194 #2 (2 connections now open)
2020-10-02T20:45:32.287+0000 D3 EXECUTOR [listener] Starting new executor thread in passthrough mode
2020-10-02T20:45:32.288+0000 D2 COMMAND  [conn2] run command admin.$cmd { isMaster: 1, compression: [ "zlib", "snappy" ], client: { driver: { name: "mongo-go-driver", version: "v1.3.4" }, os: { type: "linux", architecture: "amd64" }, platform: "go1.13.10", application: { name: "mongosqld" } }, $readPreference: { mode: "secondaryPreferred" }, $db: "admin" }
2020-10-02T20:45:32.288+0000 D2 COMMAND  [conn1] run command admin.$cmd { isMaster: 1, compression: [ "zlib", "snappy" ], client: { driver: { name: "mongo-go-driver", version: "v1.3.4" }, os: { type: "linux", architecture: "amd64" }, platform: "go1.13.10", application: { name: "mongosqld" } }, $readPreference: { mode: "secondaryPreferred" }, $db: "admin" }
2020-10-02T20:45:32.288+0000 I  NETWORK  [conn2] received client metadata from 172.16.19.208:54194 conn2: { driver: { name: "mongo-go-driver", version: "v1.3.4" }, os: { type: "linux", architecture: "amd64" }, platform: "go1.13.10", application: { name: "mongosqld" } }
2020-10-02T20:45:32.288+0000 I  NETWORK  [conn1] received client metadata from 172.16.19.208:54192 conn1: { driver: { name: "mongo-go-driver", version: "v1.3.4" }, os: { type: "linux", architecture: "amd64" }, platform: "go1.13.10", application: { name: "mongosqld" } }
2020-10-02T20:45:32.288+0000 D3 NETWORK  [conn2] Starting server-side compression negotiation
2020-10-02T20:45:32.288+0000 D3 NETWORK  [conn1] Starting server-side compression negotiation
2020-10-02T20:45:32.288+0000 D3 NETWORK  [conn2] zlib is supported
2020-10-02T20:45:32.288+0000 D3 NETWORK  [conn2] snappy is supported
2020-10-02T20:45:32.288+0000 D3 NETWORK  [conn1] zlib is supported
2020-10-02T20:45:32.288+0000 D3 NETWORK  [conn1] snappy is supported
2020-10-02T20:45:32.288+0000 I  COMMAND  [conn2] command admin.$cmd appName: "mongosqld" command: isMaster { isMaster: 1, compression: [ "zlib", "snappy" ], client: { driver: { name: "mongo-go-driver", version: "v1.3.4" }, os: { type: "linux", architecture: "amd64" }, platform: "go1.13.10", application: { name: "mongosqld" } }, $readPreference: { mode: "secondaryPreferred" }, $db: "admin" } numYields:0 reslen:301 locks:{} protocol:op_query 0ms
2020-10-02T20:45:32.288+0000 I  COMMAND  [conn1] command admin.$cmd appName: "mongosqld" command: isMaster { isMaster: 1, compression: [ "zlib", "snappy" ], client: { driver: { name: "mongo-go-driver", version: "v1.3.4" }, os: { type: "linux", architecture: "amd64" }, platform: "go1.13.10", application: { name: "mongosqld" } }, $readPreference: { mode: "secondaryPreferred" }, $db: "admin" } numYields:0 reslen:301 locks:{} protocol:op_query 0ms
2020-10-02T20:45:32.289+0000 D2 NETWORK  [conn2] Session from 172.16.19.208:54194 encountered a network error during SourceMessage: HostUnreachable: Connection closed by peer
2020-10-02T20:45:32.289+0000 I  NETWORK  [conn2] end connection 172.16.19.208:54194 (1 connection now open)
2020-10-02T20:45:32.289+0000 D2 NETWORK  [conn1] Session from 172.16.19.208:54192 encountered a network error during SourceMessage: HostUnreachable: Connection closed by peer
2020-10-02T20:45:32.289+0000 D3 NETWORK  [conn2] Cancelling outstanding I/O operations on connection to 172.16.19.208:54194
2020-10-02T20:45:32.289+0000 I  NETWORK  [conn1] end connection 172.16.19.208:54192 (0 connections now open)
2020-10-02T20:45:32.289+0000 D3 NETWORK  [conn1] Cancelling outstanding I/O operations on connection to 172.16.19.208:54192
2020-10-02T20:45:32.379+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:32.480+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:32.580+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:32.680+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:32.780+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:32.880+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:32.980+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:32.990+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:45:32.990+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:45:33.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:45:33.080+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:33.181+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:33.281+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:33.381+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:33.481+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:33.581+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:33.681+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:33.782+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:33.882+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:33.982+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:33.990+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:45:33.990+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:45:34.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:45:34.082+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:34.182+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:34.282+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:34.383+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:34.483+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:34.583+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:34.683+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:34.783+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:34.883+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:34.984+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:34.990+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:45:34.990+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:45:35.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:45:35.084+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:35.184+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:35.284+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:35.384+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:35.484+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:35.585+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:35.685+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:35.785+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:35.885+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:35.985+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:35.990+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:45:35.990+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:45:36.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:45:36.085+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:36.185+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:36.286+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:36.386+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:36.486+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:36.586+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:36.686+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:36.786+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:36.887+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:36.935+0000 I  NETWORK  [listener] connection accepted from 172.16.19.208:54198 #3 (1 connection now open)
2020-10-02T20:45:36.935+0000 D3 EXECUTOR [listener] Starting new executor thread in passthrough mode
2020-10-02T20:45:36.935+0000 I  NETWORK  [listener] connection accepted from 172.16.19.208:54199 #4 (2 connections now open)
2020-10-02T20:45:36.935+0000 D3 EXECUTOR [listener] Starting new executor thread in passthrough mode
2020-10-02T20:45:36.935+0000 D2 COMMAND  [conn3] run command admin.$cmd { isMaster: 1, compression: [ "zlib", "snappy" ], client: { driver: { name: "mongo-go-driver", version: "v1.3.4" }, os: { type: "linux", architecture: "amd64" }, platform: "go1.13.10", application: { name: "mongosqld" } }, $readPreference: { mode: "secondaryPreferred" }, $db: "admin" }
2020-10-02T20:45:36.935+0000 D2 COMMAND  [conn4] run command admin.$cmd { isMaster: 1, compression: [ "zlib", "snappy" ], client: { driver: { name: "mongo-go-driver", version: "v1.3.4" }, os: { type: "linux", architecture: "amd64" }, platform: "go1.13.10", application: { name: "mongosqld" } }, $readPreference: { mode: "secondaryPreferred" }, $db: "admin" }
2020-10-02T20:45:36.935+0000 I  NETWORK  [conn3] received client metadata from 172.16.19.208:54198 conn3: { driver: { name: "mongo-go-driver", version: "v1.3.4" }, os: { type: "linux", architecture: "amd64" }, platform: "go1.13.10", application: { name: "mongosqld" } }
2020-10-02T20:45:36.935+0000 D3 NETWORK  [conn3] Starting server-side compression negotiation
2020-10-02T20:45:36.935+0000 I  NETWORK  [conn4] received client metadata from 172.16.19.208:54199 conn4: { driver: { name: "mongo-go-driver", version: "v1.3.4" }, os: { type: "linux", architecture: "amd64" }, platform: "go1.13.10", application: { name: "mongosqld" } }
2020-10-02T20:45:36.935+0000 D3 NETWORK  [conn3] zlib is supported
2020-10-02T20:45:36.935+0000 D3 NETWORK  [conn4] Starting server-side compression negotiation
2020-10-02T20:45:36.935+0000 D3 NETWORK  [conn3] snappy is supported
2020-10-02T20:45:36.935+0000 D3 NETWORK  [conn4] zlib is supported
2020-10-02T20:45:36.935+0000 D3 NETWORK  [conn4] snappy is supported
2020-10-02T20:45:36.935+0000 I  COMMAND  [conn4] command admin.$cmd appName: "mongosqld" command: isMaster { isMaster: 1, compression: [ "zlib", "snappy" ], client: { driver: { name: "mongo-go-driver", version: "v1.3.4" }, os: { type: "linux", architecture: "amd64" }, platform: "go1.13.10", application: { name: "mongosqld" } }, $readPreference: { mode: "secondaryPreferred" }, $db: "admin" } numYields:0 reslen:301 locks:{} protocol:op_query 0ms
2020-10-02T20:45:36.935+0000 I  COMMAND  [conn3] command admin.$cmd appName: "mongosqld" command: isMaster { isMaster: 1, compression: [ "zlib", "snappy" ], client: { driver: { name: "mongo-go-driver", version: "v1.3.4" }, os: { type: "linux", architecture: "amd64" }, platform: "go1.13.10", application: { name: "mongosqld" } }, $readPreference: { mode: "secondaryPreferred" }, $db: "admin" } numYields:0 reslen:301 locks:{} protocol:op_query 0ms
2020-10-02T20:45:36.987+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:36.990+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:45:36.990+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:45:37.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:45:37.087+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:37.187+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:37.287+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:37.387+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:37.488+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:37.588+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:37.688+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:37.788+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:37.889+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:37.989+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:37.990+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:45:37.990+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:45:38.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:45:38.089+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:38.189+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:38.289+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:38.389+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:38.490+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:38.590+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:38.671+0000 I  NETWORK  [listener] connection accepted from 172.16.19.208:54204 #5 (3 connections now open)
2020-10-02T20:45:38.671+0000 D3 EXECUTOR [listener] Starting new executor thread in passthrough mode
2020-10-02T20:45:38.672+0000 D2 COMMAND  [conn5] run command admin.$cmd { isMaster: 1, compression: [ "zlib", "snappy" ], client: { driver: { name: "mongo-go-driver", version: "v1.3.4" }, os: { type: "linux", architecture: "amd64" }, platform: "go1.13.10", application: { name: "mongosqld" } }, $readPreference: { mode: "secondaryPreferred" }, $db: "admin" }
2020-10-02T20:45:38.672+0000 I  NETWORK  [conn5] received client metadata from 172.16.19.208:54204 conn5: { driver: { name: "mongo-go-driver", version: "v1.3.4" }, os: { type: "linux", architecture: "amd64" }, platform: "go1.13.10", application: { name: "mongosqld" } }
2020-10-02T20:45:38.672+0000 D3 NETWORK  [conn5] Starting server-side compression negotiation
2020-10-02T20:45:38.672+0000 D3 NETWORK  [conn5] zlib is supported
2020-10-02T20:45:38.672+0000 D3 NETWORK  [conn5] snappy is supported
2020-10-02T20:45:38.672+0000 I  COMMAND  [conn5] command admin.$cmd appName: "mongosqld" command: isMaster { isMaster: 1, compression: [ "zlib", "snappy" ], client: { driver: { name: "mongo-go-driver", version: "v1.3.4" }, os: { type: "linux", architecture: "amd64" }, platform: "go1.13.10", application: { name: "mongosqld" } }, $readPreference: { mode: "secondaryPreferred" }, $db: "admin" } numYields:0 reslen:301 locks:{} protocol:op_query 0ms
2020-10-02T20:45:38.673+0000 I  NETWORK  [listener] connection accepted from 172.16.19.208:54206 #6 (4 connections now open)
2020-10-02T20:45:38.673+0000 D3 EXECUTOR [listener] Starting new executor thread in passthrough mode
2020-10-02T20:45:38.673+0000 D2 COMMAND  [conn6] run command admin.$cmd { isMaster: 1, compression: [ "zlib", "snappy" ], client: { driver: { name: "mongo-go-driver", version: "v1.3.4" }, os: { type: "linux", architecture: "amd64" }, platform: "go1.13.10", application: { name: "mongosqld" } }, $readPreference: { mode: "secondaryPreferred" }, $db: "admin" }
2020-10-02T20:45:38.673+0000 I  NETWORK  [conn6] received client metadata from 172.16.19.208:54206 conn6: { driver: { name: "mongo-go-driver", version: "v1.3.4" }, os: { type: "linux", architecture: "amd64" }, platform: "go1.13.10", application: { name: "mongosqld" } }
2020-10-02T20:45:38.673+0000 D3 NETWORK  [conn6] Starting server-side compression negotiation
2020-10-02T20:45:38.673+0000 D3 NETWORK  [conn6] zlib is supported
2020-10-02T20:45:38.673+0000 D3 NETWORK  [conn6] snappy is supported
2020-10-02T20:45:38.673+0000 I  COMMAND  [conn6] command admin.$cmd appName: "mongosqld" command: isMaster { isMaster: 1, compression: [ "zlib", "snappy" ], client: { driver: { name: "mongo-go-driver", version: "v1.3.4" }, os: { type: "linux", architecture: "amd64" }, platform: "go1.13.10", application: { name: "mongosqld" } }, $readPreference: { mode: "secondaryPreferred" }, $db: "admin" } numYields:0 reslen:301 locks:{} protocol:op_query 0ms
2020-10-02T20:45:38.690+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:38.790+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:38.831+0000 D2 COMMAND  [conn5] run command $external.$cmd { saslStart: 1, mechanism: "GSSAPI", payload: "xxx", $db: "$external" }
2020-10-02T20:45:38.839+0000 I  COMMAND  [conn5] command $external.$cmd appName: "mongosqld" command: saslStart { saslStart: 1, mechanism: "GSSAPI", payload: "xxx", $db: "$external" } numYields:0 reslen:235 locks:{} protocol:op_msg 8ms
2020-10-02T20:45:38.840+0000 D2 COMMAND  [conn5] run command $external.$cmd { saslContinue: 1, conversationId: 1, payload: "xxx", $db: "$external" }
2020-10-02T20:45:38.840+0000 I  COMMAND  [conn5] command $external.$cmd appName: "mongosqld" command: saslContinue { saslContinue: 1, conversationId: 1, payload: "xxx", $db: "$external" } numYields:0 reslen:111 locks:{} protocol:op_msg 0ms
2020-10-02T20:45:38.841+0000 D2 COMMAND  [conn5] run command $external.$cmd { saslContinue: 1, conversationId: 1, payload: "xxx", $db: "$external" }
2020-10-02T20:45:38.841+0000 D1 ACCESS   [conn5] Getting user asadoma@is1.morgan@$external from disk
2020-10-02T20:45:38.841+0000 I  SHARDING [conn5] Marking collection admin.system.users as collection version: <unsharded>
2020-10-02T20:45:38.841+0000 D2 QUERY    [conn5] Relevant index 0 is kp: { user: 1, db: 1 } unique name: '(user_1_db_1, )' io: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }
2020-10-02T20:45:38.841+0000 D2 QUERY    [conn5] Only one plan is available; it will be run but will not be cached. ns: admin.system.users query: { user: "asadoma@is1.morgan", db: "$external" } sort: {} projection: {}, planSummary: IXSCAN { user: 1, db: 1 }
2020-10-02T20:45:38.841+0000 D3 STORAGE  [conn5] WT begin_transaction for snapshot id 51
2020-10-02T20:45:38.842+0000 D3 STORAGE  [conn5] WT rollback_transaction for snapshot id 51
2020-10-02T20:45:38.842+0000 I  ACCESS   [conn5] Successfully authenticated as principal asadoma@is1.morgan on $external from client 172.16.19.208:54204
2020-10-02T20:45:38.843+0000 I  COMMAND  [conn5] command admin.system.users appName: "mongosqld" command: saslContinue { saslContinue: 1, conversationId: 1, payload: "xxx", $db: "$external" } numYields:0 queryHash:0A298B98 planCacheKey:C2D1BA7E reslen:79 locks:{ ReplicationStateTransition: { acquireCount: { w: 1 } }, Global: { acquireCount: { r: 1 } }, Database: { acquireCount: { r: 1 } }, Collection: { acquireCount: { r: 1 } }, Mutex: { acquireCount: { r: 1 } } } storage:{ data: { bytesRead: 2371, timeReadingMicros: 6 } } protocol:op_msg 1ms
2020-10-02T20:45:38.843+0000 D2 COMMAND  [conn6] run command $external.$cmd { saslStart: 1, mechanism: "GSSAPI", payload: "xxx", $db: "$external" }
2020-10-02T20:45:38.850+0000 I  COMMAND  [conn6] command $external.$cmd appName: "mongosqld" command: saslStart { saslStart: 1, mechanism: "GSSAPI", payload: "xxx", $db: "$external" } numYields:0 reslen:235 locks:{} protocol:op_msg 6ms
2020-10-02T20:45:38.851+0000 D2 COMMAND  [conn6] run command $external.$cmd { saslContinue: 1, conversationId: 1, payload: "xxx", $db: "$external" }
2020-10-02T20:45:38.851+0000 I  COMMAND  [conn6] command $external.$cmd appName: "mongosqld" command: saslContinue { saslContinue: 1, conversationId: 1, payload: "xxx", $db: "$external" } numYields:0 reslen:111 locks:{} protocol:op_msg 0ms
2020-10-02T20:45:38.851+0000 D2 COMMAND  [conn6] run command $external.$cmd { saslContinue: 1, conversationId: 1, payload: "xxx", $db: "$external" }
2020-10-02T20:45:38.852+0000 D1 ACCESS   [conn6] Returning user asadoma@is1.morgan@$external from cache
2020-10-02T20:45:38.852+0000 I  ACCESS   [conn6] Successfully authenticated as principal asadoma@is1.morgan on $external from client 172.16.19.208:54206
2020-10-02T20:45:38.852+0000 I  COMMAND  [conn6] command $external.$cmd appName: "mongosqld" command: saslContinue { saslContinue: 1, conversationId: 1, payload: "xxx", $db: "$external" } numYields:0 reslen:79 locks:{} protocol:op_msg 0ms
2020-10-02T20:45:38.853+0000 I  NETWORK  [listener] connection accepted from 172.16.19.208:54208 #7 (5 connections now open)
2020-10-02T20:45:38.853+0000 D3 EXECUTOR [listener] Starting new executor thread in passthrough mode
2020-10-02T20:45:38.853+0000 D2 COMMAND  [conn7] run command admin.$cmd { isMaster: 1, compression: [], client: { driver: { name: "mongo-go-driver", version: "v1.3.4" }, os: { type: "linux", architecture: "amd64" }, platform: "go1.13.10", application: { name: "mongosqld" } }, $readPreference: { mode: "secondaryPreferred" }, $db: "admin" }
2020-10-02T20:45:38.853+0000 I  NETWORK  [conn7] received client metadata from 172.16.19.208:54208 conn7: { driver: { name: "mongo-go-driver", version: "v1.3.4" }, os: { type: "linux", architecture: "amd64" }, platform: "go1.13.10", application: { name: "mongosqld" } }
2020-10-02T20:45:38.853+0000 D3 NETWORK  [conn7] Starting server-side compression negotiation
2020-10-02T20:45:38.853+0000 D3 NETWORK  [conn7] No compressors provided
2020-10-02T20:45:38.853+0000 I  COMMAND  [conn7] command admin.$cmd appName: "mongosqld" command: isMaster { isMaster: 1, compression: [], client: { driver: { name: "mongo-go-driver", version: "v1.3.4" }, os: { type: "linux", architecture: "amd64" }, platform: "go1.13.10", application: { name: "mongosqld" } }, $readPreference: { mode: "secondaryPreferred" }, $db: "admin" } numYields:0 reslen:257 locks:{} protocol:op_query 0ms
2020-10-02T20:45:38.890+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:38.926+0000 D2 COMMAND  [conn7] run command $external.$cmd { saslStart: 1, mechanism: "GSSAPI", payload: "xxx", $db: "$external" }
2020-10-02T20:45:38.934+0000 I  COMMAND  [conn7] command $external.$cmd appName: "mongosqld" command: saslStart { saslStart: 1, mechanism: "GSSAPI", payload: "xxx", $db: "$external" } numYields:0 reslen:235 locks:{} protocol:op_msg 7ms
2020-10-02T20:45:38.934+0000 D2 COMMAND  [conn7] run command $external.$cmd { saslContinue: 1, conversationId: 1, payload: "xxx", $db: "$external" }
2020-10-02T20:45:38.934+0000 I  COMMAND  [conn7] command $external.$cmd appName: "mongosqld" command: saslContinue { saslContinue: 1, conversationId: 1, payload: "xxx", $db: "$external" } numYields:0 reslen:111 locks:{} protocol:op_msg 0ms
2020-10-02T20:45:38.935+0000 D2 COMMAND  [conn7] run command $external.$cmd { saslContinue: 1, conversationId: 1, payload: "xxx", $db: "$external" }
2020-10-02T20:45:38.935+0000 D1 ACCESS   [conn7] Getting user bimongosqld@is1.morgan@$external from disk
2020-10-02T20:45:38.935+0000 D2 QUERY    [conn7] Relevant index 0 is kp: { user: 1, db: 1 } unique name: '(user_1_db_1, )' io: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }
2020-10-02T20:45:38.935+0000 D2 QUERY    [conn7] Only one plan is available; it will be run but will not be cached. ns: admin.system.users query: { user: "bimongosqld@is1.morgan", db: "$external" } sort: {} projection: {}, planSummary: IXSCAN { user: 1, db: 1 }
2020-10-02T20:45:38.935+0000 D3 STORAGE  [conn7] WT begin_transaction for snapshot id 60
2020-10-02T20:45:38.935+0000 D3 STORAGE  [conn7] WT rollback_transaction for snapshot id 60
2020-10-02T20:45:38.935+0000 I  ACCESS   [conn7] Successfully authenticated as principal bimongosqld@is1.morgan on $external from client 172.16.19.208:54208
2020-10-02T20:45:38.936+0000 I  COMMAND  [conn7] command admin.system.users appName: "mongosqld" command: saslContinue { saslContinue: 1, conversationId: 1, payload: "xxx", $db: "$external" } numYields:0 queryHash:0A298B98 planCacheKey:C2D1BA7E reslen:79 locks:{ ReplicationStateTransition: { acquireCount: { w: 1 } }, Global: { acquireCount: { r: 1 } }, Database: { acquireCount: { r: 1 } }, Collection: { acquireCount: { r: 1 } }, Mutex: { acquireCount: { r: 1 } } } storage:{} protocol:op_msg 0ms
2020-10-02T20:45:38.936+0000 D2 COMMAND  [conn7] run command admin.$cmd { ping: 1, $db: "admin" }
2020-10-02T20:45:38.936+0000 I  COMMAND  [conn7] command admin.$cmd appName: "mongosqld" command: ping { ping: 1, $db: "admin" } numYields:0 reslen:38 locks:{} protocol:op_msg 0ms
2020-10-02T20:45:38.938+0000 D3 NETWORK  [conn6] Decompressing message with zlib
2020-10-02T20:45:38.938+0000 D2 COMMAND  [conn6] run command admin.$cmd { buildInfo: 1, $db: "admin" }
2020-10-02T20:45:38.938+0000 I  COMMAND  [conn6] command admin.$cmd appName: "mongosqld" command: buildInfo { buildInfo: 1, $db: "admin" } numYields:0 reslen:1427 locks:{} protocol:op_msg 0ms
2020-10-02T20:45:38.938+0000 D3 NETWORK  [conn6] Compressing message with zlib
2020-10-02T20:45:38.938+0000 D3 NETWORK  [conn5] Decompressing message with zlib
2020-10-02T20:45:38.938+0000 D2 COMMAND  [conn5] run command admin.$cmd { connectionStatus: 1, showPrivileges: 1, $db: "admin" }
2020-10-02T20:45:38.939+0000 I  COMMAND  [conn5] command admin.$cmd appName: "mongosqld" command: connectionStatus { connectionStatus: 1, showPrivileges: 1, $db: "admin" } numYields:0 reslen:701 locks:{} protocol:op_msg 0ms
2020-10-02T20:45:38.939+0000 D3 NETWORK  [conn5] Compressing message with zlib
2020-10-02T20:45:38.939+0000 D2 COMMAND  [conn7] run command movies.$cmd { listCollections: 1, $db: "movies" }
2020-10-02T20:45:38.939+0000 D3 STORAGE  [conn7] looking up metadata for: movies.movies @ RecordId(7)
2020-10-02T20:45:38.939+0000 D3 STORAGE  [conn7] WT begin_transaction for snapshot id 65
2020-10-02T20:45:38.939+0000 D3 STORAGE  [conn7]  fetched CCE metadata: { md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "movies/index/1-5928759223889663863" }, ns: "movies.movies", ident: "movies/collection/0-5928759223889663863" }
2020-10-02T20:45:38.939+0000 D3 STORAGE  [conn7] returning metadata: md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:38.939+0000 D3 STORAGE  [conn7] WT rollback_transaction for snapshot id 65
2020-10-02T20:45:38.939+0000 I  COMMAND  [conn7] command movies.$cmd appName: "mongosqld" command: listCollections { listCollections: 1, $db: "movies" } numYields:0 reslen:302 locks:{ ParallelBatchWriterMode: { acquireCount: { r: 1 } }, ReplicationStateTransition: { acquireCount: { w: 1 } }, Global: { acquireCount: { r: 1 } }, Database: { acquireCount: { r: 1 } }, Collection: { acquireCount: { r: 2 } }, Mutex: { acquireCount: { r: 1 } } } storage:{} protocol:op_msg 0ms
2020-10-02T20:45:38.940+0000 D2 COMMAND  [conn7] run command movies.$cmd { listIndexes: "movies", cursor: {}, $db: "movies" }
2020-10-02T20:45:38.940+0000 I  SHARDING [conn7] Marking collection movies.movies as collection version: <unsharded>
2020-10-02T20:45:38.940+0000 D3 STORAGE  [conn7] looking up metadata for: movies.movies @ RecordId(7)
2020-10-02T20:45:38.940+0000 D3 STORAGE  [conn7] WT begin_transaction for snapshot id 67
2020-10-02T20:45:38.940+0000 D3 STORAGE  [conn7]  fetched CCE metadata: { md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "movies/index/1-5928759223889663863" }, ns: "movies.movies", ident: "movies/collection/0-5928759223889663863" }
2020-10-02T20:45:38.940+0000 D3 STORAGE  [conn7] returning metadata: md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:38.940+0000 D3 STORAGE  [conn7] looking up metadata for: movies.movies @ RecordId(7)
2020-10-02T20:45:38.940+0000 D3 STORAGE  [conn7]  fetched CCE metadata: { md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "movies/index/1-5928759223889663863" }, ns: "movies.movies", ident: "movies/collection/0-5928759223889663863" }
2020-10-02T20:45:38.940+0000 D3 STORAGE  [conn7] returning metadata: md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:45:38.940+0000 D3 STORAGE  [conn7] WT rollback_transaction for snapshot id 67
2020-10-02T20:45:38.940+0000 I  COMMAND  [conn7] command movies.movies appName: "mongosqld" command: listIndexes { listIndexes: "movies", cursor: {}, $db: "movies" } numYields:0 reslen:173 locks:{ ReplicationStateTransition: { acquireCount: { w: 1 } }, Global: { acquireCount: { r: 1 } }, Database: { acquireCount: { r: 1 } }, Collection: { acquireCount: { r: 1 } }, Mutex: { acquireCount: { r: 1 } } } storage:{} protocol:op_msg 0ms
2020-10-02T20:45:38.990+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:45:38.990+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:45:38.990+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:39.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:45:39.090+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:39.191+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:39.291+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:39.391+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:39.491+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:39.591+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:39.691+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:39.791+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:39.892+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:39.990+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:45:39.990+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:45:39.992+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:40.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:45:40.092+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:40.192+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:40.292+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:40.392+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:40.493+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:40.593+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:40.693+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:40.793+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:40.893+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:40.990+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:45:40.990+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:45:40.993+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:41.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:45:41.094+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:41.194+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:41.294+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:41.394+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:41.494+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:41.595+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:41.695+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:41.795+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:41.895+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:41.990+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:45:41.990+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:45:41.995+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:42.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:45:42.095+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:42.196+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:42.296+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:42.396+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:42.496+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:42.596+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:42.697+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:42.797+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:42.897+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:42.990+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:45:42.990+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:45:42.997+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:43.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:45:43.097+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:43.197+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:43.297+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:43.398+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:43.498+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:43.598+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:43.698+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:43.798+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:43.899+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:43.990+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:45:43.990+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:45:43.999+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:44.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:45:44.099+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:44.199+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:44.299+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:44.399+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:44.499+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:44.600+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:44.700+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:44.800+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:44.900+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:44.990+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:45:44.990+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:45:45.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:45:45.001+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:45.101+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:45.201+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:45.301+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:45.402+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:45.502+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:45.602+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:45.702+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:45.802+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:45.903+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:45.990+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:45:45.990+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:45:46.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:45:46.003+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:46.103+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:46.203+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:46.303+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:46.404+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:46.504+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:46.604+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:46.704+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:46.804+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:46.905+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:46.934+0000 D2 COMMAND  [conn3] run command admin.$cmd { isMaster: 1, $db: "admin" }
2020-10-02T20:45:46.934+0000 D2 COMMAND  [conn4] run command admin.$cmd { isMaster: 1, $db: "admin" }
2020-10-02T20:45:46.934+0000 D3 NETWORK  [conn4] Starting server-side compression negotiation
2020-10-02T20:45:46.934+0000 D3 NETWORK  [conn3] Starting server-side compression negotiation
2020-10-02T20:45:46.934+0000 I  COMMAND  [conn4] command admin.$cmd appName: "mongosqld" command: isMaster { isMaster: 1, $db: "admin" } numYields:0 reslen:286 locks:{} protocol:op_msg 0ms
2020-10-02T20:45:46.934+0000 I  COMMAND  [conn3] command admin.$cmd appName: "mongosqld" command: isMaster { isMaster: 1, $db: "admin" } numYields:0 reslen:286 locks:{} protocol:op_msg 0ms
2020-10-02T20:45:46.990+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:45:46.990+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:45:47.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:45:47.005+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:47.105+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:47.205+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:47.305+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:47.405+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:47.505+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:47.605+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:47.706+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:47.806+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:47.906+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:47.990+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:45:47.990+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:45:48.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:45:48.006+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:48.106+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:48.206+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:48.307+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:48.407+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:48.507+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:48.607+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:48.707+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:48.807+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:48.908+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:48.990+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:45:48.990+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:45:49.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:45:49.008+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:49.108+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:49.208+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:49.308+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:49.408+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:49.508+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:49.609+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:49.709+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:49.809+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:49.909+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:49.990+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:45:49.990+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:45:50.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:45:50.009+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:50.109+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:50.210+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:50.310+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:50.410+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:50.510+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:50.610+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:50.711+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:50.811+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:50.911+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:50.990+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:45:50.990+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:45:51.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:45:51.011+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:51.111+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:51.211+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:51.312+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:51.412+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:51.512+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:51.612+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:51.712+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:51.813+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:51.913+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:51.990+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:45:51.990+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:45:52.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:45:52.013+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:52.113+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:52.213+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:52.314+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:52.414+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:52.514+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:52.614+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:52.714+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:52.814+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:52.915+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:52.990+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:45:52.990+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:45:53.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:45:53.015+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:53.115+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:53.215+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:53.315+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:53.416+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:53.516+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:53.616+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:53.716+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:53.816+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:53.916+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:53.990+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:45:53.990+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:45:54.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:45:54.017+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:54.117+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:54.217+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:54.317+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:54.417+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:54.517+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:54.617+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:54.718+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:54.818+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:54.918+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:54.990+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:45:54.990+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:45:55.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:45:55.018+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:55.118+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:55.218+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:55.319+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:55.419+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:55.519+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:55.619+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:55.719+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:55.820+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:55.920+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:55.990+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:45:55.990+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:45:56.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:45:56.020+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:56.120+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:56.220+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:56.320+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:56.421+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:56.521+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:56.621+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:56.721+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:56.821+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:56.922+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:56.934+0000 D2 COMMAND  [conn3] run command admin.$cmd { isMaster: 1, $db: "admin" }
2020-10-02T20:45:56.934+0000 D2 COMMAND  [conn4] run command admin.$cmd { isMaster: 1, $db: "admin" }
2020-10-02T20:45:56.934+0000 D3 NETWORK  [conn3] Starting server-side compression negotiation
2020-10-02T20:45:56.934+0000 D3 NETWORK  [conn4] Starting server-side compression negotiation
2020-10-02T20:45:56.934+0000 I  COMMAND  [conn3] command admin.$cmd appName: "mongosqld" command: isMaster { isMaster: 1, $db: "admin" } numYields:0 reslen:286 locks:{} protocol:op_msg 0ms
2020-10-02T20:45:56.934+0000 I  COMMAND  [conn4] command admin.$cmd appName: "mongosqld" command: isMaster { isMaster: 1, $db: "admin" } numYields:0 reslen:286 locks:{} protocol:op_msg 0ms
2020-10-02T20:45:56.990+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:45:56.990+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:45:57.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:45:57.022+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:57.122+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:57.222+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:57.322+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:57.422+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:57.523+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:57.623+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:57.723+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:57.823+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:57.885+0000 D2 WRITE    [abortExpiredTransactions] Beginning scanSessions. Scanning 0 sessions.
2020-10-02T20:45:57.923+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:57.990+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:45:57.990+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:45:58.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:45:58.023+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:58.123+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:58.224+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:58.324+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:58.424+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:58.524+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:58.624+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:58.725+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:58.825+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:58.925+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:58.990+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:45:58.990+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:45:59.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:45:59.025+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:59.126+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:59.226+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:59.326+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:59.426+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:59.526+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:59.626+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:59.727+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:59.827+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:59.927+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:45:59.990+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:45:59.990+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:46:00.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:46:00.027+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:46:00.128+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:46:00.228+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:46:00.328+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:46:00.428+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:46:00.528+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:46:00.629+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:46:00.729+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:46:00.829+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:46:00.844+0000 D3 NETWORK  [conn6] Decompressing message with zlib
2020-10-02T20:46:00.844+0000 D2 COMMAND  [conn6] run command movies.$cmd { aggregate: "movies", allowDiskUse: true, pipeline: [ { $project: { movies_DOT_movies_DOT__id: "$_id", movies_DOT_movies_DOT_name: "$name", _id: 0 } } ], cursor: {}, $db: "movies" }
2020-10-02T20:46:00.844+0000 D2 QUERY    [conn6] Only one plan is available; it will be run but will not be cached. ns: movies.movies query: {} sort: {} projection: {}, planSummary: COLLSCAN
2020-10-02T20:46:00.844+0000 D3 STORAGE  [conn6] WT begin_transaction for snapshot id 127
2020-10-02T20:46:00.845+0000 D3 STORAGE  [conn6] WT rollback_transaction for snapshot id 127
2020-10-02T20:46:00.845+0000 I  COMMAND  [conn6] command movies.movies appName: "mongosqld" command: aggregate { aggregate: "movies", allowDiskUse: true, pipeline: [ { $project: { movies_DOT_movies_DOT__id: "$_id", movies_DOT_movies_DOT_name: "$name", _id: 0 } } ], cursor: {}, $db: "movies" } planSummary: COLLSCAN keysExamined:0 docsExamined:3 cursorExhausted:1 numYields:0 nreturned:3 reslen:371 locks:{ ReplicationStateTransition: { acquireCount: { w: 2 } }, Global: { acquireCount: { r: 2 } }, Database: { acquireCount: { r: 2 } }, Collection: { acquireCount: { r: 2 } }, Mutex: { acquireCount: { r: 2 } } } storage:{ data: { bytesRead: 228, timeReadingMicros: 2 } } protocol:op_msg 0ms
2020-10-02T20:46:00.845+0000 D3 NETWORK  [conn6] Compressing message with zlib
2020-10-02T20:46:00.846+0000 D2 NETWORK  [conn6] Session from 172.16.19.208:54206 encountered a network error during SourceMessage: HostUnreachable: Connection closed by peer
2020-10-02T20:46:00.846+0000 D2 NETWORK  [conn5] Session from 172.16.19.208:54204 encountered a network error during SourceMessage: HostUnreachable: Connection closed by peer
2020-10-02T20:46:00.846+0000 I  NETWORK  [conn6] end connection 172.16.19.208:54206 (4 connections now open)
2020-10-02T20:46:00.846+0000 I  NETWORK  [conn5] end connection 172.16.19.208:54204 (3 connections now open)
2020-10-02T20:46:00.846+0000 D3 NETWORK  [conn6] Cancelling outstanding I/O operations on connection to 172.16.19.208:54206
2020-10-02T20:46:00.846+0000 D3 NETWORK  [conn5] Cancelling outstanding I/O operations on connection to 172.16.19.208:54204
2020-10-02T20:46:00.929+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:46:00.990+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:46:00.990+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:46:01.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:46:01.029+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:46:01.129+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:46:01.229+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:46:01.330+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:46:01.430+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:46:01.530+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:46:01.630+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:46:01.730+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:46:01.830+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:46:01.931+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:46:01.990+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:46:01.990+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:46:02.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:46:02.031+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:46:02.131+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:46:02.231+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:46:02.331+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:46:02.431+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:46:02.532+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:46:02.632+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:46:02.732+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:46:02.832+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:46:02.932+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:46:02.990+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:46:02.990+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:46:03.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:46:03.033+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:46:03.133+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:46:03.233+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:46:03.333+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:46:03.434+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:46:03.534+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:46:03.634+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:46:03.734+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:46:03.834+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:46:03.934+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:46:03.990+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:46:03.990+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:46:04.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:46:04.034+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:46:04.135+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:46:04.235+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:46:04.335+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:46:04.435+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:46:04.535+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:46:04.635+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:46:04.736+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:46:04.836+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:46:04.936+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:46:04.990+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:46:04.990+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:46:05.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:46:05.036+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:46:05.136+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:46:05.236+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:46:05.337+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:46:05.437+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:46:05.537+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:46:05.637+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:46:05.737+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:46:05.837+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:46:05.937+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:46:05.990+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:46:05.990+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:46:06.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:46:06.038+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:46:06.138+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:46:06.238+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:46:06.338+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:46:06.438+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:46:06.538+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:46:06.554+0000 I  CONTROL  [signalProcessingThread] got signal 2 (Interrupt), will terminate after current cmd ends
2020-10-02T20:46:06.554+0000 D1 -        [signalProcessingThread] User Assertion: NotMaster: not primary so can't step down src/mongo/db/repl/replication_coordinator_impl.cpp 2062
2020-10-02T20:46:06.554+0000 D1 QUERY    [signalProcessingThread] received interrupt request for unknown op: 2  known ops: 
2020-10-02T20:46:06.554+0000 D1 -        [waitForMajority] User Assertion: InterruptedAtShutdown: operation was interrupted src/mongo/util/interruptible.h 333
2020-10-02T20:46:06.554+0000 D1 SHARDING [waitForMajority] Unable to wait for new op time due to: InterruptedAtShutdown: operation was interrupted
2020-10-02T20:46:06.554+0000 D2 -        [signalProcessingThread] Stopping periodic job LogicalSessionCacheRefresh
2020-10-02T20:46:06.554+0000 D2 -        [signalProcessingThread] Stopping periodic job LogicalSessionCacheReap
2020-10-02T20:46:06.554+0000 I  NETWORK  [signalProcessingThread] shutdown: going to close listening sockets...
2020-10-02T20:46:06.554+0000 I  NETWORK  [listener] removing socket file: /tmp/mongodb-27000.sock
2020-10-02T20:46:06.554+0000 I  -        [signalProcessingThread] Stopping further Flow Control ticket acquisitions.
2020-10-02T20:46:06.554+0000 D2 -        [signalProcessingThread] Stopping periodic job abortExpiredTransactions
2020-10-02T20:46:06.555+0000 D2 -        [signalProcessingThread] Stopping periodic job startPeriodicThreadToDecreaseSnapshotHistoryCachePressure
2020-10-02T20:46:06.555+0000 D1 QUERY    [signalProcessingThread] received interrupt request for unknown op: 130  known ops: 
2020-10-02T20:46:06.555+0000 D2 WRITE    [signalProcessingThread] Beginning scanSessions. Scanning 0 sessions.
2020-10-02T20:46:06.555+0000 I  FTDC     [signalProcessingThread] Shutting down full-time diagnostic data capture
2020-10-02T20:46:06.557+0000 I  STORAGE  [signalProcessingThread] Deregistering all the collections
2020-10-02T20:46:06.557+0000 D1 STORAGE  [signalProcessingThread] Deregistering collection local.startup_log with UUID 97fc5f31-0917-4d2e-a65c-606750d317e5
2020-10-02T20:46:06.557+0000 D1 STORAGE  [signalProcessingThread] ~WiredTigerRecordStore for: local.startup_log
2020-10-02T20:46:06.557+0000 D1 STORAGE  [signalProcessingThread] Deregistering collection config.system.sessions with UUID fbf72919-58ff-41f2-ba34-93b2acda7d24
2020-10-02T20:46:06.557+0000 D1 STORAGE  [signalProcessingThread] ~WiredTigerRecordStore for: config.system.sessions
2020-10-02T20:46:06.557+0000 D1 STORAGE  [signalProcessingThread] Deregistering collection test.inventory with UUID 66dd6c2e-e14a-4284-a2a5-a7574ac1fd74
2020-10-02T20:46:06.557+0000 D1 STORAGE  [signalProcessingThread] ~WiredTigerRecordStore for: test.inventory
2020-10-02T20:46:06.557+0000 D1 STORAGE  [signalProcessingThread] Deregistering collection admin.system.version with UUID 0d876cab-c7c4-40a4-90c6-c23dd6e3b179
2020-10-02T20:46:06.557+0000 D1 STORAGE  [signalProcessingThread] ~WiredTigerRecordStore for: admin.system.version
2020-10-02T20:46:06.557+0000 D1 STORAGE  [signalProcessingThread] Deregistering collection admin.system.users with UUID afe8728a-bcfa-4477-b0ae-3a6884f97746
2020-10-02T20:46:06.557+0000 D1 STORAGE  [signalProcessingThread] ~WiredTigerRecordStore for: admin.system.users
2020-10-02T20:46:06.557+0000 D1 STORAGE  [signalProcessingThread] Deregistering collection movies.movies with UUID 77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a
2020-10-02T20:46:06.557+0000 D1 STORAGE  [signalProcessingThread] ~WiredTigerRecordStore for: movies.movies
2020-10-02T20:46:06.557+0000 D1 STORAGE  [signalProcessingThread] ~WiredTigerRecordStore for: _mdb_catalog
2020-10-02T20:46:06.557+0000 I  STORAGE  [signalProcessingThread] Timestamp monitor shutting down
2020-10-02T20:46:06.557+0000 D2 -        [signalProcessingThread] Stopping periodic job TimestampMonitor
2020-10-02T20:46:06.557+0000 I  STORAGE  [signalProcessingThread] WiredTigerKVEngine shutting down
2020-10-02T20:46:06.557+0000 D2 STORAGE  [signalProcessingThread] WiredTigerSizeStorer::flush table:local/collection/2--2310914167168443545 -> { numRecords: 78, dataSize: 162280 }
2020-10-02T20:46:06.558+0000 D2 STORAGE  [signalProcessingThread] WiredTigerSizeStorer flush took 822 µs
2020-10-02T20:46:06.558+0000 I  STORAGE  [signalProcessingThread] Shutting down session sweeper thread
2020-10-02T20:46:06.558+0000 D1 STORAGE  [WTIdleSessionSweeper] stopping WTIdleSessionSweeper thread
2020-10-02T20:46:06.558+0000 I  STORAGE  [signalProcessingThread] Finished shutting down session sweeper thread
2020-10-02T20:46:06.558+0000 I  STORAGE  [signalProcessingThread] Shutting down journal flusher thread
2020-10-02T20:46:06.639+0000 D1 STORAGE  [WTJournalFlusher] stopping WTJournalFlusher thread
2020-10-02T20:46:06.639+0000 I  STORAGE  [signalProcessingThread] Finished shutting down journal flusher thread
2020-10-02T20:46:06.639+0000 I  STORAGE  [signalProcessingThread] Shutting down checkpoint thread
2020-10-02T20:46:06.639+0000 D1 STORAGE  [WTCheckpointThread] stopping WTCheckpointThread thread
2020-10-02T20:46:06.639+0000 I  STORAGE  [signalProcessingThread] Finished shutting down checkpoint thread
2020-10-02T20:46:06.639+0000 D2 RECOVERY [signalProcessingThread] Shutdown timestamps. StableTimestamp: 0 Initial data timestamp: 0
2020-10-02T20:46:06.652+0000 I  STORAGE  [signalProcessingThread] shutdown: removing fs lock...
2020-10-02T20:46:06.652+0000 I  CONTROL  [signalProcessingThread] now exiting
2020-10-02T20:46:06.652+0000 I  CONTROL  [signalProcessingThread] shutting down with code:0
