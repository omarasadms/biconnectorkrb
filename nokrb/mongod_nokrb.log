2020-10-02T20:07:05.955+0000 I  CONTROL  [main] ***** SERVER RESTARTED *****
2020-10-02T20:07:05.960+0000 I  CONTROL  [main] Automatically disabling TLS 1.0, to force-enable TLS 1.0 specify --sslDisabledProtocols 'none'
2020-10-02T20:07:05.960+0000 W  ASIO     [main] No TransportLayer configured during NetworkInterface startup
2020-10-02T20:07:05.960+0000 D2 CONNPOOL [main] Controller for NetworkInterfaceTL-MongotExecutor is LimitController
2020-10-02T20:07:05.961+0000 D2 CONNPOOL [main] Controller for LDAP is LimitController
2020-10-02T20:07:05.962+0000 W  ASIO     [main] No TransportLayer configured during NetworkInterface startup
2020-10-02T20:07:05.962+0000 D2 CONNPOOL [main] Controller for NetworkInterfaceTL-Replication is LimitController
2020-10-02T20:07:05.962+0000 D1 NETWORK  [main] fd limit hard:4096 soft:1024 max conn: 819
2020-10-02T20:07:05.963+0000 I  CONTROL  [initandlisten] MongoDB starting : pid=23211 port=27000 dbpath=/home/bimongod/data/ 64-bit host=ip-172-16-42-253.lab.morganstanley.com
2020-10-02T20:07:05.963+0000 I  CONTROL  [initandlisten] db version v4.2.7
2020-10-02T20:07:05.963+0000 I  CONTROL  [initandlisten] git version: 51d9fe12b5d19720e72dcd7db0f2f17dd9a19212
2020-10-02T20:07:05.963+0000 I  CONTROL  [initandlisten] OpenSSL version: OpenSSL 1.0.1e-fips 11 Feb 2013
2020-10-02T20:07:05.963+0000 I  CONTROL  [initandlisten] allocator: tcmalloc
2020-10-02T20:07:05.963+0000 I  CONTROL  [initandlisten] modules: enterprise 
2020-10-02T20:07:05.963+0000 I  CONTROL  [initandlisten] build environment:
2020-10-02T20:07:05.963+0000 I  CONTROL  [initandlisten]     distmod: rhel70
2020-10-02T20:07:05.963+0000 I  CONTROL  [initandlisten]     distarch: x86_64
2020-10-02T20:07:05.963+0000 I  CONTROL  [initandlisten]     target_arch: x86_64
2020-10-02T20:07:05.963+0000 I  CONTROL  [initandlisten] options: { config: "mongod_nokrb.conf", net: { bindIp: "0.0.0.0", port: 27000 }, processManagement: { pidFilePath: "/home/bimongod/mongod.pid" }, storage: { dbPath: "/home/bimongod/data/", directoryPerDB: true, engine: "wiredTiger", wiredTiger: { engineConfig: { directoryForIndexes: true } } }, systemLog: { destination: "file", logAppend: true, path: "/home/bimongod/log/mongod_nokrb.log", verbosity: 4 } }
2020-10-02T20:07:05.963+0000 D1 NETWORK  [initandlisten] fd limit hard:4096 soft:1024 max conn: 819
2020-10-02T20:07:05.963+0000 D2 -        [initandlisten] Starting periodic job FlowControlRefresher
2020-10-02T20:07:05.963+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:07:05.964+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:07:05.964+0000 I  STORAGE  [initandlisten] wiredtiger_open config: create,cache_size=1352M,cache_overflow=(file_max=0M),session_max=33000,eviction=(threads_min=4,threads_max=4),config_base=false,statistics=(fast),log=(enabled=true,archive=true,path=journal,compressor=snappy),file_manager=(close_idle_time=100000,close_scan_interval=10,close_handle_minimum=250),statistics_log=(wait=0),verbose=[recovery_progress,checkpoint_progress,recovery],
2020-10-02T20:07:06.586+0000 I  STORAGE  [initandlisten] WiredTiger message [1601669226:586801][23211:0x7f5ba2473c80], txn-recover: Recovering file:WiredTiger.wt with id 0 @ (74, 6784)
2020-10-02T20:07:06.586+0000 I  STORAGE  [initandlisten] WiredTiger message [1601669226:586859][23211:0x7f5ba2473c80], txn-recover: Recovering log 74 through 75
2020-10-02T20:07:06.635+0000 I  STORAGE  [initandlisten] WiredTiger message [1601669226:635611][23211:0x7f5ba2473c80], txn-recover: Recovering log 75 through 75
2020-10-02T20:07:06.715+0000 I  STORAGE  [initandlisten] WiredTiger message [1601669226:715942][23211:0x7f5ba2473c80], txn-recover: Recovering file:WiredTigerLAS.wt with id 90 @ (1, 0)
2020-10-02T20:07:06.716+0000 I  STORAGE  [initandlisten] WiredTiger message [1601669226:716002][23211:0x7f5ba2473c80], txn-recover: Recovering file:_mdb_catalog.wt with id 3 @ (18, 12032)
2020-10-02T20:07:06.716+0000 I  STORAGE  [initandlisten] WiredTiger message [1601669226:716017][23211:0x7f5ba2473c80], txn-recover: Recovering file:admin/collection/0--2310914167168443545.wt with id 4 @ (7, 4864)
2020-10-02T20:07:06.716+0000 I  STORAGE  [initandlisten] WiredTiger message [1601669226:716042][23211:0x7f5ba2473c80], txn-recover: Recovering file:admin/collection/0--732801831392209623.wt with id 17 @ (61, 5248)
2020-10-02T20:07:06.716+0000 I  STORAGE  [initandlisten] WiredTiger message [1601669226:716056][23211:0x7f5ba2473c80], txn-recover: Recovering file:admin/index/1--2310914167168443545.wt with id 5 @ (7, 4864)
2020-10-02T20:07:06.716+0000 I  STORAGE  [initandlisten] WiredTiger message [1601669226:716069][23211:0x7f5ba2473c80], txn-recover: Recovering file:admin/index/1--732801831392209623.wt with id 18 @ (52, 6912)
2020-10-02T20:07:06.716+0000 I  STORAGE  [initandlisten] WiredTiger message [1601669226:716082][23211:0x7f5ba2473c80], txn-recover: Recovering file:admin/index/2--732801831392209623.wt with id 19 @ (52, 6912)
2020-10-02T20:07:06.716+0000 I  STORAGE  [initandlisten] WiredTiger message [1601669226:716094][23211:0x7f5ba2473c80], txn-recover: Recovering file:config/collection/4--2310914167168443545.wt with id 8 @ (64, 6784)
2020-10-02T20:07:06.716+0000 I  STORAGE  [initandlisten] WiredTiger message [1601669226:716107][23211:0x7f5ba2473c80], txn-recover: Recovering file:config/index/5--2310914167168443545.wt with id 9 @ (66, 6784)
2020-10-02T20:07:06.716+0000 I  STORAGE  [initandlisten] WiredTiger message [1601669226:716120][23211:0x7f5ba2473c80], txn-recover: Recovering file:config/index/6--2310914167168443545.wt with id 10 @ (74, 4992)
2020-10-02T20:07:06.716+0000 I  STORAGE  [initandlisten] WiredTiger message [1601669226:716133][23211:0x7f5ba2473c80], txn-recover: Recovering file:local/collection/2--2310914167168443545.wt with id 6 @ (74, 3456)
2020-10-02T20:07:06.716+0000 I  STORAGE  [initandlisten] WiredTiger message [1601669226:716146][23211:0x7f5ba2473c80], txn-recover: Recovering file:local/index/3--2310914167168443545.wt with id 7 @ (74, 3456)
2020-10-02T20:07:06.716+0000 I  STORAGE  [initandlisten] WiredTiger message [1601669226:716159][23211:0x7f5ba2473c80], txn-recover: Recovering file:movies/collection/0-5928759223889663863.wt with id 33 @ (18, 12032)
2020-10-02T20:07:06.716+0000 I  STORAGE  [initandlisten] WiredTiger message [1601669226:716171][23211:0x7f5ba2473c80], txn-recover: Recovering file:movies/index/1-5928759223889663863.wt with id 34 @ (18, 12032)
2020-10-02T20:07:06.716+0000 I  STORAGE  [initandlisten] WiredTiger message [1601669226:716184][23211:0x7f5ba2473c80], txn-recover: Recovering file:sizeStorer.wt with id 2 @ (74, 4992)
2020-10-02T20:07:06.716+0000 I  STORAGE  [initandlisten] WiredTiger message [1601669226:716196][23211:0x7f5ba2473c80], txn-recover: Recovering file:test/collection/0-3817864913425832323.wt with id 21 @ (8, 8448)
2020-10-02T20:07:06.716+0000 I  STORAGE  [initandlisten] WiredTiger message [1601669226:716209][23211:0x7f5ba2473c80], txn-recover: Recovering file:test/index/1-3817864913425832323.wt with id 22 @ (8, 8448)
2020-10-02T20:07:06.716+0000 I  STORAGE  [initandlisten] WiredTiger message [1601669226:716216][23211:0x7f5ba2473c80], txn-recover: Main recovery loop: starting at 74/6912 to 75/256
2020-10-02T20:07:06.807+0000 I  STORAGE  [initandlisten] WiredTiger message [1601669226:807431][23211:0x7f5ba2473c80], txn-recover: Recovering log 74 through 75
2020-10-02T20:07:06.866+0000 I  STORAGE  [initandlisten] WiredTiger message [1601669226:866340][23211:0x7f5ba2473c80], txn-recover: Recovering log 75 through 75
2020-10-02T20:07:06.919+0000 I  STORAGE  [initandlisten] WiredTiger message [1601669226:919595][23211:0x7f5ba2473c80], txn-recover: Set global recovery timestamp: (0, 0)
2020-10-02T20:07:06.930+0000 I  RECOVERY [initandlisten] WiredTiger recoveryTimestamp. Ts: Timestamp(0, 0)
2020-10-02T20:07:06.930+0000 D1 COMMAND  [WTIdleSessionSweeper] BackgroundJob starting: WTIdleSessionSweeper
2020-10-02T20:07:06.930+0000 D1 STORAGE  [WTIdleSessionSweeper] starting WTIdleSessionSweeper thread
2020-10-02T20:07:06.931+0000 D1 COMMAND  [WTJournalFlusher] BackgroundJob starting: WTJournalFlusher
2020-10-02T20:07:06.931+0000 D1 STORAGE  [WTJournalFlusher] starting WTJournalFlusher thread
2020-10-02T20:07:06.931+0000 D1 COMMAND  [WTCheckpointThread] BackgroundJob starting: WTCheckpointThread
2020-10-02T20:07:06.931+0000 D1 STORAGE  [WTCheckpointThread] starting WTCheckpointThread thread
2020-10-02T20:07:06.931+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:06.932+0000 D3 STORAGE  [initandlisten] WT begin_transaction for snapshot id 1
2020-10-02T20:07:06.932+0000 D2 STORAGE  [initandlisten] WiredTigerUtil::checkApplicationMetadataFormatVersion  uri: table:_mdb_catalog ok range 1 -> 1 current: 1
2020-10-02T20:07:06.932+0000 D2 STORAGE  [initandlisten] WiredTigerSizeStorer::load table:_mdb_catalog -> { numRecords: 7, dataSize: 3611 }
2020-10-02T20:07:06.932+0000 D2 RECOVERY [initandlisten] loadCatalog:
2020-10-02T20:07:06.933+0000 D2 RECOVERY [initandlisten] 	Id: RecordId(1) Value: { md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--2310914167168443545" }, ns: "admin.system.version", ident: "admin/collection/0--2310914167168443545" }
2020-10-02T20:07:06.933+0000 D2 RECOVERY [initandlisten] 	Id: RecordId(2) Value: { isFeatureDoc: true, ns: null, nonRepairable: 0, repairable: 1 }
2020-10-02T20:07:06.933+0000 D2 RECOVERY [initandlisten] 	Id: RecordId(3) Value: { md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "local/index/3--2310914167168443545" }, ns: "local.startup_log", ident: "local/collection/2--2310914167168443545" }
2020-10-02T20:07:06.933+0000 D2 RECOVERY [initandlisten] 	Id: RecordId(4) Value: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:07:06.933+0000 D2 RECOVERY [initandlisten] 	Id: RecordId(5) Value: { md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--732801831392209623", user_1_db_1: "admin/index/2--732801831392209623" }, ns: "admin.system.users", ident: "admin/collection/0--732801831392209623" }
2020-10-02T20:07:06.933+0000 D2 RECOVERY [initandlisten] 	Id: RecordId(6) Value: { md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "test/index/1-3817864913425832323" }, ns: "test.inventory", ident: "test/collection/0-3817864913425832323" }
2020-10-02T20:07:06.933+0000 D2 RECOVERY [initandlisten] 	Id: RecordId(7) Value: { md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "movies/index/1-5928759223889663863" }, ns: "movies.movies", ident: "movies/collection/0-5928759223889663863" }
2020-10-02T20:07:06.933+0000 D3 STORAGE  [initandlisten] WT rollback_transaction for snapshot id 1
2020-10-02T20:07:06.933+0000 D3 STORAGE  [initandlisten] WT begin_transaction for snapshot id 2
2020-10-02T20:07:06.933+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.users @ RecordId(5)
2020-10-02T20:07:06.933+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--732801831392209623", user_1_db_1: "admin/index/2--732801831392209623" }, ns: "admin.system.users", ident: "admin/collection/0--732801831392209623" }
2020-10-02T20:07:06.933+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.933+0000 D2 STORAGE  [initandlisten] WiredTigerUtil::checkApplicationMetadataFormatVersion  uri: table:admin/collection/0--732801831392209623 ok range 1 -> 1 current: 1
2020-10-02T20:07:06.933+0000 D2 STORAGE  [initandlisten] WiredTigerSizeStorer::load table:admin/collection/0--732801831392209623 -> { numRecords: 6, dataSize: 1901 }
2020-10-02T20:07:06.933+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.users @ RecordId(5)
2020-10-02T20:07:06.933+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--732801831392209623", user_1_db_1: "admin/index/2--732801831392209623" }, ns: "admin.system.users", ident: "admin/collection/0--732801831392209623" }
2020-10-02T20:07:06.933+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.933+0000 D1 STORAGE  [initandlisten] Registering collection admin.system.users with UUID afe8728a-bcfa-4477-b0ae-3a6884f97746
2020-10-02T20:07:06.933+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.users @ RecordId(5)
2020-10-02T20:07:06.933+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--732801831392209623", user_1_db_1: "admin/index/2--732801831392209623" }, ns: "admin.system.users", ident: "admin/collection/0--732801831392209623" }
2020-10-02T20:07:06.933+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.933+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.version @ RecordId(1)
2020-10-02T20:07:06.933+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--2310914167168443545" }, ns: "admin.system.version", ident: "admin/collection/0--2310914167168443545" }
2020-10-02T20:07:06.933+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.933+0000 D2 STORAGE  [initandlisten] WiredTigerUtil::checkApplicationMetadataFormatVersion  uri: table:admin/collection/0--2310914167168443545 ok range 1 -> 1 current: 1
2020-10-02T20:07:06.934+0000 D2 STORAGE  [initandlisten] WiredTigerSizeStorer::load table:admin/collection/0--2310914167168443545 -> { numRecords: 2, dataSize: 104 }
2020-10-02T20:07:06.934+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.version @ RecordId(1)
2020-10-02T20:07:06.934+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--2310914167168443545" }, ns: "admin.system.version", ident: "admin/collection/0--2310914167168443545" }
2020-10-02T20:07:06.934+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.934+0000 D1 STORAGE  [initandlisten] Registering collection admin.system.version with UUID 0d876cab-c7c4-40a4-90c6-c23dd6e3b179
2020-10-02T20:07:06.934+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.version @ RecordId(1)
2020-10-02T20:07:06.934+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--2310914167168443545" }, ns: "admin.system.version", ident: "admin/collection/0--2310914167168443545" }
2020-10-02T20:07:06.934+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.934+0000 D3 STORAGE  [initandlisten] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:07:06.934+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:07:06.934+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.934+0000 D2 STORAGE  [initandlisten] WiredTigerUtil::checkApplicationMetadataFormatVersion  uri: table:config/collection/4--2310914167168443545 ok range 1 -> 1 current: 1
2020-10-02T20:07:06.934+0000 D2 STORAGE  [initandlisten] WiredTigerSizeStorer::load table:config/collection/4--2310914167168443545 -> { numRecords: 0, dataSize: 0 }
2020-10-02T20:07:06.934+0000 D3 STORAGE  [initandlisten] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:07:06.934+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:07:06.934+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.934+0000 D1 STORAGE  [initandlisten] Registering collection config.system.sessions with UUID fbf72919-58ff-41f2-ba34-93b2acda7d24
2020-10-02T20:07:06.934+0000 D3 STORAGE  [initandlisten] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:07:06.934+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:07:06.934+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.934+0000 D3 STORAGE  [initandlisten] looking up metadata for: local.startup_log @ RecordId(3)
2020-10-02T20:07:06.934+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "local/index/3--2310914167168443545" }, ns: "local.startup_log", ident: "local/collection/2--2310914167168443545" }
2020-10-02T20:07:06.934+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.934+0000 D2 STORAGE  [initandlisten] WiredTigerUtil::checkApplicationMetadataFormatVersion  uri: table:local/collection/2--2310914167168443545 ok range 1 -> 1 current: 1
2020-10-02T20:07:06.934+0000 D2 STORAGE  [initandlisten] WiredTigerSizeStorer::load table:local/collection/2--2310914167168443545 -> { numRecords: 74, dataSize: 153994 }
2020-10-02T20:07:06.934+0000 D3 STORAGE  [initandlisten] looking up metadata for: local.startup_log @ RecordId(3)
2020-10-02T20:07:06.934+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "local/index/3--2310914167168443545" }, ns: "local.startup_log", ident: "local/collection/2--2310914167168443545" }
2020-10-02T20:07:06.934+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.934+0000 D1 STORAGE  [initandlisten] Registering collection local.startup_log with UUID 97fc5f31-0917-4d2e-a65c-606750d317e5
2020-10-02T20:07:06.934+0000 D3 STORAGE  [initandlisten] looking up metadata for: local.startup_log @ RecordId(3)
2020-10-02T20:07:06.934+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "local/index/3--2310914167168443545" }, ns: "local.startup_log", ident: "local/collection/2--2310914167168443545" }
2020-10-02T20:07:06.934+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.934+0000 D3 STORAGE  [initandlisten] looking up metadata for: movies.movies @ RecordId(7)
2020-10-02T20:07:06.934+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "movies/index/1-5928759223889663863" }, ns: "movies.movies", ident: "movies/collection/0-5928759223889663863" }
2020-10-02T20:07:06.934+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.934+0000 D2 STORAGE  [initandlisten] WiredTigerUtil::checkApplicationMetadataFormatVersion  uri: table:movies/collection/0-5928759223889663863 ok range 1 -> 1 current: 1
2020-10-02T20:07:06.935+0000 D2 STORAGE  [initandlisten] WiredTigerSizeStorer::load table:movies/collection/0-5928759223889663863 -> { numRecords: 3, dataSize: 128 }
2020-10-02T20:07:06.935+0000 D3 STORAGE  [initandlisten] looking up metadata for: movies.movies @ RecordId(7)
2020-10-02T20:07:06.935+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "movies/index/1-5928759223889663863" }, ns: "movies.movies", ident: "movies/collection/0-5928759223889663863" }
2020-10-02T20:07:06.935+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.935+0000 D1 STORAGE  [initandlisten] Registering collection movies.movies with UUID 77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a
2020-10-02T20:07:06.935+0000 D3 STORAGE  [initandlisten] looking up metadata for: movies.movies @ RecordId(7)
2020-10-02T20:07:06.935+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "movies/index/1-5928759223889663863" }, ns: "movies.movies", ident: "movies/collection/0-5928759223889663863" }
2020-10-02T20:07:06.935+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.935+0000 D3 STORAGE  [initandlisten] looking up metadata for: test.inventory @ RecordId(6)
2020-10-02T20:07:06.935+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "test/index/1-3817864913425832323" }, ns: "test.inventory", ident: "test/collection/0-3817864913425832323" }
2020-10-02T20:07:06.935+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.935+0000 D2 STORAGE  [initandlisten] WiredTigerUtil::checkApplicationMetadataFormatVersion  uri: table:test/collection/0-3817864913425832323 ok range 1 -> 1 current: 1
2020-10-02T20:07:06.935+0000 D2 STORAGE  [initandlisten] WiredTigerSizeStorer::load table:test/collection/0-3817864913425832323 -> { numRecords: 1, dataSize: 122 }
2020-10-02T20:07:06.935+0000 D3 STORAGE  [initandlisten] looking up metadata for: test.inventory @ RecordId(6)
2020-10-02T20:07:06.935+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "test/index/1-3817864913425832323" }, ns: "test.inventory", ident: "test/collection/0-3817864913425832323" }
2020-10-02T20:07:06.935+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.935+0000 D1 STORAGE  [initandlisten] Registering collection test.inventory with UUID 66dd6c2e-e14a-4284-a2a5-a7574ac1fd74
2020-10-02T20:07:06.935+0000 D3 STORAGE  [initandlisten] looking up metadata for: test.inventory @ RecordId(6)
2020-10-02T20:07:06.935+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "test/index/1-3817864913425832323" }, ns: "test.inventory", ident: "test/collection/0-3817864913425832323" }
2020-10-02T20:07:06.935+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.935+0000 D3 STORAGE  [initandlisten] WT rollback_transaction for snapshot id 2
2020-10-02T20:07:06.935+0000 I  STORAGE  [initandlisten] Timestamp monitor starting
2020-10-02T20:07:06.935+0000 D2 -        [initandlisten] Starting periodic job TimestampMonitor
2020-10-02T20:07:06.936+0000 D1 STORAGE  [initandlisten] flushing directory /home/bimongod/data
2020-10-02T20:07:06.936+0000 I  CONTROL  [initandlisten] 
2020-10-02T20:07:06.936+0000 I  CONTROL  [initandlisten] ** WARNING: Access control is not enabled for the database.
2020-10-02T20:07:06.936+0000 I  CONTROL  [initandlisten] **          Read and write access to data and configuration is unrestricted.
2020-10-02T20:07:06.936+0000 I  CONTROL  [initandlisten] 
2020-10-02T20:07:06.937+0000 I  CONTROL  [initandlisten] 
2020-10-02T20:07:06.937+0000 I  CONTROL  [initandlisten] ** WARNING: /sys/kernel/mm/transparent_hugepage/enabled is 'always'.
2020-10-02T20:07:06.937+0000 I  CONTROL  [initandlisten] **        We suggest setting it to 'never'
2020-10-02T20:07:06.937+0000 I  CONTROL  [initandlisten] 
2020-10-02T20:07:06.937+0000 I  CONTROL  [initandlisten] ** WARNING: /sys/kernel/mm/transparent_hugepage/defrag is 'always'.
2020-10-02T20:07:06.937+0000 I  CONTROL  [initandlisten] **        We suggest setting it to 'never'
2020-10-02T20:07:06.937+0000 I  CONTROL  [initandlisten] 
2020-10-02T20:07:06.937+0000 D1 COMMAND  [SNMPAgent] BackgroundJob starting: SNMPAgent
2020-10-02T20:07:06.937+0000 D1 NETWORK  [SNMPAgent] SNMPAgent not enabled
2020-10-02T20:07:06.937+0000 D3 STORAGE  [initandlisten] WT begin_transaction for snapshot id 4
2020-10-02T20:07:06.937+0000 D2 RECOVERY [initandlisten] Reconciling collection and index idents.
2020-10-02T20:07:06.937+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.users @ RecordId(5)
2020-10-02T20:07:06.937+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--732801831392209623", user_1_db_1: "admin/index/2--732801831392209623" }, ns: "admin.system.users", ident: "admin/collection/0--732801831392209623" }
2020-10-02T20:07:06.937+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.937+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.users @ RecordId(5)
2020-10-02T20:07:06.937+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.users @ RecordId(5)
2020-10-02T20:07:06.937+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.version @ RecordId(1)
2020-10-02T20:07:06.937+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--2310914167168443545" }, ns: "admin.system.version", ident: "admin/collection/0--2310914167168443545" }
2020-10-02T20:07:06.937+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.937+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.version @ RecordId(1)
2020-10-02T20:07:06.938+0000 D3 STORAGE  [initandlisten] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:07:06.938+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:07:06.938+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.938+0000 D3 STORAGE  [initandlisten] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:07:06.938+0000 D3 STORAGE  [initandlisten] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:07:06.938+0000 D3 STORAGE  [initandlisten] looking up metadata for: local.startup_log @ RecordId(3)
2020-10-02T20:07:06.938+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "local/index/3--2310914167168443545" }, ns: "local.startup_log", ident: "local/collection/2--2310914167168443545" }
2020-10-02T20:07:06.938+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.938+0000 D3 STORAGE  [initandlisten] looking up metadata for: local.startup_log @ RecordId(3)
2020-10-02T20:07:06.938+0000 D3 STORAGE  [initandlisten] looking up metadata for: movies.movies @ RecordId(7)
2020-10-02T20:07:06.938+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "movies/index/1-5928759223889663863" }, ns: "movies.movies", ident: "movies/collection/0-5928759223889663863" }
2020-10-02T20:07:06.938+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.938+0000 D3 STORAGE  [initandlisten] looking up metadata for: movies.movies @ RecordId(7)
2020-10-02T20:07:06.938+0000 D3 STORAGE  [initandlisten] looking up metadata for: test.inventory @ RecordId(6)
2020-10-02T20:07:06.938+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "test/index/1-3817864913425832323" }, ns: "test.inventory", ident: "test/collection/0-3817864913425832323" }
2020-10-02T20:07:06.938+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.938+0000 D3 STORAGE  [initandlisten] looking up metadata for: test.inventory @ RecordId(6)
2020-10-02T20:07:06.938+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.version @ RecordId(1)
2020-10-02T20:07:06.938+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--2310914167168443545" }, ns: "admin.system.version", ident: "admin/collection/0--2310914167168443545" }
2020-10-02T20:07:06.938+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.938+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.version @ RecordId(1)
2020-10-02T20:07:06.938+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--2310914167168443545" }, ns: "admin.system.version", ident: "admin/collection/0--2310914167168443545" }
2020-10-02T20:07:06.938+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.938+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.version @ RecordId(1)
2020-10-02T20:07:06.938+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--2310914167168443545" }, ns: "admin.system.version", ident: "admin/collection/0--2310914167168443545" }
2020-10-02T20:07:06.938+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.938+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.version @ RecordId(1)
2020-10-02T20:07:06.938+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--2310914167168443545" }, ns: "admin.system.version", ident: "admin/collection/0--2310914167168443545" }
2020-10-02T20:07:06.938+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.938+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.version @ RecordId(1)
2020-10-02T20:07:06.938+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--2310914167168443545" }, ns: "admin.system.version", ident: "admin/collection/0--2310914167168443545" }
2020-10-02T20:07:06.938+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.938+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.version @ RecordId(1)
2020-10-02T20:07:06.938+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--2310914167168443545" }, ns: "admin.system.version", ident: "admin/collection/0--2310914167168443545" }
2020-10-02T20:07:06.938+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.938+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.version @ RecordId(1)
2020-10-02T20:07:06.938+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--2310914167168443545" }, ns: "admin.system.version", ident: "admin/collection/0--2310914167168443545" }
2020-10-02T20:07:06.938+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.938+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.version @ RecordId(1)
2020-10-02T20:07:06.938+0000 D2 STORAGE  [initandlisten] WiredTigerUtil::checkApplicationMetadataFormatVersion  uri: table:admin/index/1--2310914167168443545 ok range 6 -> 12 current: 8
2020-10-02T20:07:06.938+0000 D1 STORAGE  [initandlisten] admin.system.version: clearing plan cache - collection info cache reset
2020-10-02T20:07:06.938+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.users @ RecordId(5)
2020-10-02T20:07:06.938+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--732801831392209623", user_1_db_1: "admin/index/2--732801831392209623" }, ns: "admin.system.users", ident: "admin/collection/0--732801831392209623" }
2020-10-02T20:07:06.938+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.938+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.users @ RecordId(5)
2020-10-02T20:07:06.938+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--732801831392209623", user_1_db_1: "admin/index/2--732801831392209623" }, ns: "admin.system.users", ident: "admin/collection/0--732801831392209623" }
2020-10-02T20:07:06.938+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.938+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.users @ RecordId(5)
2020-10-02T20:07:06.938+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--732801831392209623", user_1_db_1: "admin/index/2--732801831392209623" }, ns: "admin.system.users", ident: "admin/collection/0--732801831392209623" }
2020-10-02T20:07:06.938+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.938+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.users @ RecordId(5)
2020-10-02T20:07:06.938+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--732801831392209623", user_1_db_1: "admin/index/2--732801831392209623" }, ns: "admin.system.users", ident: "admin/collection/0--732801831392209623" }
2020-10-02T20:07:06.938+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.938+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.users @ RecordId(5)
2020-10-02T20:07:06.938+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--732801831392209623", user_1_db_1: "admin/index/2--732801831392209623" }, ns: "admin.system.users", ident: "admin/collection/0--732801831392209623" }
2020-10-02T20:07:06.938+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.938+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.users @ RecordId(5)
2020-10-02T20:07:06.938+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--732801831392209623", user_1_db_1: "admin/index/2--732801831392209623" }, ns: "admin.system.users", ident: "admin/collection/0--732801831392209623" }
2020-10-02T20:07:06.938+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.938+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.users @ RecordId(5)
2020-10-02T20:07:06.938+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--732801831392209623", user_1_db_1: "admin/index/2--732801831392209623" }, ns: "admin.system.users", ident: "admin/collection/0--732801831392209623" }
2020-10-02T20:07:06.938+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.938+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.users @ RecordId(5)
2020-10-02T20:07:06.938+0000 D2 STORAGE  [initandlisten] WiredTigerUtil::checkApplicationMetadataFormatVersion  uri: table:admin/index/1--732801831392209623 ok range 6 -> 12 current: 8
2020-10-02T20:07:06.939+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.users @ RecordId(5)
2020-10-02T20:07:06.939+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--732801831392209623", user_1_db_1: "admin/index/2--732801831392209623" }, ns: "admin.system.users", ident: "admin/collection/0--732801831392209623" }
2020-10-02T20:07:06.939+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.939+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.users @ RecordId(5)
2020-10-02T20:07:06.939+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--732801831392209623", user_1_db_1: "admin/index/2--732801831392209623" }, ns: "admin.system.users", ident: "admin/collection/0--732801831392209623" }
2020-10-02T20:07:06.939+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.939+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.users @ RecordId(5)
2020-10-02T20:07:06.939+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--732801831392209623", user_1_db_1: "admin/index/2--732801831392209623" }, ns: "admin.system.users", ident: "admin/collection/0--732801831392209623" }
2020-10-02T20:07:06.939+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.939+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.users @ RecordId(5)
2020-10-02T20:07:06.939+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--732801831392209623", user_1_db_1: "admin/index/2--732801831392209623" }, ns: "admin.system.users", ident: "admin/collection/0--732801831392209623" }
2020-10-02T20:07:06.939+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.939+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.users @ RecordId(5)
2020-10-02T20:07:06.939+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--732801831392209623", user_1_db_1: "admin/index/2--732801831392209623" }, ns: "admin.system.users", ident: "admin/collection/0--732801831392209623" }
2020-10-02T20:07:06.939+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.939+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.users @ RecordId(5)
2020-10-02T20:07:06.939+0000 D2 STORAGE  [initandlisten] WiredTigerUtil::checkApplicationMetadataFormatVersion  uri: table:admin/index/2--732801831392209623 ok range 6 -> 12 current: 12
2020-10-02T20:07:06.939+0000 D1 STORAGE  [initandlisten] admin.system.users: clearing plan cache - collection info cache reset
2020-10-02T20:07:06.939+0000 D1 -        [initandlisten] reloading view catalog for database admin
2020-10-02T20:07:06.939+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.version @ RecordId(1)
2020-10-02T20:07:06.939+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--2310914167168443545" }, ns: "admin.system.version", ident: "admin/collection/0--2310914167168443545" }
2020-10-02T20:07:06.939+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.939+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.version @ RecordId(1)
2020-10-02T20:07:06.939+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--2310914167168443545" }, ns: "admin.system.version", ident: "admin/collection/0--2310914167168443545" }
2020-10-02T20:07:06.939+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.939+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.version @ RecordId(1)
2020-10-02T20:07:06.939+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--2310914167168443545" }, ns: "admin.system.version", ident: "admin/collection/0--2310914167168443545" }
2020-10-02T20:07:06.939+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.939+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.users @ RecordId(5)
2020-10-02T20:07:06.939+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--732801831392209623", user_1_db_1: "admin/index/2--732801831392209623" }, ns: "admin.system.users", ident: "admin/collection/0--732801831392209623" }
2020-10-02T20:07:06.939+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.939+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.users @ RecordId(5)
2020-10-02T20:07:06.939+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--732801831392209623", user_1_db_1: "admin/index/2--732801831392209623" }, ns: "admin.system.users", ident: "admin/collection/0--732801831392209623" }
2020-10-02T20:07:06.939+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.939+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.users @ RecordId(5)
2020-10-02T20:07:06.939+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--732801831392209623", user_1_db_1: "admin/index/2--732801831392209623" }, ns: "admin.system.users", ident: "admin/collection/0--732801831392209623" }
2020-10-02T20:07:06.939+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.939+0000 D3 STORAGE  [initandlisten] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:07:06.939+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:07:06.939+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.939+0000 D3 STORAGE  [initandlisten] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:07:06.939+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:07:06.939+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.939+0000 D3 STORAGE  [initandlisten] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:07:06.939+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:07:06.939+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.939+0000 D3 STORAGE  [initandlisten] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:07:06.939+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:07:06.939+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.939+0000 D3 STORAGE  [initandlisten] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:07:06.939+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:07:06.939+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.939+0000 D3 STORAGE  [initandlisten] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:07:06.939+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:07:06.939+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.939+0000 D3 STORAGE  [initandlisten] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:07:06.939+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:07:06.939+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.939+0000 D3 STORAGE  [initandlisten] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:07:06.939+0000 D2 STORAGE  [initandlisten] WiredTigerUtil::checkApplicationMetadataFormatVersion  uri: table:config/index/5--2310914167168443545 ok range 6 -> 12 current: 8
2020-10-02T20:07:06.940+0000 D3 STORAGE  [initandlisten] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:07:06.940+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:07:06.940+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.940+0000 D3 STORAGE  [initandlisten] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:07:06.940+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:07:06.940+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.940+0000 D3 STORAGE  [initandlisten] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:07:06.940+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:07:06.940+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.940+0000 D3 STORAGE  [initandlisten] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:07:06.940+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:07:06.940+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.940+0000 D3 STORAGE  [initandlisten] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:07:06.940+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:07:06.940+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.940+0000 D3 STORAGE  [initandlisten] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:07:06.940+0000 D2 STORAGE  [initandlisten] WiredTigerUtil::checkApplicationMetadataFormatVersion  uri: table:config/index/6--2310914167168443545 ok range 6 -> 12 current: 8
2020-10-02T20:07:06.940+0000 D1 STORAGE  [initandlisten] config.system.sessions: clearing plan cache - collection info cache reset
2020-10-02T20:07:06.940+0000 D1 -        [initandlisten] reloading view catalog for database config
2020-10-02T20:07:06.940+0000 D3 STORAGE  [initandlisten] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:07:06.940+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:07:06.940+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.940+0000 D3 STORAGE  [initandlisten] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:07:06.940+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:07:06.940+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.940+0000 D3 STORAGE  [initandlisten] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:07:06.940+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:07:06.940+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.940+0000 D3 STORAGE  [initandlisten] looking up metadata for: local.startup_log @ RecordId(3)
2020-10-02T20:07:06.940+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "local/index/3--2310914167168443545" }, ns: "local.startup_log", ident: "local/collection/2--2310914167168443545" }
2020-10-02T20:07:06.940+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.940+0000 D3 STORAGE  [initandlisten] looking up metadata for: local.startup_log @ RecordId(3)
2020-10-02T20:07:06.940+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "local/index/3--2310914167168443545" }, ns: "local.startup_log", ident: "local/collection/2--2310914167168443545" }
2020-10-02T20:07:06.940+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.940+0000 D3 STORAGE  [initandlisten] looking up metadata for: local.startup_log @ RecordId(3)
2020-10-02T20:07:06.940+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "local/index/3--2310914167168443545" }, ns: "local.startup_log", ident: "local/collection/2--2310914167168443545" }
2020-10-02T20:07:06.940+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.940+0000 D3 STORAGE  [initandlisten] looking up metadata for: local.startup_log @ RecordId(3)
2020-10-02T20:07:06.940+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "local/index/3--2310914167168443545" }, ns: "local.startup_log", ident: "local/collection/2--2310914167168443545" }
2020-10-02T20:07:06.940+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.940+0000 D3 STORAGE  [initandlisten] looking up metadata for: local.startup_log @ RecordId(3)
2020-10-02T20:07:06.940+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "local/index/3--2310914167168443545" }, ns: "local.startup_log", ident: "local/collection/2--2310914167168443545" }
2020-10-02T20:07:06.940+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.940+0000 D3 STORAGE  [initandlisten] looking up metadata for: local.startup_log @ RecordId(3)
2020-10-02T20:07:06.940+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "local/index/3--2310914167168443545" }, ns: "local.startup_log", ident: "local/collection/2--2310914167168443545" }
2020-10-02T20:07:06.940+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.940+0000 D3 STORAGE  [initandlisten] looking up metadata for: local.startup_log @ RecordId(3)
2020-10-02T20:07:06.940+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "local/index/3--2310914167168443545" }, ns: "local.startup_log", ident: "local/collection/2--2310914167168443545" }
2020-10-02T20:07:06.940+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.940+0000 D3 STORAGE  [initandlisten] looking up metadata for: local.startup_log @ RecordId(3)
2020-10-02T20:07:06.940+0000 D2 STORAGE  [initandlisten] WiredTigerUtil::checkApplicationMetadataFormatVersion  uri: table:local/index/3--2310914167168443545 ok range 6 -> 12 current: 8
2020-10-02T20:07:06.940+0000 D1 STORAGE  [initandlisten] local.startup_log: clearing plan cache - collection info cache reset
2020-10-02T20:07:06.940+0000 D1 -        [initandlisten] reloading view catalog for database local
2020-10-02T20:07:06.940+0000 D3 STORAGE  [initandlisten] looking up metadata for: local.startup_log @ RecordId(3)
2020-10-02T20:07:06.940+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "local/index/3--2310914167168443545" }, ns: "local.startup_log", ident: "local/collection/2--2310914167168443545" }
2020-10-02T20:07:06.940+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.940+0000 D3 STORAGE  [initandlisten] looking up metadata for: movies.movies @ RecordId(7)
2020-10-02T20:07:06.940+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "movies/index/1-5928759223889663863" }, ns: "movies.movies", ident: "movies/collection/0-5928759223889663863" }
2020-10-02T20:07:06.940+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.940+0000 D3 STORAGE  [initandlisten] looking up metadata for: movies.movies @ RecordId(7)
2020-10-02T20:07:06.940+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "movies/index/1-5928759223889663863" }, ns: "movies.movies", ident: "movies/collection/0-5928759223889663863" }
2020-10-02T20:07:06.940+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.940+0000 D3 STORAGE  [initandlisten] looking up metadata for: movies.movies @ RecordId(7)
2020-10-02T20:07:06.940+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "movies/index/1-5928759223889663863" }, ns: "movies.movies", ident: "movies/collection/0-5928759223889663863" }
2020-10-02T20:07:06.940+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.940+0000 D3 STORAGE  [initandlisten] looking up metadata for: movies.movies @ RecordId(7)
2020-10-02T20:07:06.940+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "movies/index/1-5928759223889663863" }, ns: "movies.movies", ident: "movies/collection/0-5928759223889663863" }
2020-10-02T20:07:06.940+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.940+0000 D3 STORAGE  [initandlisten] looking up metadata for: movies.movies @ RecordId(7)
2020-10-02T20:07:06.940+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "movies/index/1-5928759223889663863" }, ns: "movies.movies", ident: "movies/collection/0-5928759223889663863" }
2020-10-02T20:07:06.940+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.941+0000 D3 STORAGE  [initandlisten] looking up metadata for: movies.movies @ RecordId(7)
2020-10-02T20:07:06.941+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "movies/index/1-5928759223889663863" }, ns: "movies.movies", ident: "movies/collection/0-5928759223889663863" }
2020-10-02T20:07:06.941+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.941+0000 D3 STORAGE  [initandlisten] looking up metadata for: movies.movies @ RecordId(7)
2020-10-02T20:07:06.941+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "movies/index/1-5928759223889663863" }, ns: "movies.movies", ident: "movies/collection/0-5928759223889663863" }
2020-10-02T20:07:06.941+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.941+0000 D3 STORAGE  [initandlisten] looking up metadata for: movies.movies @ RecordId(7)
2020-10-02T20:07:06.941+0000 D2 STORAGE  [initandlisten] WiredTigerUtil::checkApplicationMetadataFormatVersion  uri: table:movies/index/1-5928759223889663863 ok range 6 -> 12 current: 8
2020-10-02T20:07:06.941+0000 D1 STORAGE  [initandlisten] movies.movies: clearing plan cache - collection info cache reset
2020-10-02T20:07:06.941+0000 D1 -        [initandlisten] reloading view catalog for database movies
2020-10-02T20:07:06.941+0000 D3 STORAGE  [initandlisten] looking up metadata for: movies.movies @ RecordId(7)
2020-10-02T20:07:06.941+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "movies/index/1-5928759223889663863" }, ns: "movies.movies", ident: "movies/collection/0-5928759223889663863" }
2020-10-02T20:07:06.941+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.941+0000 D3 STORAGE  [initandlisten] looking up metadata for: movies.movies @ RecordId(7)
2020-10-02T20:07:06.941+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "movies/index/1-5928759223889663863" }, ns: "movies.movies", ident: "movies/collection/0-5928759223889663863" }
2020-10-02T20:07:06.941+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.941+0000 D3 STORAGE  [initandlisten] looking up metadata for: movies.movies @ RecordId(7)
2020-10-02T20:07:06.941+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "movies/index/1-5928759223889663863" }, ns: "movies.movies", ident: "movies/collection/0-5928759223889663863" }
2020-10-02T20:07:06.941+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.941+0000 D3 STORAGE  [initandlisten] looking up metadata for: test.inventory @ RecordId(6)
2020-10-02T20:07:06.941+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "test/index/1-3817864913425832323" }, ns: "test.inventory", ident: "test/collection/0-3817864913425832323" }
2020-10-02T20:07:06.941+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.941+0000 D3 STORAGE  [initandlisten] looking up metadata for: test.inventory @ RecordId(6)
2020-10-02T20:07:06.941+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "test/index/1-3817864913425832323" }, ns: "test.inventory", ident: "test/collection/0-3817864913425832323" }
2020-10-02T20:07:06.941+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.941+0000 D3 STORAGE  [initandlisten] looking up metadata for: test.inventory @ RecordId(6)
2020-10-02T20:07:06.941+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "test/index/1-3817864913425832323" }, ns: "test.inventory", ident: "test/collection/0-3817864913425832323" }
2020-10-02T20:07:06.941+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.941+0000 D3 STORAGE  [initandlisten] looking up metadata for: test.inventory @ RecordId(6)
2020-10-02T20:07:06.941+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "test/index/1-3817864913425832323" }, ns: "test.inventory", ident: "test/collection/0-3817864913425832323" }
2020-10-02T20:07:06.941+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.941+0000 D3 STORAGE  [initandlisten] looking up metadata for: test.inventory @ RecordId(6)
2020-10-02T20:07:06.941+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "test/index/1-3817864913425832323" }, ns: "test.inventory", ident: "test/collection/0-3817864913425832323" }
2020-10-02T20:07:06.941+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.941+0000 D3 STORAGE  [initandlisten] looking up metadata for: test.inventory @ RecordId(6)
2020-10-02T20:07:06.941+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "test/index/1-3817864913425832323" }, ns: "test.inventory", ident: "test/collection/0-3817864913425832323" }
2020-10-02T20:07:06.941+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.941+0000 D3 STORAGE  [initandlisten] looking up metadata for: test.inventory @ RecordId(6)
2020-10-02T20:07:06.941+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "test/index/1-3817864913425832323" }, ns: "test.inventory", ident: "test/collection/0-3817864913425832323" }
2020-10-02T20:07:06.941+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.941+0000 D3 STORAGE  [initandlisten] looking up metadata for: test.inventory @ RecordId(6)
2020-10-02T20:07:06.941+0000 D2 STORAGE  [initandlisten] WiredTigerUtil::checkApplicationMetadataFormatVersion  uri: table:test/index/1-3817864913425832323 ok range 6 -> 12 current: 8
2020-10-02T20:07:06.941+0000 D1 STORAGE  [initandlisten] test.inventory: clearing plan cache - collection info cache reset
2020-10-02T20:07:06.941+0000 D1 -        [initandlisten] reloading view catalog for database test
2020-10-02T20:07:06.941+0000 D3 STORAGE  [initandlisten] looking up metadata for: test.inventory @ RecordId(6)
2020-10-02T20:07:06.941+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "test/index/1-3817864913425832323" }, ns: "test.inventory", ident: "test/collection/0-3817864913425832323" }
2020-10-02T20:07:06.941+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.941+0000 D3 STORAGE  [initandlisten] looking up metadata for: test.inventory @ RecordId(6)
2020-10-02T20:07:06.941+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "test/index/1-3817864913425832323" }, ns: "test.inventory", ident: "test/collection/0-3817864913425832323" }
2020-10-02T20:07:06.941+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.941+0000 D3 STORAGE  [initandlisten] looking up metadata for: test.inventory @ RecordId(6)
2020-10-02T20:07:06.941+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "test/index/1-3817864913425832323" }, ns: "test.inventory", ident: "test/collection/0-3817864913425832323" }
2020-10-02T20:07:06.941+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.941+0000 D2 CONNPOOL [initandlisten] Controller for NetworkInterfaceTL-CollectionRangeDeleter-TaskExecutor is LimitController
2020-10-02T20:07:06.941+0000 D2 ASIO     [CollectionRangeDeleter-TaskExecutor] The NetworkInterfaceTL reactor thread is spinning up
2020-10-02T20:07:06.941+0000 I  SHARDING [initandlisten] Marking collection local.system.replset as collection version: <unsharded>
2020-10-02T20:07:06.941+0000 D1 STORAGE  [initandlisten]     Recovering database: admin
2020-10-02T20:07:06.942+0000 D2 QUERY    [initandlisten] Using idhack: ns: admin.system.version query: { _id: "featureCompatibilityVersion" } sort: {} projection: {}
2020-10-02T20:07:06.943+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.version @ RecordId(1)
2020-10-02T20:07:06.943+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--2310914167168443545" }, ns: "admin.system.version", ident: "admin/collection/0--2310914167168443545" }
2020-10-02T20:07:06.943+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.943+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.users @ RecordId(5)
2020-10-02T20:07:06.943+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--732801831392209623", user_1_db_1: "admin/index/2--732801831392209623" }, ns: "admin.system.users", ident: "admin/collection/0--732801831392209623" }
2020-10-02T20:07:06.943+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.943+0000 D1 STORAGE  [initandlisten]     Recovering database: config
2020-10-02T20:07:06.943+0000 D3 STORAGE  [initandlisten] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:07:06.943+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:07:06.943+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.943+0000 D1 STORAGE  [initandlisten]     Recovering database: local
2020-10-02T20:07:06.943+0000 D3 STORAGE  [initandlisten] looking up metadata for: local.startup_log @ RecordId(3)
2020-10-02T20:07:06.943+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "local/index/3--2310914167168443545" }, ns: "local.startup_log", ident: "local/collection/2--2310914167168443545" }
2020-10-02T20:07:06.943+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.943+0000 D1 STORAGE  [initandlisten]     Recovering database: movies
2020-10-02T20:07:06.943+0000 D3 STORAGE  [initandlisten] looking up metadata for: movies.movies @ RecordId(7)
2020-10-02T20:07:06.943+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "movies/index/1-5928759223889663863" }, ns: "movies.movies", ident: "movies/collection/0-5928759223889663863" }
2020-10-02T20:07:06.943+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.943+0000 D1 STORAGE  [initandlisten]     Recovering database: test
2020-10-02T20:07:06.943+0000 D3 STORAGE  [initandlisten] looking up metadata for: test.inventory @ RecordId(6)
2020-10-02T20:07:06.943+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "test/index/1-3817864913425832323" }, ns: "test.inventory", ident: "test/collection/0-3817864913425832323" }
2020-10-02T20:07:06.943+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.943+0000 D3 REPL     [initandlisten] No min valid document found, returning initial sync flag value of false.
2020-10-02T20:07:06.943+0000 D1 STORAGE  [initandlisten] done repairDatabases
2020-10-02T20:07:06.943+0000 D3 STORAGE  [initandlisten] WT rollback_transaction for snapshot id 4
2020-10-02T20:07:06.943+0000 D3 REPL     [initandlisten] No min valid document found, returning initial sync flag value of false.
2020-10-02T20:07:06.943+0000 I  STORAGE  [initandlisten] Flow Control is enabled on this deployment.
2020-10-02T20:07:06.943+0000 D2 COMMAND  [initandlisten] run command admin.$cmd { find: "system.roles", $db: "admin" }
2020-10-02T20:07:06.943+0000 I  SHARDING [initandlisten] Marking collection admin.system.roles as collection version: <unsharded>
2020-10-02T20:07:06.943+0000 D2 QUERY    [initandlisten] Collection admin.system.roles does not exist. Using EOF plan: ns: admin.system.roles query: {} sort: {} projection: {}
2020-10-02T20:07:06.943+0000 I  COMMAND  [initandlisten] command admin.system.roles command: find { find: "system.roles", $db: "admin" } planSummary: EOF keysExamined:0 docsExamined:0 cursorExhausted:1 numYields:0 nreturned:0 reslen:107 locks:{ ReplicationStateTransition: { acquireCount: { w: 1 } }, Global: { acquireCount: { r: 1 } }, Database: { acquireCount: { r: 1 } }, Collection: { acquireCount: { r: 2 } }, Mutex: { acquireCount: { r: 1 } } } storage:{ data: { bytesRead: 343, timeReadingMicros: 4 } } protocol:op_msg 0ms
2020-10-02T20:07:06.943+0000 D1 ACCESS   [initandlisten] There were no users to pin, not starting tracker thread
2020-10-02T20:07:06.943+0000 D2 ACCESS   [initandlisten] Invalidating user cache
2020-10-02T20:07:06.943+0000 D4 -        [initandlisten] Taking ticket. Available: 1000000000
2020-10-02T20:07:06.943+0000 I  SHARDING [initandlisten] Marking collection admin.system.version as collection version: <unsharded>
2020-10-02T20:07:06.943+0000 D2 QUERY    [initandlisten] Using idhack: ns: admin.system.version query: { _id: "authSchema" } sort: {} projection: {}
2020-10-02T20:07:06.943+0000 D3 STORAGE  [initandlisten] WT begin_transaction for snapshot id 5
2020-10-02T20:07:06.943+0000 D3 STORAGE  [initandlisten] WT rollback_transaction for snapshot id 5
2020-10-02T20:07:06.943+0000 D2 QUERY    [initandlisten] Using idhack: ns: admin.system.version query: { _id: "shardIdentity" } sort: {} projection: {}
2020-10-02T20:07:06.943+0000 D3 STORAGE  [initandlisten] WT begin_transaction for snapshot id 6
2020-10-02T20:07:06.943+0000 D3 STORAGE  [initandlisten] WT rollback_transaction for snapshot id 6
2020-10-02T20:07:06.943+0000 D3 STORAGE  [initandlisten] WT begin_transaction for snapshot id 8
2020-10-02T20:07:06.944+0000 D2 STORAGE  [initandlisten] WiredTigerSizeStorer::store Marking table:local/collection/2--2310914167168443545 dirty, numRecords: 75, dataSize: 156002, use_count: 3
2020-10-02T20:07:06.944+0000 I  SHARDING [initandlisten] Marking collection local.startup_log as collection version: <unsharded>
2020-10-02T20:07:06.944+0000 D3 STORAGE  [initandlisten] WT commit_transaction for snapshot id 8
2020-10-02T20:07:06.945+0000 I  FTDC     [initandlisten] Initializing full-time diagnostic data capture with directory '/home/bimongod/data/diagnostic.data'
2020-10-02T20:07:06.945+0000 D1 COMMAND  [TTLMonitor] BackgroundJob starting: TTLMonitor
2020-10-02T20:07:06.945+0000 D1 COMMAND  [ClientCursorMonitor] BackgroundJob starting: ClientCursorMonitor
2020-10-02T20:07:06.945+0000 D1 COMMAND  [PeriodicTaskRunner] BackgroundJob starting: PeriodicTaskRunner
2020-10-02T20:07:06.945+0000 D2 -        [initandlisten] Starting periodic job abortExpiredTransactions
2020-10-02T20:07:06.945+0000 D2 -        [initandlisten] Starting periodic job startPeriodicThreadToDecreaseSnapshotHistoryCachePressure
2020-10-02T20:07:06.945+0000 D2 WRITE    [abortExpiredTransactions] Beginning scanSessions. Scanning 0 sessions.
2020-10-02T20:07:06.945+0000 D2 -        [initandlisten] Starting periodic job LogicalSessionCacheRefresh
2020-10-02T20:07:06.946+0000 D2 COMMAND  [LogicalSessionCacheRefresh] run command config.$cmd { listIndexes: "system.sessions", cursor: {}, $db: "config" }
2020-10-02T20:07:06.946+0000 I  SHARDING [LogicalSessionCacheRefresh] Marking collection config.system.sessions as collection version: <unsharded>
2020-10-02T20:07:06.946+0000 D3 STORAGE  [LogicalSessionCacheRefresh] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:07:06.946+0000 D3 STORAGE  [LogicalSessionCacheRefresh] WT begin_transaction for snapshot id 13
2020-10-02T20:07:06.946+0000 D3 STORAGE  [LogicalSessionCacheRefresh]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:07:06.946+0000 D3 STORAGE  [LogicalSessionCacheRefresh] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.946+0000 D3 STORAGE  [LogicalSessionCacheRefresh] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:07:06.946+0000 D3 STORAGE  [LogicalSessionCacheRefresh]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:07:06.946+0000 D3 STORAGE  [LogicalSessionCacheRefresh] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.946+0000 D3 STORAGE  [LogicalSessionCacheRefresh] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:07:06.946+0000 D3 STORAGE  [LogicalSessionCacheRefresh]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:07:06.946+0000 D3 STORAGE  [LogicalSessionCacheRefresh] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.946+0000 D3 STORAGE  [LogicalSessionCacheRefresh] WT rollback_transaction for snapshot id 13
2020-10-02T20:07:06.946+0000 I  COMMAND  [LogicalSessionCacheRefresh] command config.system.sessions command: listIndexes { listIndexes: "system.sessions", cursor: {}, $db: "config" } numYields:0 reslen:307 locks:{ ReplicationStateTransition: { acquireCount: { w: 1 } }, Global: { acquireCount: { r: 1 } }, Database: { acquireCount: { r: 1 } }, Collection: { acquireCount: { r: 1 } }, Mutex: { acquireCount: { r: 1 } } } storage:{} protocol:op_msg 0ms
2020-10-02T20:07:06.946+0000 D2 -        [initandlisten] Starting periodic job LogicalSessionCacheReap
2020-10-02T20:07:06.946+0000 D2 COMMAND  [LogicalSessionCacheReap] run command config.$cmd { listIndexes: "system.sessions", cursor: {}, $db: "config" }
2020-10-02T20:07:06.946+0000 D3 STORAGE  [LogicalSessionCacheReap] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:07:06.946+0000 D3 STORAGE  [LogicalSessionCacheReap] WT begin_transaction for snapshot id 15
2020-10-02T20:07:06.946+0000 D3 STORAGE  [LogicalSessionCacheReap]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:07:06.946+0000 D3 STORAGE  [LogicalSessionCacheReap] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.946+0000 D3 STORAGE  [LogicalSessionCacheReap] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:07:06.946+0000 D3 STORAGE  [LogicalSessionCacheReap]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:07:06.946+0000 D3 STORAGE  [LogicalSessionCacheReap] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.946+0000 I  NETWORK  [listener] Listening on /tmp/mongodb-27000.sock
2020-10-02T20:07:06.946+0000 D3 STORAGE  [LogicalSessionCacheReap] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:07:06.946+0000 D3 STORAGE  [LogicalSessionCacheReap]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:07:06.946+0000 I  NETWORK  [listener] Listening on 0.0.0.0
2020-10-02T20:07:06.946+0000 D3 STORAGE  [LogicalSessionCacheReap] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:07:06.946+0000 I  NETWORK  [listener] waiting for connections on port 27000
2020-10-02T20:07:06.946+0000 D3 STORAGE  [LogicalSessionCacheReap] WT rollback_transaction for snapshot id 15
2020-10-02T20:07:06.946+0000 I  COMMAND  [LogicalSessionCacheReap] command config.system.sessions command: listIndexes { listIndexes: "system.sessions", cursor: {}, $db: "config" } numYields:0 reslen:307 locks:{ ReplicationStateTransition: { acquireCount: { w: 1 } }, Global: { acquireCount: { r: 1 } }, Database: { acquireCount: { r: 1 } }, Collection: { acquireCount: { r: 1 } }, Mutex: { acquireCount: { r: 1 } } } storage:{} protocol:op_msg 0ms
2020-10-02T20:07:06.946+0000 D2 WRITE    [LogicalSessionCacheReap] Beginning scanSessions. Scanning 0 sessions.
2020-10-02T20:07:06.946+0000 D2 COMMAND  [LogicalSessionCacheReap] run command config.$cmd { find: "transactions", filter: { lastWriteDate: { $lt: new Date(1601667426946) } }, projection: { _id: 1 }, sort: { _id: 1 }, $db: "config" }
2020-10-02T20:07:06.946+0000 I  SHARDING [LogicalSessionCacheReap] Marking collection config.transactions as collection version: <unsharded>
2020-10-02T20:07:06.947+0000 D2 QUERY    [LogicalSessionCacheReap] Collection config.transactions does not exist. Using EOF plan: ns: config.transactions query: { lastWriteDate: { $lt: new Date(1601667426946) } } sort: { _id: 1 } projection: { _id: 1 }
2020-10-02T20:07:06.947+0000 I  COMMAND  [LogicalSessionCacheReap] command config.transactions command: find { find: "transactions", filter: { lastWriteDate: { $lt: new Date(1601667426946) } }, projection: { _id: 1 }, sort: { _id: 1 }, $db: "config" } planSummary: EOF keysExamined:0 docsExamined:0 cursorExhausted:1 numYields:0 nreturned:0 reslen:108 locks:{ ReplicationStateTransition: { acquireCount: { w: 1 } }, Global: { acquireCount: { r: 1 } }, Database: { acquireCount: { r: 1 } }, Collection: { acquireCount: { r: 2 } }, Mutex: { acquireCount: { r: 1 } } } storage:{} protocol:op_msg 0ms
2020-10-02T20:07:06.963+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:07:06.963+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 999999999 Now: 1000000000
2020-10-02T20:07:07.001+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:07:07.001+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:07:07.001+0000 I  SHARDING [ftdc] Marking collection local.oplog.rs as collection version: <unsharded>
2020-10-02T20:07:07.032+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:07.132+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:07.232+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:07.332+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:07.432+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:07.533+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:07.633+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:07.733+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:07.833+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:07.933+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:07.963+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:07:07.963+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:07:08.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:07:08.001+0000 D4 FTDC     [ftdc] full-time diagnostic data capture schema change: currrent document is longer than reference document
2020-10-02T20:07:08.034+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:08.134+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:08.234+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:08.334+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:08.434+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:08.535+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:08.635+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:08.735+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:08.835+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:08.935+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:08.963+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:07:08.963+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:07:09.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:07:09.035+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:09.136+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:09.236+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:09.336+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:09.436+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:09.536+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:09.636+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:09.737+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:09.837+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:09.937+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:09.963+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:07:09.963+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:07:10.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:07:10.037+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:10.138+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:10.238+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:10.338+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:10.438+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:10.538+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:10.638+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:10.739+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:10.839+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:10.939+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:10.963+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:07:10.963+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:07:11.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:07:11.039+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:11.139+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:11.239+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:11.339+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:11.440+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:11.540+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:11.640+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:11.740+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:11.840+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:11.940+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:11.963+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:07:11.963+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:07:12.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:07:12.041+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:12.141+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:12.241+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:12.341+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:12.441+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:12.541+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:12.641+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:12.742+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:12.842+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:12.942+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:12.963+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:07:12.963+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:07:13.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:07:13.042+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:13.142+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:13.243+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:13.343+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:13.443+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:13.543+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:13.643+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:13.743+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:13.844+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:13.944+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:13.963+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:07:13.963+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:07:14.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:07:14.044+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:14.144+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:14.244+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:14.344+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:14.444+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:14.545+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:14.645+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:14.745+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:14.845+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:14.945+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:14.963+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:07:14.963+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:07:15.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:07:15.045+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:15.146+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:15.246+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:15.346+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:15.446+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:15.546+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:15.647+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:15.747+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:15.847+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:15.947+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:15.963+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:07:15.963+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:07:16.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:07:16.047+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:16.147+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:16.247+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:16.348+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:16.448+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:16.548+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:16.648+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:16.748+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:16.848+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:16.948+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:16.963+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:07:16.963+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:07:17.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:07:17.049+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:17.149+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:17.249+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:17.349+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:17.449+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:17.549+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:17.649+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:17.750+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:17.850+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:17.950+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:17.963+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:07:17.963+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:07:18.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:07:18.050+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:18.150+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:18.250+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:18.351+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:18.451+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:18.551+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:18.651+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:18.751+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:18.851+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:18.952+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:18.963+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:07:18.963+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:07:19.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:07:19.052+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:19.152+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:19.252+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:19.352+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:19.453+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:19.553+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:19.653+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:19.753+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:19.853+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:19.954+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:19.963+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:07:19.963+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:07:20.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:07:20.054+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:20.154+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:20.254+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:20.355+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:20.455+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:20.555+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:20.655+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:20.755+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:20.855+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:20.955+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:20.963+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:07:20.963+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:07:21.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:07:21.056+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:21.156+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:21.256+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:21.356+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:21.456+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:21.556+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:21.656+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:21.757+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:21.857+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:21.957+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:21.963+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:07:21.963+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:07:22.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:07:22.057+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:22.157+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:22.257+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:22.357+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:22.458+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:22.558+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:07:22.624+0000 I  CONTROL  [signalProcessingThread] got signal 2 (Interrupt), will terminate after current cmd ends
2020-10-02T20:07:22.624+0000 D1 -        [signalProcessingThread] User Assertion: NotMaster: not primary so can't step down src/mongo/db/repl/replication_coordinator_impl.cpp 2062
2020-10-02T20:07:22.624+0000 D1 QUERY    [signalProcessingThread] received interrupt request for unknown op: 2  known ops: 
2020-10-02T20:07:22.624+0000 D1 -        [waitForMajority] User Assertion: InterruptedAtShutdown: operation was interrupted src/mongo/util/interruptible.h 333
2020-10-02T20:07:22.624+0000 D1 SHARDING [waitForMajority] Unable to wait for new op time due to: InterruptedAtShutdown: operation was interrupted
2020-10-02T20:07:22.624+0000 D2 -        [signalProcessingThread] Stopping periodic job LogicalSessionCacheRefresh
2020-10-02T20:07:22.624+0000 D2 -        [signalProcessingThread] Stopping periodic job LogicalSessionCacheReap
2020-10-02T20:07:22.624+0000 I  NETWORK  [signalProcessingThread] shutdown: going to close listening sockets...
2020-10-02T20:07:22.624+0000 I  NETWORK  [listener] removing socket file: /tmp/mongodb-27000.sock
2020-10-02T20:07:22.624+0000 I  -        [signalProcessingThread] Stopping further Flow Control ticket acquisitions.
2020-10-02T20:07:22.624+0000 D2 -        [signalProcessingThread] Stopping periodic job abortExpiredTransactions
2020-10-02T20:07:22.625+0000 D2 -        [signalProcessingThread] Stopping periodic job startPeriodicThreadToDecreaseSnapshotHistoryCachePressure
2020-10-02T20:07:22.625+0000 D1 QUERY    [signalProcessingThread] received interrupt request for unknown op: 47  known ops: 
2020-10-02T20:07:22.625+0000 D2 WRITE    [signalProcessingThread] Beginning scanSessions. Scanning 0 sessions.
2020-10-02T20:07:22.625+0000 I  FTDC     [signalProcessingThread] Shutting down full-time diagnostic data capture
2020-10-02T20:07:22.626+0000 I  STORAGE  [signalProcessingThread] Deregistering all the collections
2020-10-02T20:07:22.626+0000 D1 STORAGE  [signalProcessingThread] Deregistering collection admin.system.users with UUID afe8728a-bcfa-4477-b0ae-3a6884f97746
2020-10-02T20:07:22.626+0000 D1 STORAGE  [signalProcessingThread] ~WiredTigerRecordStore for: admin.system.users
2020-10-02T20:07:22.626+0000 D1 STORAGE  [signalProcessingThread] Deregistering collection movies.movies with UUID 77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a
2020-10-02T20:07:22.626+0000 D1 STORAGE  [signalProcessingThread] ~WiredTigerRecordStore for: movies.movies
2020-10-02T20:07:22.626+0000 D1 STORAGE  [signalProcessingThread] Deregistering collection admin.system.version with UUID 0d876cab-c7c4-40a4-90c6-c23dd6e3b179
2020-10-02T20:07:22.626+0000 D1 STORAGE  [signalProcessingThread] ~WiredTigerRecordStore for: admin.system.version
2020-10-02T20:07:22.626+0000 D1 STORAGE  [signalProcessingThread] Deregistering collection test.inventory with UUID 66dd6c2e-e14a-4284-a2a5-a7574ac1fd74
2020-10-02T20:07:22.626+0000 D1 STORAGE  [signalProcessingThread] ~WiredTigerRecordStore for: test.inventory
2020-10-02T20:07:22.627+0000 D1 STORAGE  [signalProcessingThread] Deregistering collection config.system.sessions with UUID fbf72919-58ff-41f2-ba34-93b2acda7d24
2020-10-02T20:07:22.627+0000 D1 STORAGE  [signalProcessingThread] ~WiredTigerRecordStore for: config.system.sessions
2020-10-02T20:07:22.627+0000 D1 STORAGE  [signalProcessingThread] Deregistering collection local.startup_log with UUID 97fc5f31-0917-4d2e-a65c-606750d317e5
2020-10-02T20:07:22.627+0000 D1 STORAGE  [signalProcessingThread] ~WiredTigerRecordStore for: local.startup_log
2020-10-02T20:07:22.627+0000 D1 STORAGE  [signalProcessingThread] ~WiredTigerRecordStore for: _mdb_catalog
2020-10-02T20:07:22.627+0000 I  STORAGE  [signalProcessingThread] Timestamp monitor shutting down
2020-10-02T20:07:22.627+0000 D2 -        [signalProcessingThread] Stopping periodic job TimestampMonitor
2020-10-02T20:07:22.627+0000 I  STORAGE  [signalProcessingThread] WiredTigerKVEngine shutting down
2020-10-02T20:07:22.627+0000 D2 STORAGE  [signalProcessingThread] WiredTigerSizeStorer::flush table:local/collection/2--2310914167168443545 -> { numRecords: 75, dataSize: 156002 }
2020-10-02T20:07:22.627+0000 D2 STORAGE  [signalProcessingThread] WiredTigerSizeStorer flush took 624 µs
2020-10-02T20:07:22.627+0000 I  STORAGE  [signalProcessingThread] Shutting down session sweeper thread
2020-10-02T20:07:22.627+0000 D1 STORAGE  [WTIdleSessionSweeper] stopping WTIdleSessionSweeper thread
2020-10-02T20:07:22.627+0000 I  STORAGE  [signalProcessingThread] Finished shutting down session sweeper thread
2020-10-02T20:07:22.627+0000 I  STORAGE  [signalProcessingThread] Shutting down journal flusher thread
2020-10-02T20:07:22.658+0000 D1 STORAGE  [WTJournalFlusher] stopping WTJournalFlusher thread
2020-10-02T20:07:22.658+0000 I  STORAGE  [signalProcessingThread] Finished shutting down journal flusher thread
2020-10-02T20:07:22.658+0000 I  STORAGE  [signalProcessingThread] Shutting down checkpoint thread
2020-10-02T20:07:22.658+0000 D1 STORAGE  [WTCheckpointThread] stopping WTCheckpointThread thread
2020-10-02T20:07:22.658+0000 I  STORAGE  [signalProcessingThread] Finished shutting down checkpoint thread
2020-10-02T20:07:22.658+0000 D2 RECOVERY [signalProcessingThread] Shutdown timestamps. StableTimestamp: 0 Initial data timestamp: 0
2020-10-02T20:07:22.671+0000 I  STORAGE  [signalProcessingThread] shutdown: removing fs lock...
2020-10-02T20:07:22.671+0000 I  CONTROL  [signalProcessingThread] now exiting
2020-10-02T20:07:22.671+0000 I  CONTROL  [signalProcessingThread] shutting down with code:0
2020-10-02T20:08:37.296+0000 I  CONTROL  [main] ***** SERVER RESTARTED *****
2020-10-02T20:08:37.300+0000 I  CONTROL  [main] Automatically disabling TLS 1.0, to force-enable TLS 1.0 specify --sslDisabledProtocols 'none'
2020-10-02T20:08:37.300+0000 W  ASIO     [main] No TransportLayer configured during NetworkInterface startup
2020-10-02T20:08:37.300+0000 D2 CONNPOOL [main] Controller for NetworkInterfaceTL-MongotExecutor is LimitController
2020-10-02T20:08:37.301+0000 D2 CONNPOOL [main] Controller for LDAP is LimitController
2020-10-02T20:08:37.302+0000 W  ASIO     [main] No TransportLayer configured during NetworkInterface startup
2020-10-02T20:08:37.302+0000 D2 CONNPOOL [main] Controller for NetworkInterfaceTL-Replication is LimitController
2020-10-02T20:08:37.302+0000 D1 NETWORK  [main] fd limit hard:4096 soft:1024 max conn: 819
2020-10-02T20:08:37.303+0000 I  CONTROL  [initandlisten] MongoDB starting : pid=23253 port=27000 dbpath=/home/bimongod/data/ 64-bit host=ip-172-16-42-253.lab.morganstanley.com
2020-10-02T20:08:37.303+0000 I  CONTROL  [initandlisten] db version v4.2.7
2020-10-02T20:08:37.303+0000 I  CONTROL  [initandlisten] git version: 51d9fe12b5d19720e72dcd7db0f2f17dd9a19212
2020-10-02T20:08:37.303+0000 I  CONTROL  [initandlisten] OpenSSL version: OpenSSL 1.0.1e-fips 11 Feb 2013
2020-10-02T20:08:37.303+0000 I  CONTROL  [initandlisten] allocator: tcmalloc
2020-10-02T20:08:37.303+0000 I  CONTROL  [initandlisten] modules: enterprise 
2020-10-02T20:08:37.303+0000 I  CONTROL  [initandlisten] build environment:
2020-10-02T20:08:37.303+0000 I  CONTROL  [initandlisten]     distmod: rhel70
2020-10-02T20:08:37.303+0000 I  CONTROL  [initandlisten]     distarch: x86_64
2020-10-02T20:08:37.303+0000 I  CONTROL  [initandlisten]     target_arch: x86_64
2020-10-02T20:08:37.303+0000 I  CONTROL  [initandlisten] options: { config: "mongod_nokrb.conf", net: { bindIp: "0.0.0.0", port: 27000 }, processManagement: { pidFilePath: "/home/bimongod/mongod.pid" }, storage: { dbPath: "/home/bimongod/data/", directoryPerDB: true, engine: "wiredTiger", wiredTiger: { engineConfig: { directoryForIndexes: true } } }, systemLog: { destination: "file", logAppend: true, path: "/home/bimongod/log/mongod_nokrb.log", verbosity: 4 } }
2020-10-02T20:08:37.303+0000 D1 NETWORK  [initandlisten] fd limit hard:4096 soft:1024 max conn: 819
2020-10-02T20:08:37.303+0000 D2 -        [initandlisten] Starting periodic job FlowControlRefresher
2020-10-02T20:08:37.303+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:08:37.303+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:08:37.303+0000 I  STORAGE  [initandlisten] wiredtiger_open config: create,cache_size=1352M,cache_overflow=(file_max=0M),session_max=33000,eviction=(threads_min=4,threads_max=4),config_base=false,statistics=(fast),log=(enabled=true,archive=true,path=journal,compressor=snappy),file_manager=(close_idle_time=100000,close_scan_interval=10,close_handle_minimum=250),statistics_log=(wait=0),verbose=[recovery_progress,checkpoint_progress,recovery],
2020-10-02T20:08:37.858+0000 I  STORAGE  [initandlisten] WiredTiger message [1601669317:858436][23253:0x7fbb82f44c80], txn-recover: Recovering file:WiredTiger.wt with id 0 @ (75, 5120)
2020-10-02T20:08:37.858+0000 I  STORAGE  [initandlisten] WiredTiger message [1601669317:858489][23253:0x7fbb82f44c80], txn-recover: Recovering log 75 through 76
2020-10-02T20:08:37.909+0000 I  STORAGE  [initandlisten] WiredTiger message [1601669317:909534][23253:0x7fbb82f44c80], txn-recover: Recovering log 76 through 76
2020-10-02T20:08:37.993+0000 I  STORAGE  [initandlisten] WiredTiger message [1601669317:993074][23253:0x7fbb82f44c80], txn-recover: Recovering file:WiredTigerLAS.wt with id 91 @ (1, 0)
2020-10-02T20:08:37.993+0000 I  STORAGE  [initandlisten] WiredTiger message [1601669317:993133][23253:0x7fbb82f44c80], txn-recover: Recovering file:_mdb_catalog.wt with id 3 @ (18, 12032)
2020-10-02T20:08:37.993+0000 I  STORAGE  [initandlisten] WiredTiger message [1601669317:993149][23253:0x7fbb82f44c80], txn-recover: Recovering file:admin/collection/0--2310914167168443545.wt with id 4 @ (7, 4864)
2020-10-02T20:08:37.993+0000 I  STORAGE  [initandlisten] WiredTiger message [1601669317:993163][23253:0x7fbb82f44c80], txn-recover: Recovering file:admin/collection/0--732801831392209623.wt with id 17 @ (61, 5248)
2020-10-02T20:08:37.993+0000 I  STORAGE  [initandlisten] WiredTiger message [1601669317:993176][23253:0x7fbb82f44c80], txn-recover: Recovering file:admin/index/1--2310914167168443545.wt with id 5 @ (7, 4864)
2020-10-02T20:08:37.993+0000 I  STORAGE  [initandlisten] WiredTiger message [1601669317:993189][23253:0x7fbb82f44c80], txn-recover: Recovering file:admin/index/1--732801831392209623.wt with id 18 @ (52, 6912)
2020-10-02T20:08:37.993+0000 I  STORAGE  [initandlisten] WiredTiger message [1601669317:993202][23253:0x7fbb82f44c80], txn-recover: Recovering file:admin/index/2--732801831392209623.wt with id 19 @ (52, 6912)
2020-10-02T20:08:37.993+0000 I  STORAGE  [initandlisten] WiredTiger message [1601669317:993214][23253:0x7fbb82f44c80], txn-recover: Recovering file:config/collection/4--2310914167168443545.wt with id 8 @ (64, 6784)
2020-10-02T20:08:37.993+0000 I  STORAGE  [initandlisten] WiredTiger message [1601669317:993227][23253:0x7fbb82f44c80], txn-recover: Recovering file:config/index/5--2310914167168443545.wt with id 9 @ (66, 6784)
2020-10-02T20:08:37.993+0000 I  STORAGE  [initandlisten] WiredTiger message [1601669317:993239][23253:0x7fbb82f44c80], txn-recover: Recovering file:config/index/6--2310914167168443545.wt with id 10 @ (74, 4992)
2020-10-02T20:08:37.993+0000 I  STORAGE  [initandlisten] WiredTiger message [1601669317:993252][23253:0x7fbb82f44c80], txn-recover: Recovering file:local/collection/2--2310914167168443545.wt with id 6 @ (75, 3584)
2020-10-02T20:08:37.993+0000 I  STORAGE  [initandlisten] WiredTiger message [1601669317:993264][23253:0x7fbb82f44c80], txn-recover: Recovering file:local/index/3--2310914167168443545.wt with id 7 @ (75, 3584)
2020-10-02T20:08:37.993+0000 I  STORAGE  [initandlisten] WiredTiger message [1601669317:993276][23253:0x7fbb82f44c80], txn-recover: Recovering file:movies/collection/0-5928759223889663863.wt with id 33 @ (18, 12032)
2020-10-02T20:08:37.993+0000 I  STORAGE  [initandlisten] WiredTiger message [1601669317:993289][23253:0x7fbb82f44c80], txn-recover: Recovering file:movies/index/1-5928759223889663863.wt with id 34 @ (18, 12032)
2020-10-02T20:08:37.993+0000 I  STORAGE  [initandlisten] WiredTiger message [1601669317:993301][23253:0x7fbb82f44c80], txn-recover: Recovering file:sizeStorer.wt with id 2 @ (75, 3584)
2020-10-02T20:08:37.993+0000 I  STORAGE  [initandlisten] WiredTiger message [1601669317:993320][23253:0x7fbb82f44c80], txn-recover: Recovering file:test/collection/0-3817864913425832323.wt with id 21 @ (8, 8448)
2020-10-02T20:08:37.993+0000 I  STORAGE  [initandlisten] WiredTiger message [1601669317:993332][23253:0x7fbb82f44c80], txn-recover: Recovering file:test/index/1-3817864913425832323.wt with id 22 @ (8, 8448)
2020-10-02T20:08:37.993+0000 I  STORAGE  [initandlisten] WiredTiger message [1601669317:993340][23253:0x7fbb82f44c80], txn-recover: Main recovery loop: starting at 75/5248 to 76/256
2020-10-02T20:08:38.087+0000 I  STORAGE  [initandlisten] WiredTiger message [1601669318:87606][23253:0x7fbb82f44c80], txn-recover: Recovering log 75 through 76
2020-10-02T20:08:38.146+0000 I  STORAGE  [initandlisten] WiredTiger message [1601669318:146048][23253:0x7fbb82f44c80], txn-recover: Recovering log 76 through 76
2020-10-02T20:08:38.193+0000 I  STORAGE  [initandlisten] WiredTiger message [1601669318:193873][23253:0x7fbb82f44c80], txn-recover: Set global recovery timestamp: (0, 0)
2020-10-02T20:08:38.205+0000 I  RECOVERY [initandlisten] WiredTiger recoveryTimestamp. Ts: Timestamp(0, 0)
2020-10-02T20:08:38.205+0000 D1 COMMAND  [WTIdleSessionSweeper] BackgroundJob starting: WTIdleSessionSweeper
2020-10-02T20:08:38.205+0000 D1 STORAGE  [WTIdleSessionSweeper] starting WTIdleSessionSweeper thread
2020-10-02T20:08:38.205+0000 D1 COMMAND  [WTJournalFlusher] BackgroundJob starting: WTJournalFlusher
2020-10-02T20:08:38.206+0000 D1 STORAGE  [WTJournalFlusher] starting WTJournalFlusher thread
2020-10-02T20:08:38.206+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:38.206+0000 D1 COMMAND  [WTCheckpointThread] BackgroundJob starting: WTCheckpointThread
2020-10-02T20:08:38.206+0000 D1 STORAGE  [WTCheckpointThread] starting WTCheckpointThread thread
2020-10-02T20:08:38.207+0000 D3 STORAGE  [initandlisten] WT begin_transaction for snapshot id 1
2020-10-02T20:08:38.207+0000 D2 STORAGE  [initandlisten] WiredTigerUtil::checkApplicationMetadataFormatVersion  uri: table:_mdb_catalog ok range 1 -> 1 current: 1
2020-10-02T20:08:38.207+0000 D2 STORAGE  [initandlisten] WiredTigerSizeStorer::load table:_mdb_catalog -> { numRecords: 7, dataSize: 3611 }
2020-10-02T20:08:38.207+0000 D2 RECOVERY [initandlisten] loadCatalog:
2020-10-02T20:08:38.208+0000 D2 RECOVERY [initandlisten] 	Id: RecordId(1) Value: { md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--2310914167168443545" }, ns: "admin.system.version", ident: "admin/collection/0--2310914167168443545" }
2020-10-02T20:08:38.208+0000 D2 RECOVERY [initandlisten] 	Id: RecordId(2) Value: { isFeatureDoc: true, ns: null, nonRepairable: 0, repairable: 1 }
2020-10-02T20:08:38.208+0000 D2 RECOVERY [initandlisten] 	Id: RecordId(3) Value: { md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "local/index/3--2310914167168443545" }, ns: "local.startup_log", ident: "local/collection/2--2310914167168443545" }
2020-10-02T20:08:38.208+0000 D2 RECOVERY [initandlisten] 	Id: RecordId(4) Value: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:08:38.208+0000 D2 RECOVERY [initandlisten] 	Id: RecordId(5) Value: { md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--732801831392209623", user_1_db_1: "admin/index/2--732801831392209623" }, ns: "admin.system.users", ident: "admin/collection/0--732801831392209623" }
2020-10-02T20:08:38.208+0000 D2 RECOVERY [initandlisten] 	Id: RecordId(6) Value: { md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "test/index/1-3817864913425832323" }, ns: "test.inventory", ident: "test/collection/0-3817864913425832323" }
2020-10-02T20:08:38.208+0000 D2 RECOVERY [initandlisten] 	Id: RecordId(7) Value: { md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "movies/index/1-5928759223889663863" }, ns: "movies.movies", ident: "movies/collection/0-5928759223889663863" }
2020-10-02T20:08:38.208+0000 D3 STORAGE  [initandlisten] WT rollback_transaction for snapshot id 1
2020-10-02T20:08:38.208+0000 D3 STORAGE  [initandlisten] WT begin_transaction for snapshot id 2
2020-10-02T20:08:38.208+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.users @ RecordId(5)
2020-10-02T20:08:38.208+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--732801831392209623", user_1_db_1: "admin/index/2--732801831392209623" }, ns: "admin.system.users", ident: "admin/collection/0--732801831392209623" }
2020-10-02T20:08:38.208+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.208+0000 D2 STORAGE  [initandlisten] WiredTigerUtil::checkApplicationMetadataFormatVersion  uri: table:admin/collection/0--732801831392209623 ok range 1 -> 1 current: 1
2020-10-02T20:08:38.208+0000 D2 STORAGE  [initandlisten] WiredTigerSizeStorer::load table:admin/collection/0--732801831392209623 -> { numRecords: 6, dataSize: 1901 }
2020-10-02T20:08:38.208+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.users @ RecordId(5)
2020-10-02T20:08:38.208+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--732801831392209623", user_1_db_1: "admin/index/2--732801831392209623" }, ns: "admin.system.users", ident: "admin/collection/0--732801831392209623" }
2020-10-02T20:08:38.208+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.208+0000 D1 STORAGE  [initandlisten] Registering collection admin.system.users with UUID afe8728a-bcfa-4477-b0ae-3a6884f97746
2020-10-02T20:08:38.208+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.users @ RecordId(5)
2020-10-02T20:08:38.208+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--732801831392209623", user_1_db_1: "admin/index/2--732801831392209623" }, ns: "admin.system.users", ident: "admin/collection/0--732801831392209623" }
2020-10-02T20:08:38.208+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.208+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.version @ RecordId(1)
2020-10-02T20:08:38.208+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--2310914167168443545" }, ns: "admin.system.version", ident: "admin/collection/0--2310914167168443545" }
2020-10-02T20:08:38.208+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.208+0000 D2 STORAGE  [initandlisten] WiredTigerUtil::checkApplicationMetadataFormatVersion  uri: table:admin/collection/0--2310914167168443545 ok range 1 -> 1 current: 1
2020-10-02T20:08:38.209+0000 D2 STORAGE  [initandlisten] WiredTigerSizeStorer::load table:admin/collection/0--2310914167168443545 -> { numRecords: 2, dataSize: 104 }
2020-10-02T20:08:38.209+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.version @ RecordId(1)
2020-10-02T20:08:38.209+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--2310914167168443545" }, ns: "admin.system.version", ident: "admin/collection/0--2310914167168443545" }
2020-10-02T20:08:38.209+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.209+0000 D1 STORAGE  [initandlisten] Registering collection admin.system.version with UUID 0d876cab-c7c4-40a4-90c6-c23dd6e3b179
2020-10-02T20:08:38.209+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.version @ RecordId(1)
2020-10-02T20:08:38.209+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--2310914167168443545" }, ns: "admin.system.version", ident: "admin/collection/0--2310914167168443545" }
2020-10-02T20:08:38.209+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.209+0000 D3 STORAGE  [initandlisten] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:08:38.209+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:08:38.209+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.209+0000 D2 STORAGE  [initandlisten] WiredTigerUtil::checkApplicationMetadataFormatVersion  uri: table:config/collection/4--2310914167168443545 ok range 1 -> 1 current: 1
2020-10-02T20:08:38.209+0000 D2 STORAGE  [initandlisten] WiredTigerSizeStorer::load table:config/collection/4--2310914167168443545 -> { numRecords: 0, dataSize: 0 }
2020-10-02T20:08:38.209+0000 D3 STORAGE  [initandlisten] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:08:38.209+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:08:38.209+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.209+0000 D1 STORAGE  [initandlisten] Registering collection config.system.sessions with UUID fbf72919-58ff-41f2-ba34-93b2acda7d24
2020-10-02T20:08:38.209+0000 D3 STORAGE  [initandlisten] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:08:38.209+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:08:38.209+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.209+0000 D3 STORAGE  [initandlisten] looking up metadata for: local.startup_log @ RecordId(3)
2020-10-02T20:08:38.209+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "local/index/3--2310914167168443545" }, ns: "local.startup_log", ident: "local/collection/2--2310914167168443545" }
2020-10-02T20:08:38.209+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.209+0000 D2 STORAGE  [initandlisten] WiredTigerUtil::checkApplicationMetadataFormatVersion  uri: table:local/collection/2--2310914167168443545 ok range 1 -> 1 current: 1
2020-10-02T20:08:38.209+0000 D2 STORAGE  [initandlisten] WiredTigerSizeStorer::load table:local/collection/2--2310914167168443545 -> { numRecords: 75, dataSize: 156002 }
2020-10-02T20:08:38.209+0000 D3 STORAGE  [initandlisten] looking up metadata for: local.startup_log @ RecordId(3)
2020-10-02T20:08:38.209+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "local/index/3--2310914167168443545" }, ns: "local.startup_log", ident: "local/collection/2--2310914167168443545" }
2020-10-02T20:08:38.209+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.209+0000 D1 STORAGE  [initandlisten] Registering collection local.startup_log with UUID 97fc5f31-0917-4d2e-a65c-606750d317e5
2020-10-02T20:08:38.209+0000 D3 STORAGE  [initandlisten] looking up metadata for: local.startup_log @ RecordId(3)
2020-10-02T20:08:38.209+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "local/index/3--2310914167168443545" }, ns: "local.startup_log", ident: "local/collection/2--2310914167168443545" }
2020-10-02T20:08:38.209+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.209+0000 D3 STORAGE  [initandlisten] looking up metadata for: movies.movies @ RecordId(7)
2020-10-02T20:08:38.209+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "movies/index/1-5928759223889663863" }, ns: "movies.movies", ident: "movies/collection/0-5928759223889663863" }
2020-10-02T20:08:38.209+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.209+0000 D2 STORAGE  [initandlisten] WiredTigerUtil::checkApplicationMetadataFormatVersion  uri: table:movies/collection/0-5928759223889663863 ok range 1 -> 1 current: 1
2020-10-02T20:08:38.210+0000 D2 STORAGE  [initandlisten] WiredTigerSizeStorer::load table:movies/collection/0-5928759223889663863 -> { numRecords: 3, dataSize: 128 }
2020-10-02T20:08:38.210+0000 D3 STORAGE  [initandlisten] looking up metadata for: movies.movies @ RecordId(7)
2020-10-02T20:08:38.210+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "movies/index/1-5928759223889663863" }, ns: "movies.movies", ident: "movies/collection/0-5928759223889663863" }
2020-10-02T20:08:38.210+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.210+0000 D1 STORAGE  [initandlisten] Registering collection movies.movies with UUID 77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a
2020-10-02T20:08:38.210+0000 D3 STORAGE  [initandlisten] looking up metadata for: movies.movies @ RecordId(7)
2020-10-02T20:08:38.210+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "movies/index/1-5928759223889663863" }, ns: "movies.movies", ident: "movies/collection/0-5928759223889663863" }
2020-10-02T20:08:38.210+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.210+0000 D3 STORAGE  [initandlisten] looking up metadata for: test.inventory @ RecordId(6)
2020-10-02T20:08:38.210+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "test/index/1-3817864913425832323" }, ns: "test.inventory", ident: "test/collection/0-3817864913425832323" }
2020-10-02T20:08:38.210+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.210+0000 D2 STORAGE  [initandlisten] WiredTigerUtil::checkApplicationMetadataFormatVersion  uri: table:test/collection/0-3817864913425832323 ok range 1 -> 1 current: 1
2020-10-02T20:08:38.210+0000 D2 STORAGE  [initandlisten] WiredTigerSizeStorer::load table:test/collection/0-3817864913425832323 -> { numRecords: 1, dataSize: 122 }
2020-10-02T20:08:38.210+0000 D3 STORAGE  [initandlisten] looking up metadata for: test.inventory @ RecordId(6)
2020-10-02T20:08:38.210+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "test/index/1-3817864913425832323" }, ns: "test.inventory", ident: "test/collection/0-3817864913425832323" }
2020-10-02T20:08:38.210+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.210+0000 D1 STORAGE  [initandlisten] Registering collection test.inventory with UUID 66dd6c2e-e14a-4284-a2a5-a7574ac1fd74
2020-10-02T20:08:38.210+0000 D3 STORAGE  [initandlisten] looking up metadata for: test.inventory @ RecordId(6)
2020-10-02T20:08:38.210+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "test/index/1-3817864913425832323" }, ns: "test.inventory", ident: "test/collection/0-3817864913425832323" }
2020-10-02T20:08:38.210+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.210+0000 D3 STORAGE  [initandlisten] WT rollback_transaction for snapshot id 2
2020-10-02T20:08:38.210+0000 I  STORAGE  [initandlisten] Timestamp monitor starting
2020-10-02T20:08:38.210+0000 D2 -        [initandlisten] Starting periodic job TimestampMonitor
2020-10-02T20:08:38.211+0000 D1 STORAGE  [initandlisten] flushing directory /home/bimongod/data
2020-10-02T20:08:38.211+0000 I  CONTROL  [initandlisten] 
2020-10-02T20:08:38.211+0000 I  CONTROL  [initandlisten] ** WARNING: Access control is not enabled for the database.
2020-10-02T20:08:38.211+0000 I  CONTROL  [initandlisten] **          Read and write access to data and configuration is unrestricted.
2020-10-02T20:08:38.211+0000 I  CONTROL  [initandlisten] 
2020-10-02T20:08:38.212+0000 I  CONTROL  [initandlisten] 
2020-10-02T20:08:38.212+0000 I  CONTROL  [initandlisten] ** WARNING: /sys/kernel/mm/transparent_hugepage/enabled is 'always'.
2020-10-02T20:08:38.212+0000 I  CONTROL  [initandlisten] **        We suggest setting it to 'never'
2020-10-02T20:08:38.212+0000 I  CONTROL  [initandlisten] 
2020-10-02T20:08:38.212+0000 I  CONTROL  [initandlisten] ** WARNING: /sys/kernel/mm/transparent_hugepage/defrag is 'always'.
2020-10-02T20:08:38.212+0000 I  CONTROL  [initandlisten] **        We suggest setting it to 'never'
2020-10-02T20:08:38.212+0000 I  CONTROL  [initandlisten] 
2020-10-02T20:08:38.212+0000 D1 COMMAND  [SNMPAgent] BackgroundJob starting: SNMPAgent
2020-10-02T20:08:38.212+0000 D1 NETWORK  [SNMPAgent] SNMPAgent not enabled
2020-10-02T20:08:38.212+0000 D3 STORAGE  [initandlisten] WT begin_transaction for snapshot id 4
2020-10-02T20:08:38.212+0000 D2 RECOVERY [initandlisten] Reconciling collection and index idents.
2020-10-02T20:08:38.212+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.users @ RecordId(5)
2020-10-02T20:08:38.212+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--732801831392209623", user_1_db_1: "admin/index/2--732801831392209623" }, ns: "admin.system.users", ident: "admin/collection/0--732801831392209623" }
2020-10-02T20:08:38.212+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.212+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.users @ RecordId(5)
2020-10-02T20:08:38.212+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.users @ RecordId(5)
2020-10-02T20:08:38.212+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.version @ RecordId(1)
2020-10-02T20:08:38.212+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--2310914167168443545" }, ns: "admin.system.version", ident: "admin/collection/0--2310914167168443545" }
2020-10-02T20:08:38.212+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.212+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.version @ RecordId(1)
2020-10-02T20:08:38.212+0000 D3 STORAGE  [initandlisten] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:08:38.212+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:08:38.212+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.212+0000 D3 STORAGE  [initandlisten] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:08:38.212+0000 D3 STORAGE  [initandlisten] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:08:38.212+0000 D3 STORAGE  [initandlisten] looking up metadata for: local.startup_log @ RecordId(3)
2020-10-02T20:08:38.212+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "local/index/3--2310914167168443545" }, ns: "local.startup_log", ident: "local/collection/2--2310914167168443545" }
2020-10-02T20:08:38.212+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.212+0000 D3 STORAGE  [initandlisten] looking up metadata for: local.startup_log @ RecordId(3)
2020-10-02T20:08:38.212+0000 D3 STORAGE  [initandlisten] looking up metadata for: movies.movies @ RecordId(7)
2020-10-02T20:08:38.212+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "movies/index/1-5928759223889663863" }, ns: "movies.movies", ident: "movies/collection/0-5928759223889663863" }
2020-10-02T20:08:38.212+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.212+0000 D3 STORAGE  [initandlisten] looking up metadata for: movies.movies @ RecordId(7)
2020-10-02T20:08:38.212+0000 D3 STORAGE  [initandlisten] looking up metadata for: test.inventory @ RecordId(6)
2020-10-02T20:08:38.212+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "test/index/1-3817864913425832323" }, ns: "test.inventory", ident: "test/collection/0-3817864913425832323" }
2020-10-02T20:08:38.212+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.212+0000 D3 STORAGE  [initandlisten] looking up metadata for: test.inventory @ RecordId(6)
2020-10-02T20:08:38.212+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.version @ RecordId(1)
2020-10-02T20:08:38.212+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--2310914167168443545" }, ns: "admin.system.version", ident: "admin/collection/0--2310914167168443545" }
2020-10-02T20:08:38.212+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.212+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.version @ RecordId(1)
2020-10-02T20:08:38.212+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--2310914167168443545" }, ns: "admin.system.version", ident: "admin/collection/0--2310914167168443545" }
2020-10-02T20:08:38.212+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.212+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.version @ RecordId(1)
2020-10-02T20:08:38.212+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--2310914167168443545" }, ns: "admin.system.version", ident: "admin/collection/0--2310914167168443545" }
2020-10-02T20:08:38.212+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.212+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.version @ RecordId(1)
2020-10-02T20:08:38.212+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--2310914167168443545" }, ns: "admin.system.version", ident: "admin/collection/0--2310914167168443545" }
2020-10-02T20:08:38.212+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.212+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.version @ RecordId(1)
2020-10-02T20:08:38.212+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--2310914167168443545" }, ns: "admin.system.version", ident: "admin/collection/0--2310914167168443545" }
2020-10-02T20:08:38.212+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.212+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.version @ RecordId(1)
2020-10-02T20:08:38.212+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--2310914167168443545" }, ns: "admin.system.version", ident: "admin/collection/0--2310914167168443545" }
2020-10-02T20:08:38.212+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.212+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.version @ RecordId(1)
2020-10-02T20:08:38.212+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--2310914167168443545" }, ns: "admin.system.version", ident: "admin/collection/0--2310914167168443545" }
2020-10-02T20:08:38.212+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.212+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.version @ RecordId(1)
2020-10-02T20:08:38.212+0000 D2 STORAGE  [initandlisten] WiredTigerUtil::checkApplicationMetadataFormatVersion  uri: table:admin/index/1--2310914167168443545 ok range 6 -> 12 current: 8
2020-10-02T20:08:38.213+0000 D1 STORAGE  [initandlisten] admin.system.version: clearing plan cache - collection info cache reset
2020-10-02T20:08:38.213+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.users @ RecordId(5)
2020-10-02T20:08:38.213+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--732801831392209623", user_1_db_1: "admin/index/2--732801831392209623" }, ns: "admin.system.users", ident: "admin/collection/0--732801831392209623" }
2020-10-02T20:08:38.213+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.213+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.users @ RecordId(5)
2020-10-02T20:08:38.213+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--732801831392209623", user_1_db_1: "admin/index/2--732801831392209623" }, ns: "admin.system.users", ident: "admin/collection/0--732801831392209623" }
2020-10-02T20:08:38.213+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.213+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.users @ RecordId(5)
2020-10-02T20:08:38.213+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--732801831392209623", user_1_db_1: "admin/index/2--732801831392209623" }, ns: "admin.system.users", ident: "admin/collection/0--732801831392209623" }
2020-10-02T20:08:38.213+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.213+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.users @ RecordId(5)
2020-10-02T20:08:38.213+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--732801831392209623", user_1_db_1: "admin/index/2--732801831392209623" }, ns: "admin.system.users", ident: "admin/collection/0--732801831392209623" }
2020-10-02T20:08:38.213+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.213+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.users @ RecordId(5)
2020-10-02T20:08:38.213+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--732801831392209623", user_1_db_1: "admin/index/2--732801831392209623" }, ns: "admin.system.users", ident: "admin/collection/0--732801831392209623" }
2020-10-02T20:08:38.213+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.213+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.users @ RecordId(5)
2020-10-02T20:08:38.213+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--732801831392209623", user_1_db_1: "admin/index/2--732801831392209623" }, ns: "admin.system.users", ident: "admin/collection/0--732801831392209623" }
2020-10-02T20:08:38.213+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.213+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.users @ RecordId(5)
2020-10-02T20:08:38.213+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--732801831392209623", user_1_db_1: "admin/index/2--732801831392209623" }, ns: "admin.system.users", ident: "admin/collection/0--732801831392209623" }
2020-10-02T20:08:38.213+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.213+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.users @ RecordId(5)
2020-10-02T20:08:38.213+0000 D2 STORAGE  [initandlisten] WiredTigerUtil::checkApplicationMetadataFormatVersion  uri: table:admin/index/1--732801831392209623 ok range 6 -> 12 current: 8
2020-10-02T20:08:38.213+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.users @ RecordId(5)
2020-10-02T20:08:38.213+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--732801831392209623", user_1_db_1: "admin/index/2--732801831392209623" }, ns: "admin.system.users", ident: "admin/collection/0--732801831392209623" }
2020-10-02T20:08:38.213+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.213+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.users @ RecordId(5)
2020-10-02T20:08:38.213+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--732801831392209623", user_1_db_1: "admin/index/2--732801831392209623" }, ns: "admin.system.users", ident: "admin/collection/0--732801831392209623" }
2020-10-02T20:08:38.213+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.213+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.users @ RecordId(5)
2020-10-02T20:08:38.213+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--732801831392209623", user_1_db_1: "admin/index/2--732801831392209623" }, ns: "admin.system.users", ident: "admin/collection/0--732801831392209623" }
2020-10-02T20:08:38.213+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.213+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.users @ RecordId(5)
2020-10-02T20:08:38.213+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--732801831392209623", user_1_db_1: "admin/index/2--732801831392209623" }, ns: "admin.system.users", ident: "admin/collection/0--732801831392209623" }
2020-10-02T20:08:38.213+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.213+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.users @ RecordId(5)
2020-10-02T20:08:38.213+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--732801831392209623", user_1_db_1: "admin/index/2--732801831392209623" }, ns: "admin.system.users", ident: "admin/collection/0--732801831392209623" }
2020-10-02T20:08:38.213+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.213+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.users @ RecordId(5)
2020-10-02T20:08:38.213+0000 D2 STORAGE  [initandlisten] WiredTigerUtil::checkApplicationMetadataFormatVersion  uri: table:admin/index/2--732801831392209623 ok range 6 -> 12 current: 12
2020-10-02T20:08:38.213+0000 D1 STORAGE  [initandlisten] admin.system.users: clearing plan cache - collection info cache reset
2020-10-02T20:08:38.213+0000 D1 -        [initandlisten] reloading view catalog for database admin
2020-10-02T20:08:38.214+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.version @ RecordId(1)
2020-10-02T20:08:38.214+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--2310914167168443545" }, ns: "admin.system.version", ident: "admin/collection/0--2310914167168443545" }
2020-10-02T20:08:38.214+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.214+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.version @ RecordId(1)
2020-10-02T20:08:38.214+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--2310914167168443545" }, ns: "admin.system.version", ident: "admin/collection/0--2310914167168443545" }
2020-10-02T20:08:38.214+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.214+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.version @ RecordId(1)
2020-10-02T20:08:38.214+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--2310914167168443545" }, ns: "admin.system.version", ident: "admin/collection/0--2310914167168443545" }
2020-10-02T20:08:38.214+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.214+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.users @ RecordId(5)
2020-10-02T20:08:38.214+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--732801831392209623", user_1_db_1: "admin/index/2--732801831392209623" }, ns: "admin.system.users", ident: "admin/collection/0--732801831392209623" }
2020-10-02T20:08:38.214+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.214+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.users @ RecordId(5)
2020-10-02T20:08:38.214+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--732801831392209623", user_1_db_1: "admin/index/2--732801831392209623" }, ns: "admin.system.users", ident: "admin/collection/0--732801831392209623" }
2020-10-02T20:08:38.214+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.214+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.users @ RecordId(5)
2020-10-02T20:08:38.214+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--732801831392209623", user_1_db_1: "admin/index/2--732801831392209623" }, ns: "admin.system.users", ident: "admin/collection/0--732801831392209623" }
2020-10-02T20:08:38.214+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.214+0000 D3 STORAGE  [initandlisten] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:08:38.214+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:08:38.214+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.214+0000 D3 STORAGE  [initandlisten] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:08:38.214+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:08:38.214+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.214+0000 D3 STORAGE  [initandlisten] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:08:38.214+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:08:38.214+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.214+0000 D3 STORAGE  [initandlisten] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:08:38.214+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:08:38.214+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.214+0000 D3 STORAGE  [initandlisten] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:08:38.214+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:08:38.214+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.214+0000 D3 STORAGE  [initandlisten] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:08:38.214+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:08:38.214+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.214+0000 D3 STORAGE  [initandlisten] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:08:38.214+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:08:38.214+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.214+0000 D3 STORAGE  [initandlisten] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:08:38.214+0000 D2 STORAGE  [initandlisten] WiredTigerUtil::checkApplicationMetadataFormatVersion  uri: table:config/index/5--2310914167168443545 ok range 6 -> 12 current: 8
2020-10-02T20:08:38.214+0000 D3 STORAGE  [initandlisten] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:08:38.214+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:08:38.214+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.214+0000 D3 STORAGE  [initandlisten] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:08:38.214+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:08:38.214+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.214+0000 D3 STORAGE  [initandlisten] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:08:38.214+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:08:38.214+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.214+0000 D3 STORAGE  [initandlisten] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:08:38.214+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:08:38.214+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.214+0000 D3 STORAGE  [initandlisten] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:08:38.214+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:08:38.214+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.214+0000 D3 STORAGE  [initandlisten] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:08:38.214+0000 D2 STORAGE  [initandlisten] WiredTigerUtil::checkApplicationMetadataFormatVersion  uri: table:config/index/6--2310914167168443545 ok range 6 -> 12 current: 8
2020-10-02T20:08:38.214+0000 D1 STORAGE  [initandlisten] config.system.sessions: clearing plan cache - collection info cache reset
2020-10-02T20:08:38.214+0000 D1 -        [initandlisten] reloading view catalog for database config
2020-10-02T20:08:38.214+0000 D3 STORAGE  [initandlisten] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:08:38.214+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:08:38.214+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.214+0000 D3 STORAGE  [initandlisten] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:08:38.214+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:08:38.214+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.214+0000 D3 STORAGE  [initandlisten] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:08:38.214+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:08:38.214+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.214+0000 D3 STORAGE  [initandlisten] looking up metadata for: local.startup_log @ RecordId(3)
2020-10-02T20:08:38.214+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "local/index/3--2310914167168443545" }, ns: "local.startup_log", ident: "local/collection/2--2310914167168443545" }
2020-10-02T20:08:38.214+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.215+0000 D3 STORAGE  [initandlisten] looking up metadata for: local.startup_log @ RecordId(3)
2020-10-02T20:08:38.215+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "local/index/3--2310914167168443545" }, ns: "local.startup_log", ident: "local/collection/2--2310914167168443545" }
2020-10-02T20:08:38.215+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.215+0000 D3 STORAGE  [initandlisten] looking up metadata for: local.startup_log @ RecordId(3)
2020-10-02T20:08:38.215+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "local/index/3--2310914167168443545" }, ns: "local.startup_log", ident: "local/collection/2--2310914167168443545" }
2020-10-02T20:08:38.215+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.215+0000 D3 STORAGE  [initandlisten] looking up metadata for: local.startup_log @ RecordId(3)
2020-10-02T20:08:38.215+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "local/index/3--2310914167168443545" }, ns: "local.startup_log", ident: "local/collection/2--2310914167168443545" }
2020-10-02T20:08:38.215+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.215+0000 D3 STORAGE  [initandlisten] looking up metadata for: local.startup_log @ RecordId(3)
2020-10-02T20:08:38.215+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "local/index/3--2310914167168443545" }, ns: "local.startup_log", ident: "local/collection/2--2310914167168443545" }
2020-10-02T20:08:38.215+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.215+0000 D3 STORAGE  [initandlisten] looking up metadata for: local.startup_log @ RecordId(3)
2020-10-02T20:08:38.215+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "local/index/3--2310914167168443545" }, ns: "local.startup_log", ident: "local/collection/2--2310914167168443545" }
2020-10-02T20:08:38.215+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.215+0000 D3 STORAGE  [initandlisten] looking up metadata for: local.startup_log @ RecordId(3)
2020-10-02T20:08:38.215+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "local/index/3--2310914167168443545" }, ns: "local.startup_log", ident: "local/collection/2--2310914167168443545" }
2020-10-02T20:08:38.215+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.215+0000 D3 STORAGE  [initandlisten] looking up metadata for: local.startup_log @ RecordId(3)
2020-10-02T20:08:38.215+0000 D2 STORAGE  [initandlisten] WiredTigerUtil::checkApplicationMetadataFormatVersion  uri: table:local/index/3--2310914167168443545 ok range 6 -> 12 current: 8
2020-10-02T20:08:38.215+0000 D1 STORAGE  [initandlisten] local.startup_log: clearing plan cache - collection info cache reset
2020-10-02T20:08:38.215+0000 D1 -        [initandlisten] reloading view catalog for database local
2020-10-02T20:08:38.215+0000 D3 STORAGE  [initandlisten] looking up metadata for: local.startup_log @ RecordId(3)
2020-10-02T20:08:38.215+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "local/index/3--2310914167168443545" }, ns: "local.startup_log", ident: "local/collection/2--2310914167168443545" }
2020-10-02T20:08:38.215+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.215+0000 D3 STORAGE  [initandlisten] looking up metadata for: movies.movies @ RecordId(7)
2020-10-02T20:08:38.215+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "movies/index/1-5928759223889663863" }, ns: "movies.movies", ident: "movies/collection/0-5928759223889663863" }
2020-10-02T20:08:38.215+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.215+0000 D3 STORAGE  [initandlisten] looking up metadata for: movies.movies @ RecordId(7)
2020-10-02T20:08:38.215+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "movies/index/1-5928759223889663863" }, ns: "movies.movies", ident: "movies/collection/0-5928759223889663863" }
2020-10-02T20:08:38.215+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.215+0000 D3 STORAGE  [initandlisten] looking up metadata for: movies.movies @ RecordId(7)
2020-10-02T20:08:38.215+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "movies/index/1-5928759223889663863" }, ns: "movies.movies", ident: "movies/collection/0-5928759223889663863" }
2020-10-02T20:08:38.215+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.215+0000 D3 STORAGE  [initandlisten] looking up metadata for: movies.movies @ RecordId(7)
2020-10-02T20:08:38.215+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "movies/index/1-5928759223889663863" }, ns: "movies.movies", ident: "movies/collection/0-5928759223889663863" }
2020-10-02T20:08:38.215+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.215+0000 D3 STORAGE  [initandlisten] looking up metadata for: movies.movies @ RecordId(7)
2020-10-02T20:08:38.215+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "movies/index/1-5928759223889663863" }, ns: "movies.movies", ident: "movies/collection/0-5928759223889663863" }
2020-10-02T20:08:38.215+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.215+0000 D3 STORAGE  [initandlisten] looking up metadata for: movies.movies @ RecordId(7)
2020-10-02T20:08:38.215+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "movies/index/1-5928759223889663863" }, ns: "movies.movies", ident: "movies/collection/0-5928759223889663863" }
2020-10-02T20:08:38.215+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.215+0000 D3 STORAGE  [initandlisten] looking up metadata for: movies.movies @ RecordId(7)
2020-10-02T20:08:38.215+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "movies/index/1-5928759223889663863" }, ns: "movies.movies", ident: "movies/collection/0-5928759223889663863" }
2020-10-02T20:08:38.215+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.215+0000 D3 STORAGE  [initandlisten] looking up metadata for: movies.movies @ RecordId(7)
2020-10-02T20:08:38.215+0000 D2 STORAGE  [initandlisten] WiredTigerUtil::checkApplicationMetadataFormatVersion  uri: table:movies/index/1-5928759223889663863 ok range 6 -> 12 current: 8
2020-10-02T20:08:38.215+0000 D1 STORAGE  [initandlisten] movies.movies: clearing plan cache - collection info cache reset
2020-10-02T20:08:38.215+0000 D1 -        [initandlisten] reloading view catalog for database movies
2020-10-02T20:08:38.215+0000 D3 STORAGE  [initandlisten] looking up metadata for: movies.movies @ RecordId(7)
2020-10-02T20:08:38.215+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "movies/index/1-5928759223889663863" }, ns: "movies.movies", ident: "movies/collection/0-5928759223889663863" }
2020-10-02T20:08:38.215+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.215+0000 D3 STORAGE  [initandlisten] looking up metadata for: movies.movies @ RecordId(7)
2020-10-02T20:08:38.215+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "movies/index/1-5928759223889663863" }, ns: "movies.movies", ident: "movies/collection/0-5928759223889663863" }
2020-10-02T20:08:38.215+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.215+0000 D3 STORAGE  [initandlisten] looking up metadata for: movies.movies @ RecordId(7)
2020-10-02T20:08:38.215+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "movies/index/1-5928759223889663863" }, ns: "movies.movies", ident: "movies/collection/0-5928759223889663863" }
2020-10-02T20:08:38.215+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.215+0000 D3 STORAGE  [initandlisten] looking up metadata for: test.inventory @ RecordId(6)
2020-10-02T20:08:38.215+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "test/index/1-3817864913425832323" }, ns: "test.inventory", ident: "test/collection/0-3817864913425832323" }
2020-10-02T20:08:38.215+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.215+0000 D3 STORAGE  [initandlisten] looking up metadata for: test.inventory @ RecordId(6)
2020-10-02T20:08:38.215+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "test/index/1-3817864913425832323" }, ns: "test.inventory", ident: "test/collection/0-3817864913425832323" }
2020-10-02T20:08:38.215+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.215+0000 D3 STORAGE  [initandlisten] looking up metadata for: test.inventory @ RecordId(6)
2020-10-02T20:08:38.215+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "test/index/1-3817864913425832323" }, ns: "test.inventory", ident: "test/collection/0-3817864913425832323" }
2020-10-02T20:08:38.215+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.215+0000 D3 STORAGE  [initandlisten] looking up metadata for: test.inventory @ RecordId(6)
2020-10-02T20:08:38.215+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "test/index/1-3817864913425832323" }, ns: "test.inventory", ident: "test/collection/0-3817864913425832323" }
2020-10-02T20:08:38.215+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.215+0000 D3 STORAGE  [initandlisten] looking up metadata for: test.inventory @ RecordId(6)
2020-10-02T20:08:38.215+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "test/index/1-3817864913425832323" }, ns: "test.inventory", ident: "test/collection/0-3817864913425832323" }
2020-10-02T20:08:38.215+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.215+0000 D3 STORAGE  [initandlisten] looking up metadata for: test.inventory @ RecordId(6)
2020-10-02T20:08:38.215+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "test/index/1-3817864913425832323" }, ns: "test.inventory", ident: "test/collection/0-3817864913425832323" }
2020-10-02T20:08:38.215+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.215+0000 D3 STORAGE  [initandlisten] looking up metadata for: test.inventory @ RecordId(6)
2020-10-02T20:08:38.215+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "test/index/1-3817864913425832323" }, ns: "test.inventory", ident: "test/collection/0-3817864913425832323" }
2020-10-02T20:08:38.215+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.215+0000 D3 STORAGE  [initandlisten] looking up metadata for: test.inventory @ RecordId(6)
2020-10-02T20:08:38.215+0000 D2 STORAGE  [initandlisten] WiredTigerUtil::checkApplicationMetadataFormatVersion  uri: table:test/index/1-3817864913425832323 ok range 6 -> 12 current: 8
2020-10-02T20:08:38.216+0000 D1 STORAGE  [initandlisten] test.inventory: clearing plan cache - collection info cache reset
2020-10-02T20:08:38.216+0000 D1 -        [initandlisten] reloading view catalog for database test
2020-10-02T20:08:38.216+0000 D3 STORAGE  [initandlisten] looking up metadata for: test.inventory @ RecordId(6)
2020-10-02T20:08:38.216+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "test/index/1-3817864913425832323" }, ns: "test.inventory", ident: "test/collection/0-3817864913425832323" }
2020-10-02T20:08:38.216+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.216+0000 D3 STORAGE  [initandlisten] looking up metadata for: test.inventory @ RecordId(6)
2020-10-02T20:08:38.216+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "test/index/1-3817864913425832323" }, ns: "test.inventory", ident: "test/collection/0-3817864913425832323" }
2020-10-02T20:08:38.216+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.216+0000 D3 STORAGE  [initandlisten] looking up metadata for: test.inventory @ RecordId(6)
2020-10-02T20:08:38.216+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "test/index/1-3817864913425832323" }, ns: "test.inventory", ident: "test/collection/0-3817864913425832323" }
2020-10-02T20:08:38.216+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.216+0000 D2 CONNPOOL [initandlisten] Controller for NetworkInterfaceTL-CollectionRangeDeleter-TaskExecutor is LimitController
2020-10-02T20:08:38.216+0000 I  SHARDING [initandlisten] Marking collection local.system.replset as collection version: <unsharded>
2020-10-02T20:08:38.216+0000 D2 ASIO     [CollectionRangeDeleter-TaskExecutor] The NetworkInterfaceTL reactor thread is spinning up
2020-10-02T20:08:38.216+0000 D1 STORAGE  [initandlisten]     Recovering database: admin
2020-10-02T20:08:38.216+0000 D2 QUERY    [initandlisten] Using idhack: ns: admin.system.version query: { _id: "featureCompatibilityVersion" } sort: {} projection: {}
2020-10-02T20:08:38.217+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.version @ RecordId(1)
2020-10-02T20:08:38.217+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--2310914167168443545" }, ns: "admin.system.version", ident: "admin/collection/0--2310914167168443545" }
2020-10-02T20:08:38.217+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.version", options: { uuid: UUID("0d876cab-c7c4-40a4-90c6-c23dd6e3b179") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.217+0000 D3 STORAGE  [initandlisten] looking up metadata for: admin.system.users @ RecordId(5)
2020-10-02T20:08:38.217+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "admin/index/1--732801831392209623", user_1_db_1: "admin/index/2--732801831392209623" }, ns: "admin.system.users", ident: "admin/collection/0--732801831392209623" }
2020-10-02T20:08:38.217+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.users", options: { uuid: UUID("afe8728a-bcfa-4477-b0ae-3a6884f97746") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, unique: true, key: { user: 1, db: 1 }, name: "user_1_db_1", ns: "admin.system.users" }, ready: true, multikey: false, multikeyPaths: { user: BinData(0, 00), db: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.217+0000 D1 STORAGE  [initandlisten]     Recovering database: config
2020-10-02T20:08:38.217+0000 D3 STORAGE  [initandlisten] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:08:38.217+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:08:38.217+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.217+0000 D1 STORAGE  [initandlisten]     Recovering database: local
2020-10-02T20:08:38.217+0000 D3 STORAGE  [initandlisten] looking up metadata for: local.startup_log @ RecordId(3)
2020-10-02T20:08:38.217+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "local/index/3--2310914167168443545" }, ns: "local.startup_log", ident: "local/collection/2--2310914167168443545" }
2020-10-02T20:08:38.217+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "local.startup_log", options: { uuid: UUID("97fc5f31-0917-4d2e-a65c-606750d317e5"), capped: true, size: 10485760 }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.217+0000 D1 STORAGE  [initandlisten]     Recovering database: movies
2020-10-02T20:08:38.217+0000 D3 STORAGE  [initandlisten] looking up metadata for: movies.movies @ RecordId(7)
2020-10-02T20:08:38.217+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "movies/index/1-5928759223889663863" }, ns: "movies.movies", ident: "movies/collection/0-5928759223889663863" }
2020-10-02T20:08:38.217+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.217+0000 D1 STORAGE  [initandlisten]     Recovering database: test
2020-10-02T20:08:38.217+0000 D3 STORAGE  [initandlisten] looking up metadata for: test.inventory @ RecordId(6)
2020-10-02T20:08:38.217+0000 D3 STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "test/index/1-3817864913425832323" }, ns: "test.inventory", ident: "test/collection/0-3817864913425832323" }
2020-10-02T20:08:38.217+0000 D3 STORAGE  [initandlisten] returning metadata: md: { ns: "test.inventory", options: { uuid: UUID("66dd6c2e-e14a-4284-a2a5-a7574ac1fd74") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "test.inventory" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.217+0000 D3 REPL     [initandlisten] No min valid document found, returning initial sync flag value of false.
2020-10-02T20:08:38.217+0000 D1 STORAGE  [initandlisten] done repairDatabases
2020-10-02T20:08:38.217+0000 D3 STORAGE  [initandlisten] WT rollback_transaction for snapshot id 4
2020-10-02T20:08:38.217+0000 D3 REPL     [initandlisten] No min valid document found, returning initial sync flag value of false.
2020-10-02T20:08:38.217+0000 I  STORAGE  [initandlisten] Flow Control is enabled on this deployment.
2020-10-02T20:08:38.217+0000 D2 COMMAND  [initandlisten] run command admin.$cmd { find: "system.roles", $db: "admin" }
2020-10-02T20:08:38.217+0000 I  SHARDING [initandlisten] Marking collection admin.system.roles as collection version: <unsharded>
2020-10-02T20:08:38.217+0000 D2 QUERY    [initandlisten] Collection admin.system.roles does not exist. Using EOF plan: ns: admin.system.roles query: {} sort: {} projection: {}
2020-10-02T20:08:38.217+0000 I  COMMAND  [initandlisten] command admin.system.roles command: find { find: "system.roles", $db: "admin" } planSummary: EOF keysExamined:0 docsExamined:0 cursorExhausted:1 numYields:0 nreturned:0 reslen:107 locks:{ ReplicationStateTransition: { acquireCount: { w: 1 } }, Global: { acquireCount: { r: 1 } }, Database: { acquireCount: { r: 1 } }, Collection: { acquireCount: { r: 2 } }, Mutex: { acquireCount: { r: 1 } } } storage:{ data: { bytesRead: 343, timeReadingMicros: 5 } } protocol:op_msg 0ms
2020-10-02T20:08:38.218+0000 D1 ACCESS   [initandlisten] There were no users to pin, not starting tracker thread
2020-10-02T20:08:38.218+0000 D2 ACCESS   [initandlisten] Invalidating user cache
2020-10-02T20:08:38.218+0000 D4 -        [initandlisten] Taking ticket. Available: 1000000000
2020-10-02T20:08:38.218+0000 I  SHARDING [initandlisten] Marking collection admin.system.version as collection version: <unsharded>
2020-10-02T20:08:38.218+0000 D2 QUERY    [initandlisten] Using idhack: ns: admin.system.version query: { _id: "authSchema" } sort: {} projection: {}
2020-10-02T20:08:38.218+0000 D3 STORAGE  [initandlisten] WT begin_transaction for snapshot id 5
2020-10-02T20:08:38.218+0000 D3 STORAGE  [initandlisten] WT rollback_transaction for snapshot id 5
2020-10-02T20:08:38.218+0000 D2 QUERY    [initandlisten] Using idhack: ns: admin.system.version query: { _id: "shardIdentity" } sort: {} projection: {}
2020-10-02T20:08:38.218+0000 D3 STORAGE  [initandlisten] WT begin_transaction for snapshot id 6
2020-10-02T20:08:38.218+0000 D3 STORAGE  [initandlisten] WT rollback_transaction for snapshot id 6
2020-10-02T20:08:38.218+0000 D3 STORAGE  [initandlisten] WT begin_transaction for snapshot id 8
2020-10-02T20:08:38.218+0000 D2 STORAGE  [initandlisten] WiredTigerSizeStorer::store Marking table:local/collection/2--2310914167168443545 dirty, numRecords: 76, dataSize: 158010, use_count: 3
2020-10-02T20:08:38.219+0000 I  SHARDING [initandlisten] Marking collection local.startup_log as collection version: <unsharded>
2020-10-02T20:08:38.219+0000 D3 STORAGE  [initandlisten] WT commit_transaction for snapshot id 8
2020-10-02T20:08:38.219+0000 I  FTDC     [initandlisten] Initializing full-time diagnostic data capture with directory '/home/bimongod/data/diagnostic.data'
2020-10-02T20:08:38.219+0000 D1 COMMAND  [TTLMonitor] BackgroundJob starting: TTLMonitor
2020-10-02T20:08:38.219+0000 D1 COMMAND  [ClientCursorMonitor] BackgroundJob starting: ClientCursorMonitor
2020-10-02T20:08:38.219+0000 D1 COMMAND  [PeriodicTaskRunner] BackgroundJob starting: PeriodicTaskRunner
2020-10-02T20:08:38.220+0000 D2 -        [initandlisten] Starting periodic job abortExpiredTransactions
2020-10-02T20:08:38.220+0000 D2 -        [initandlisten] Starting periodic job startPeriodicThreadToDecreaseSnapshotHistoryCachePressure
2020-10-02T20:08:38.220+0000 D2 WRITE    [abortExpiredTransactions] Beginning scanSessions. Scanning 0 sessions.
2020-10-02T20:08:38.220+0000 D2 -        [initandlisten] Starting periodic job LogicalSessionCacheRefresh
2020-10-02T20:08:38.220+0000 D2 COMMAND  [LogicalSessionCacheRefresh] run command config.$cmd { listIndexes: "system.sessions", cursor: {}, $db: "config" }
2020-10-02T20:08:38.220+0000 I  SHARDING [LogicalSessionCacheRefresh] Marking collection config.system.sessions as collection version: <unsharded>
2020-10-02T20:08:38.220+0000 D3 STORAGE  [LogicalSessionCacheRefresh] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:08:38.220+0000 D3 STORAGE  [LogicalSessionCacheRefresh] WT begin_transaction for snapshot id 13
2020-10-02T20:08:38.220+0000 D3 STORAGE  [LogicalSessionCacheRefresh]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:08:38.220+0000 D3 STORAGE  [LogicalSessionCacheRefresh] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.220+0000 D3 STORAGE  [LogicalSessionCacheRefresh] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:08:38.220+0000 D3 STORAGE  [LogicalSessionCacheRefresh]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:08:38.220+0000 D3 STORAGE  [LogicalSessionCacheRefresh] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.220+0000 D3 STORAGE  [LogicalSessionCacheRefresh] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:08:38.220+0000 D3 STORAGE  [LogicalSessionCacheRefresh]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:08:38.220+0000 D3 STORAGE  [LogicalSessionCacheRefresh] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.220+0000 D3 STORAGE  [LogicalSessionCacheRefresh] WT rollback_transaction for snapshot id 13
2020-10-02T20:08:38.220+0000 I  COMMAND  [LogicalSessionCacheRefresh] command config.system.sessions command: listIndexes { listIndexes: "system.sessions", cursor: {}, $db: "config" } numYields:0 reslen:307 locks:{ ReplicationStateTransition: { acquireCount: { w: 1 } }, Global: { acquireCount: { r: 1 } }, Database: { acquireCount: { r: 1 } }, Collection: { acquireCount: { r: 1 } }, Mutex: { acquireCount: { r: 1 } } } storage:{} protocol:op_msg 0ms
2020-10-02T20:08:38.220+0000 D2 -        [initandlisten] Starting periodic job LogicalSessionCacheReap
2020-10-02T20:08:38.220+0000 D2 COMMAND  [LogicalSessionCacheReap] run command config.$cmd { listIndexes: "system.sessions", cursor: {}, $db: "config" }
2020-10-02T20:08:38.221+0000 D3 STORAGE  [LogicalSessionCacheReap] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:08:38.221+0000 D3 STORAGE  [LogicalSessionCacheReap] WT begin_transaction for snapshot id 15
2020-10-02T20:08:38.221+0000 D3 STORAGE  [LogicalSessionCacheReap]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:08:38.221+0000 D3 STORAGE  [LogicalSessionCacheReap] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.221+0000 D3 STORAGE  [LogicalSessionCacheReap] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:08:38.221+0000 D3 STORAGE  [LogicalSessionCacheReap]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:08:38.221+0000 I  NETWORK  [listener] Listening on /tmp/mongodb-27000.sock
2020-10-02T20:08:38.221+0000 D3 STORAGE  [LogicalSessionCacheReap] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.221+0000 I  NETWORK  [listener] Listening on 0.0.0.0
2020-10-02T20:08:38.221+0000 D3 STORAGE  [LogicalSessionCacheReap] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:08:38.221+0000 I  NETWORK  [listener] waiting for connections on port 27000
2020-10-02T20:08:38.221+0000 D3 STORAGE  [LogicalSessionCacheReap]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:08:38.221+0000 D3 STORAGE  [LogicalSessionCacheReap] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:08:38.221+0000 D3 STORAGE  [LogicalSessionCacheReap] WT rollback_transaction for snapshot id 15
2020-10-02T20:08:38.221+0000 I  COMMAND  [LogicalSessionCacheReap] command config.system.sessions command: listIndexes { listIndexes: "system.sessions", cursor: {}, $db: "config" } numYields:0 reslen:307 locks:{ ReplicationStateTransition: { acquireCount: { w: 1 } }, Global: { acquireCount: { r: 1 } }, Database: { acquireCount: { r: 1 } }, Collection: { acquireCount: { r: 1 } }, Mutex: { acquireCount: { r: 1 } } } storage:{} protocol:op_msg 0ms
2020-10-02T20:08:38.221+0000 D2 WRITE    [LogicalSessionCacheReap] Beginning scanSessions. Scanning 0 sessions.
2020-10-02T20:08:38.221+0000 D2 COMMAND  [LogicalSessionCacheReap] run command config.$cmd { find: "transactions", filter: { lastWriteDate: { $lt: new Date(1601667518221) } }, projection: { _id: 1 }, sort: { _id: 1 }, $db: "config" }
2020-10-02T20:08:38.221+0000 I  SHARDING [LogicalSessionCacheReap] Marking collection config.transactions as collection version: <unsharded>
2020-10-02T20:08:38.221+0000 D2 QUERY    [LogicalSessionCacheReap] Collection config.transactions does not exist. Using EOF plan: ns: config.transactions query: { lastWriteDate: { $lt: new Date(1601667518221) } } sort: { _id: 1 } projection: { _id: 1 }
2020-10-02T20:08:38.221+0000 I  COMMAND  [LogicalSessionCacheReap] command config.transactions command: find { find: "transactions", filter: { lastWriteDate: { $lt: new Date(1601667518221) } }, projection: { _id: 1 }, sort: { _id: 1 }, $db: "config" } planSummary: EOF keysExamined:0 docsExamined:0 cursorExhausted:1 numYields:0 nreturned:0 reslen:108 locks:{ ReplicationStateTransition: { acquireCount: { w: 1 } }, Global: { acquireCount: { r: 1 } }, Database: { acquireCount: { r: 1 } }, Collection: { acquireCount: { r: 2 } }, Mutex: { acquireCount: { r: 1 } } } storage:{} protocol:op_msg 0ms
2020-10-02T20:08:38.303+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:08:38.303+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 999999999 Now: 1000000000
2020-10-02T20:08:38.306+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:38.407+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:38.507+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:38.607+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:38.707+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:38.807+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:38.907+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:39.001+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:08:39.001+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:08:39.001+0000 I  SHARDING [ftdc] Marking collection local.oplog.rs as collection version: <unsharded>
2020-10-02T20:08:39.008+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:39.108+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:39.208+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:39.303+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:08:39.303+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:08:39.308+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:39.408+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:39.508+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:39.609+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:39.709+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:39.809+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:39.909+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:40.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:08:40.001+0000 D4 FTDC     [ftdc] full-time diagnostic data capture schema change: currrent document is longer than reference document
2020-10-02T20:08:40.009+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:40.110+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:40.210+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:40.303+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:08:40.303+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:08:40.310+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:40.410+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:40.510+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:40.610+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:40.710+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:40.811+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:40.911+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:41.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:08:41.011+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:41.111+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:41.211+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:41.303+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:08:41.303+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:08:41.311+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:41.411+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:41.512+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:41.612+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:41.712+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:41.812+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:41.912+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:42.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:08:42.012+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:42.112+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:42.212+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:42.303+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:08:42.303+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:08:42.313+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:42.413+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:42.513+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:42.613+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:42.713+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:42.813+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:42.913+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:43.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:08:43.013+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:43.114+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:43.214+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:43.303+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:08:43.303+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:08:43.314+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:43.414+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:43.514+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:43.614+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:43.715+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:43.815+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:43.915+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:44.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:08:44.015+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:44.115+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:44.216+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:44.303+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:08:44.303+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:08:44.316+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:44.416+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:44.516+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:44.616+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:44.716+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:44.817+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:44.917+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:45.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:08:45.017+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:45.117+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:45.217+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:45.303+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:08:45.303+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:08:45.317+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:45.417+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:45.518+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:45.618+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:45.718+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:45.818+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:45.918+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:46.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:08:46.018+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:46.118+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:46.219+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:46.303+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:08:46.303+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:08:46.319+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:46.419+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:46.519+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:46.619+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:46.719+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:46.819+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:46.919+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:47.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:08:47.020+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:47.120+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:47.220+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:47.303+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:08:47.303+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:08:47.320+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:47.420+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:47.520+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:47.620+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:47.721+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:47.821+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:47.912+0000 I  NETWORK  [listener] connection accepted from 172.16.19.208:52852 #1 (1 connection now open)
2020-10-02T20:08:47.912+0000 D3 EXECUTOR [listener] Starting new executor thread in passthrough mode
2020-10-02T20:08:47.912+0000 I  NETWORK  [listener] connection accepted from 172.16.19.208:52854 #2 (2 connections now open)
2020-10-02T20:08:47.912+0000 D3 EXECUTOR [listener] Starting new executor thread in passthrough mode
2020-10-02T20:08:47.913+0000 D2 COMMAND  [conn1] run command admin.$cmd { isMaster: 1, compression: [ "zlib", "snappy" ], client: { driver: { name: "mongo-go-driver", version: "v1.3.4" }, os: { type: "linux", architecture: "amd64" }, platform: "go1.13.10", application: { name: "mongosqld" } }, $readPreference: { mode: "secondaryPreferred" }, $db: "admin" }
2020-10-02T20:08:47.913+0000 D2 COMMAND  [conn2] run command admin.$cmd { isMaster: 1, compression: [ "zlib", "snappy" ], client: { driver: { name: "mongo-go-driver", version: "v1.3.4" }, os: { type: "linux", architecture: "amd64" }, platform: "go1.13.10", application: { name: "mongosqld" } }, $readPreference: { mode: "secondaryPreferred" }, $db: "admin" }
2020-10-02T20:08:47.913+0000 I  NETWORK  [conn1] received client metadata from 172.16.19.208:52852 conn1: { driver: { name: "mongo-go-driver", version: "v1.3.4" }, os: { type: "linux", architecture: "amd64" }, platform: "go1.13.10", application: { name: "mongosqld" } }
2020-10-02T20:08:47.913+0000 I  NETWORK  [conn2] received client metadata from 172.16.19.208:52854 conn2: { driver: { name: "mongo-go-driver", version: "v1.3.4" }, os: { type: "linux", architecture: "amd64" }, platform: "go1.13.10", application: { name: "mongosqld" } }
2020-10-02T20:08:47.913+0000 D3 NETWORK  [conn1] Starting server-side compression negotiation
2020-10-02T20:08:47.913+0000 D3 NETWORK  [conn2] Starting server-side compression negotiation
2020-10-02T20:08:47.913+0000 D3 NETWORK  [conn2] zlib is supported
2020-10-02T20:08:47.913+0000 D3 NETWORK  [conn1] zlib is supported
2020-10-02T20:08:47.913+0000 D3 NETWORK  [conn2] snappy is supported
2020-10-02T20:08:47.913+0000 D3 NETWORK  [conn1] snappy is supported
2020-10-02T20:08:47.913+0000 I  COMMAND  [conn2] command admin.$cmd appName: "mongosqld" command: isMaster { isMaster: 1, compression: [ "zlib", "snappy" ], client: { driver: { name: "mongo-go-driver", version: "v1.3.4" }, os: { type: "linux", architecture: "amd64" }, platform: "go1.13.10", application: { name: "mongosqld" } }, $readPreference: { mode: "secondaryPreferred" }, $db: "admin" } numYields:0 reslen:301 locks:{} protocol:op_query 0ms
2020-10-02T20:08:47.913+0000 I  COMMAND  [conn1] command admin.$cmd appName: "mongosqld" command: isMaster { isMaster: 1, compression: [ "zlib", "snappy" ], client: { driver: { name: "mongo-go-driver", version: "v1.3.4" }, os: { type: "linux", architecture: "amd64" }, platform: "go1.13.10", application: { name: "mongosqld" } }, $readPreference: { mode: "secondaryPreferred" }, $db: "admin" } numYields:0 reslen:301 locks:{} protocol:op_query 0ms
2020-10-02T20:08:47.914+0000 I  NETWORK  [listener] connection accepted from 172.16.19.208:52856 #3 (3 connections now open)
2020-10-02T20:08:47.914+0000 D3 EXECUTOR [listener] Starting new executor thread in passthrough mode
2020-10-02T20:08:47.918+0000 D2 COMMAND  [conn3] run command admin.$cmd { isMaster: 1, compression: [ "zlib", "snappy" ], client: { driver: { name: "mongo-go-driver", version: "v1.3.4" }, os: { type: "linux", architecture: "amd64" }, platform: "go1.13.10", application: { name: "mongosqld" } }, $readPreference: { mode: "secondaryPreferred" }, $db: "admin" }
2020-10-02T20:08:47.918+0000 I  NETWORK  [conn3] received client metadata from 172.16.19.208:52856 conn3: { driver: { name: "mongo-go-driver", version: "v1.3.4" }, os: { type: "linux", architecture: "amd64" }, platform: "go1.13.10", application: { name: "mongosqld" } }
2020-10-02T20:08:47.918+0000 D3 NETWORK  [conn3] Starting server-side compression negotiation
2020-10-02T20:08:47.918+0000 D3 NETWORK  [conn3] zlib is supported
2020-10-02T20:08:47.918+0000 D3 NETWORK  [conn3] snappy is supported
2020-10-02T20:08:47.918+0000 I  COMMAND  [conn3] command admin.$cmd appName: "mongosqld" command: isMaster { isMaster: 1, compression: [ "zlib", "snappy" ], client: { driver: { name: "mongo-go-driver", version: "v1.3.4" }, os: { type: "linux", architecture: "amd64" }, platform: "go1.13.10", application: { name: "mongosqld" } }, $readPreference: { mode: "secondaryPreferred" }, $db: "admin" } numYields:0 reslen:301 locks:{} protocol:op_query 0ms
2020-10-02T20:08:47.918+0000 D3 NETWORK  [conn3] Decompressing message with zlib
2020-10-02T20:08:47.918+0000 D2 COMMAND  [conn3] run command admin.$cmd { ping: 1, $db: "admin" }
2020-10-02T20:08:47.918+0000 I  COMMAND  [conn3] command admin.$cmd appName: "mongosqld" command: ping { ping: 1, $db: "admin" } numYields:0 reslen:38 locks:{} protocol:op_msg 0ms
2020-10-02T20:08:47.918+0000 D3 NETWORK  [conn3] Compressing message with zlib
2020-10-02T20:08:47.919+0000 D3 NETWORK  [conn3] Decompressing message with zlib
2020-10-02T20:08:47.920+0000 D2 COMMAND  [conn3] run command admin.$cmd { buildInfo: 1, $db: "admin" }
2020-10-02T20:08:47.920+0000 I  COMMAND  [conn3] command admin.$cmd appName: "mongosqld" command: buildInfo { buildInfo: 1, $db: "admin" } numYields:0 reslen:1427 locks:{} protocol:op_msg 0ms
2020-10-02T20:08:47.920+0000 D3 NETWORK  [conn3] Compressing message with zlib
2020-10-02T20:08:47.921+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:48.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:08:48.021+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:48.121+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:48.221+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:48.303+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:08:48.303+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:08:48.321+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:48.412+0000 D2 COMMAND  [conn2] run command admin.$cmd { isMaster: 1, $db: "admin" }
2020-10-02T20:08:48.412+0000 D3 NETWORK  [conn2] Starting server-side compression negotiation
2020-10-02T20:08:48.412+0000 I  COMMAND  [conn2] command admin.$cmd appName: "mongosqld" command: isMaster { isMaster: 1, $db: "admin" } numYields:0 reslen:286 locks:{} protocol:op_msg 0ms
2020-10-02T20:08:48.421+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:48.522+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:48.622+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:48.722+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:48.822+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:48.922+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:49.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:08:49.022+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:49.122+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:49.222+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:49.303+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:08:49.303+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:08:49.323+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:49.423+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:49.523+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:49.623+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:49.723+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:49.823+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:49.923+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:50.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:08:50.024+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:50.124+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:50.224+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:50.303+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:08:50.303+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:08:50.324+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:50.424+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:50.524+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:50.624+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:50.725+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:50.825+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:50.925+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:51.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:08:51.025+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:51.125+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:51.226+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:51.303+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:08:51.303+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:08:51.326+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:51.426+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:51.526+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:51.626+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:51.726+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:51.827+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:51.927+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:52.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:08:52.027+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:52.127+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:52.184+0000 D2 NETWORK  [conn1] Session from 172.16.19.208:52852 encountered a network error during SourceMessage: HostUnreachable: Connection closed by peer
2020-10-02T20:08:52.184+0000 D2 NETWORK  [conn2] Session from 172.16.19.208:52854 encountered a network error during SourceMessage: HostUnreachable: Connection closed by peer
2020-10-02T20:08:52.185+0000 I  NETWORK  [conn2] end connection 172.16.19.208:52854 (2 connections now open)
2020-10-02T20:08:52.185+0000 D2 NETWORK  [conn3] Session from 172.16.19.208:52856 encountered a network error during SourceMessage: HostUnreachable: Connection closed by peer
2020-10-02T20:08:52.185+0000 D3 NETWORK  [conn2] Cancelling outstanding I/O operations on connection to 172.16.19.208:52854
2020-10-02T20:08:52.185+0000 I  NETWORK  [conn1] end connection 172.16.19.208:52852 (1 connection now open)
2020-10-02T20:08:52.185+0000 D3 NETWORK  [conn1] Cancelling outstanding I/O operations on connection to 172.16.19.208:52852
2020-10-02T20:08:52.185+0000 I  NETWORK  [conn3] end connection 172.16.19.208:52856 (0 connections now open)
2020-10-02T20:08:52.185+0000 D3 NETWORK  [conn3] Cancelling outstanding I/O operations on connection to 172.16.19.208:52856
2020-10-02T20:08:52.227+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:52.303+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:08:52.303+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:08:52.327+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:52.427+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:52.528+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:52.628+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:52.728+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:52.828+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:52.928+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:53.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:08:53.028+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:53.129+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:53.229+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:53.303+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:08:53.303+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:08:53.329+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:53.429+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:53.530+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:53.630+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:53.730+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:53.830+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:53.930+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:54.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:08:54.030+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:54.131+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:54.231+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:54.303+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:08:54.303+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:08:54.331+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:54.431+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:54.531+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:54.631+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:54.731+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:54.832+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:54.932+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:55.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:08:55.032+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:55.132+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:55.232+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:55.303+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:08:55.303+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:08:55.332+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:55.433+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:55.533+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:55.633+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:55.733+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:55.833+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:55.934+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:56.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:08:56.034+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:56.134+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:56.234+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:56.303+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:08:56.303+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:08:56.334+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:56.434+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:56.535+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:56.635+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:56.735+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:56.835+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:56.935+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:57.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:08:57.035+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:57.136+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:57.236+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:57.303+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:08:57.303+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:08:57.336+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:57.436+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:57.536+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:57.636+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:57.737+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:57.837+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:57.937+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:58.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:08:58.037+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:58.137+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:58.237+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:58.303+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:08:58.303+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:08:58.337+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:58.438+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:58.538+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:58.638+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:58.738+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:58.838+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:58.938+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:59.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:08:59.038+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:59.139+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:59.239+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:59.303+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:08:59.303+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:08:59.339+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:59.439+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:59.539+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:59.639+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:59.740+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:59.840+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:08:59.940+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:00.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:09:00.040+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:00.140+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:00.240+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:00.303+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:09:00.303+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:09:00.340+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:00.441+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:00.541+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:00.641+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:00.741+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:00.841+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:00.941+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:01.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:09:01.041+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:01.142+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:01.242+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:01.303+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:09:01.303+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:09:01.342+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:01.442+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:01.542+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:01.642+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:01.743+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:01.843+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:01.943+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:02.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:09:02.043+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:02.143+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:02.243+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:02.303+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:09:02.303+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:09:02.343+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:02.444+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:02.544+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:02.644+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:02.744+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:02.844+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:02.945+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:03.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:09:03.045+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:03.145+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:03.245+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:03.303+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:09:03.303+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:09:03.345+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:03.445+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:03.545+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:03.646+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:03.746+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:03.846+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:03.946+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:04.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:09:04.046+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:04.146+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:04.246+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:04.303+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:09:04.303+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:09:04.347+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:04.447+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:04.547+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:04.647+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:04.747+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:04.848+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:04.948+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:05.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:09:05.048+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:05.148+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:05.248+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:05.303+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:09:05.303+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:09:05.348+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:05.448+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:05.549+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:05.649+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:05.749+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:05.849+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:05.949+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:06.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:09:06.049+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:06.150+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:06.250+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:06.303+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:09:06.303+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:09:06.350+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:06.450+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:06.550+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:06.650+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:06.750+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:06.851+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:06.951+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:07.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:09:07.051+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:07.151+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:07.251+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:07.303+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:09:07.303+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:09:07.351+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:07.452+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:07.552+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:07.652+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:07.752+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:07.852+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:07.952+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:08.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:09:08.052+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:08.153+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:08.220+0000 D2 WRITE    [abortExpiredTransactions] Beginning scanSessions. Scanning 0 sessions.
2020-10-02T20:09:08.253+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:08.303+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:09:08.303+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:09:08.354+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:08.454+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:08.554+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:08.654+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:08.754+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:08.854+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:08.954+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:09.003+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:09:09.055+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:09.155+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:09.255+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:09.303+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:09:09.303+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:09:09.355+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:09.455+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:09.556+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:09.656+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:09.756+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:09.856+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:09.956+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:10.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:09:10.056+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:10.157+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:10.257+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:10.303+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:09:10.303+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:09:10.357+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:10.457+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:10.557+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:10.657+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:10.758+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:10.858+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:10.958+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:11.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:09:11.058+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:11.158+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:11.258+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:11.303+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:09:11.303+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:09:11.358+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:11.459+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:11.559+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:11.659+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:11.759+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:11.859+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:11.959+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:12.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:09:12.059+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:12.164+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:12.264+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:12.303+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:09:12.303+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:09:12.364+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:12.464+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:12.564+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:12.664+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:12.764+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:12.865+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:12.965+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:13.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:09:13.065+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:13.165+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:13.265+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:13.303+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:09:13.303+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:09:13.365+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:13.466+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:13.566+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:13.666+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:13.766+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:13.866+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:13.966+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:14.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:09:14.067+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:14.167+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:14.267+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:14.303+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:09:14.303+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:09:14.367+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:14.467+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:14.567+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:14.667+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:14.768+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:14.868+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:14.968+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:15.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:09:15.068+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:15.168+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:15.268+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:15.303+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:09:15.303+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:09:15.369+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:15.469+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:15.569+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:15.669+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:15.769+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:15.869+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:15.970+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:16.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:09:16.070+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:16.170+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:16.270+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:16.303+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:09:16.303+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:09:16.370+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:16.471+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:16.571+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:16.671+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:16.771+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:16.871+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:16.972+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:17.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:09:17.072+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:17.172+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:17.272+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:17.303+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:09:17.303+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:09:17.372+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:17.473+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:17.573+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:17.673+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:17.773+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:17.873+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:17.973+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:18.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:09:18.074+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:18.174+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:18.274+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:18.303+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:09:18.303+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:09:18.374+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:18.474+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:18.575+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:18.675+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:18.775+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:18.875+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:18.975+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:19.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:09:19.076+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:19.176+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:19.276+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:19.303+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:09:19.303+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:09:19.376+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:19.476+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:19.577+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:19.677+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:19.777+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:19.877+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:19.977+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:20.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:09:20.078+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:20.178+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:20.278+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:20.303+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:09:20.303+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:09:20.378+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:20.478+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:20.579+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:20.679+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:20.779+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:20.879+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:20.979+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:21.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:09:21.079+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:21.179+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:21.280+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:21.303+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:09:21.303+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:09:21.380+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:21.480+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:21.580+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:21.681+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:21.781+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:21.881+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:21.981+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:22.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:09:22.081+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:22.181+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:22.282+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:22.303+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:09:22.303+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:09:22.382+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:22.482+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:22.582+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:22.682+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:22.782+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:22.883+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:22.983+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:23.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:09:23.083+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:23.183+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:23.283+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:23.303+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:09:23.303+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:09:23.383+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:23.484+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:23.584+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:23.684+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:23.784+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:23.884+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:23.917+0000 I  NETWORK  [listener] connection accepted from 172.16.19.208:52876 #4 (1 connection now open)
2020-10-02T20:09:23.917+0000 D3 EXECUTOR [listener] Starting new executor thread in passthrough mode
2020-10-02T20:09:23.917+0000 I  NETWORK  [listener] connection accepted from 172.16.19.208:52878 #5 (2 connections now open)
2020-10-02T20:09:23.917+0000 D3 EXECUTOR [listener] Starting new executor thread in passthrough mode
2020-10-02T20:09:23.917+0000 D2 COMMAND  [conn4] run command admin.$cmd { isMaster: 1, compression: [ "zlib", "snappy" ], client: { driver: { name: "mongo-go-driver", version: "v1.3.4" }, os: { type: "linux", architecture: "amd64" }, platform: "go1.13.10", application: { name: "mongosqld" } }, $readPreference: { mode: "secondaryPreferred" }, $db: "admin" }
2020-10-02T20:09:23.917+0000 I  NETWORK  [conn4] received client metadata from 172.16.19.208:52876 conn4: { driver: { name: "mongo-go-driver", version: "v1.3.4" }, os: { type: "linux", architecture: "amd64" }, platform: "go1.13.10", application: { name: "mongosqld" } }
2020-10-02T20:09:23.917+0000 D2 COMMAND  [conn5] run command admin.$cmd { isMaster: 1, compression: [ "zlib", "snappy" ], client: { driver: { name: "mongo-go-driver", version: "v1.3.4" }, os: { type: "linux", architecture: "amd64" }, platform: "go1.13.10", application: { name: "mongosqld" } }, $readPreference: { mode: "secondaryPreferred" }, $db: "admin" }
2020-10-02T20:09:23.917+0000 D3 NETWORK  [conn4] Starting server-side compression negotiation
2020-10-02T20:09:23.917+0000 D3 NETWORK  [conn4] zlib is supported
2020-10-02T20:09:23.917+0000 D3 NETWORK  [conn4] snappy is supported
2020-10-02T20:09:23.917+0000 I  NETWORK  [conn5] received client metadata from 172.16.19.208:52878 conn5: { driver: { name: "mongo-go-driver", version: "v1.3.4" }, os: { type: "linux", architecture: "amd64" }, platform: "go1.13.10", application: { name: "mongosqld" } }
2020-10-02T20:09:23.917+0000 D3 NETWORK  [conn5] Starting server-side compression negotiation
2020-10-02T20:09:23.917+0000 I  COMMAND  [conn4] command admin.$cmd appName: "mongosqld" command: isMaster { isMaster: 1, compression: [ "zlib", "snappy" ], client: { driver: { name: "mongo-go-driver", version: "v1.3.4" }, os: { type: "linux", architecture: "amd64" }, platform: "go1.13.10", application: { name: "mongosqld" } }, $readPreference: { mode: "secondaryPreferred" }, $db: "admin" } numYields:0 reslen:301 locks:{} protocol:op_query 0ms
2020-10-02T20:09:23.917+0000 D3 NETWORK  [conn5] zlib is supported
2020-10-02T20:09:23.917+0000 D3 NETWORK  [conn5] snappy is supported
2020-10-02T20:09:23.917+0000 I  COMMAND  [conn5] command admin.$cmd appName: "mongosqld" command: isMaster { isMaster: 1, compression: [ "zlib", "snappy" ], client: { driver: { name: "mongo-go-driver", version: "v1.3.4" }, os: { type: "linux", architecture: "amd64" }, platform: "go1.13.10", application: { name: "mongosqld" } }, $readPreference: { mode: "secondaryPreferred" }, $db: "admin" } numYields:0 reslen:301 locks:{} protocol:op_query 0ms
2020-10-02T20:09:23.918+0000 I  NETWORK  [listener] connection accepted from 172.16.19.208:52880 #6 (3 connections now open)
2020-10-02T20:09:23.918+0000 D3 EXECUTOR [listener] Starting new executor thread in passthrough mode
2020-10-02T20:09:23.918+0000 D2 COMMAND  [conn6] run command admin.$cmd { isMaster: 1, compression: [ "zlib", "snappy" ], client: { driver: { name: "mongo-go-driver", version: "v1.3.4" }, os: { type: "linux", architecture: "amd64" }, platform: "go1.13.10", application: { name: "mongosqld" } }, $readPreference: { mode: "secondaryPreferred" }, $db: "admin" }
2020-10-02T20:09:23.918+0000 I  NETWORK  [conn6] received client metadata from 172.16.19.208:52880 conn6: { driver: { name: "mongo-go-driver", version: "v1.3.4" }, os: { type: "linux", architecture: "amd64" }, platform: "go1.13.10", application: { name: "mongosqld" } }
2020-10-02T20:09:23.918+0000 D3 NETWORK  [conn6] Starting server-side compression negotiation
2020-10-02T20:09:23.918+0000 D3 NETWORK  [conn6] zlib is supported
2020-10-02T20:09:23.918+0000 D3 NETWORK  [conn6] snappy is supported
2020-10-02T20:09:23.918+0000 I  COMMAND  [conn6] command admin.$cmd appName: "mongosqld" command: isMaster { isMaster: 1, compression: [ "zlib", "snappy" ], client: { driver: { name: "mongo-go-driver", version: "v1.3.4" }, os: { type: "linux", architecture: "amd64" }, platform: "go1.13.10", application: { name: "mongosqld" } }, $readPreference: { mode: "secondaryPreferred" }, $db: "admin" } numYields:0 reslen:301 locks:{} protocol:op_query 0ms
2020-10-02T20:09:23.919+0000 D3 NETWORK  [conn6] Decompressing message with zlib
2020-10-02T20:09:23.919+0000 D2 COMMAND  [conn6] run command admin.$cmd { ping: 1, $db: "admin" }
2020-10-02T20:09:23.919+0000 I  COMMAND  [conn6] command admin.$cmd appName: "mongosqld" command: ping { ping: 1, $db: "admin" } numYields:0 reslen:38 locks:{} protocol:op_msg 0ms
2020-10-02T20:09:23.919+0000 D3 NETWORK  [conn6] Compressing message with zlib
2020-10-02T20:09:23.920+0000 D3 NETWORK  [conn6] Decompressing message with zlib
2020-10-02T20:09:23.920+0000 D2 COMMAND  [conn6] run command admin.$cmd { buildInfo: 1, $db: "admin" }
2020-10-02T20:09:23.920+0000 I  COMMAND  [conn6] command admin.$cmd appName: "mongosqld" command: buildInfo { buildInfo: 1, $db: "admin" } numYields:0 reslen:1427 locks:{} protocol:op_msg 0ms
2020-10-02T20:09:23.920+0000 D3 NETWORK  [conn6] Compressing message with zlib
2020-10-02T20:09:23.984+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:24.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:09:24.085+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:24.185+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:24.285+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:24.303+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:09:24.303+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:09:24.385+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:24.415+0000 D2 COMMAND  [conn4] run command admin.$cmd { isMaster: 1, $db: "admin" }
2020-10-02T20:09:24.415+0000 D3 NETWORK  [conn4] Starting server-side compression negotiation
2020-10-02T20:09:24.415+0000 I  COMMAND  [conn4] command admin.$cmd appName: "mongosqld" command: isMaster { isMaster: 1, $db: "admin" } numYields:0 reslen:286 locks:{} protocol:op_msg 0ms
2020-10-02T20:09:24.485+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:24.585+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:24.686+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:24.786+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:24.886+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:24.986+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:25.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:09:25.086+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:25.186+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:25.287+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:25.303+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:09:25.303+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:09:25.387+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:25.487+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:25.587+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:25.687+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:25.787+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:25.887+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:25.988+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:26.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:09:26.088+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:26.188+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:26.288+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:26.303+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:09:26.303+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:09:26.388+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:26.489+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:26.589+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:26.689+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:26.789+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:26.889+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:26.989+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:27.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:09:27.090+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:27.190+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:27.290+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:27.303+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:09:27.303+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:09:27.390+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:27.490+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:27.590+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:27.691+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:27.791+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:27.891+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:27.991+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:28.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:09:28.091+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:28.191+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:28.292+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:28.303+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:09:28.303+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:09:28.392+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:28.492+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:28.592+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:28.693+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:28.793+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:28.893+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:28.993+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:29.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:09:29.093+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:29.193+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:29.293+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:29.303+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:09:29.303+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:09:29.394+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:29.494+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:29.594+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:29.694+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:29.794+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:29.894+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:29.995+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:30.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:09:30.095+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:30.195+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:30.295+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:30.303+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:09:30.303+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:09:30.395+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:30.496+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:30.596+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:30.696+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:30.796+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:30.896+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:30.996+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:31.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:09:31.096+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:31.197+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:31.297+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:31.303+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:09:31.303+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:09:31.397+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:31.497+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:31.597+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:31.697+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:31.798+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:31.898+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:31.998+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:32.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:09:32.098+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:32.198+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:32.299+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:32.303+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:09:32.303+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:09:32.399+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:32.499+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:32.599+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:32.699+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:32.800+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:32.900+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:33.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:09:33.001+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:33.101+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:33.201+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:33.302+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:33.303+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:09:33.303+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:09:33.402+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:33.502+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:33.602+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:33.703+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:33.803+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:33.903+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:33.915+0000 D2 COMMAND  [conn5] run command admin.$cmd { isMaster: 1, $db: "admin" }
2020-10-02T20:09:33.915+0000 D3 NETWORK  [conn5] Starting server-side compression negotiation
2020-10-02T20:09:33.915+0000 I  COMMAND  [conn5] command admin.$cmd appName: "mongosqld" command: isMaster { isMaster: 1, $db: "admin" } numYields:0 reslen:286 locks:{} protocol:op_msg 0ms
2020-10-02T20:09:33.915+0000 D2 COMMAND  [conn4] run command admin.$cmd { isMaster: 1, $db: "admin" }
2020-10-02T20:09:33.915+0000 D3 NETWORK  [conn4] Starting server-side compression negotiation
2020-10-02T20:09:33.915+0000 I  COMMAND  [conn4] command admin.$cmd appName: "mongosqld" command: isMaster { isMaster: 1, $db: "admin" } numYields:0 reslen:286 locks:{} protocol:op_msg 0ms
2020-10-02T20:09:34.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:09:34.003+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:34.104+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:34.204+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:34.303+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:09:34.303+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:09:34.304+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:34.404+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:34.504+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:34.604+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:34.705+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:34.805+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:34.905+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:35.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:09:35.005+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:35.105+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:35.205+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:35.303+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:09:35.303+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:09:35.305+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:35.406+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:35.506+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:35.606+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:35.706+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:35.806+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:35.906+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:36.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:09:36.007+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:36.107+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:36.207+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:36.303+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:09:36.303+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:09:36.307+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:36.407+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:36.507+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:36.608+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:36.708+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:36.808+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:36.908+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:37.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:09:37.008+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:37.108+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:37.209+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:37.303+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:09:37.303+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:09:37.309+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:37.409+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:37.509+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:37.574+0000 I  NETWORK  [listener] connection accepted from 172.16.19.208:52890 #7 (4 connections now open)
2020-10-02T20:09:37.574+0000 D3 EXECUTOR [listener] Starting new executor thread in passthrough mode
2020-10-02T20:09:37.574+0000 D2 COMMAND  [conn7] run command admin.$cmd { isMaster: 1, compression: [ "zlib", "snappy" ], client: { driver: { name: "mongo-go-driver", version: "v1.3.4" }, os: { type: "linux", architecture: "amd64" }, platform: "go1.13.10", application: { name: "mongosqld" } }, $readPreference: { mode: "secondaryPreferred" }, $db: "admin" }
2020-10-02T20:09:37.574+0000 I  NETWORK  [conn7] received client metadata from 172.16.19.208:52890 conn7: { driver: { name: "mongo-go-driver", version: "v1.3.4" }, os: { type: "linux", architecture: "amd64" }, platform: "go1.13.10", application: { name: "mongosqld" } }
2020-10-02T20:09:37.574+0000 D3 NETWORK  [conn7] Starting server-side compression negotiation
2020-10-02T20:09:37.574+0000 D3 NETWORK  [conn7] zlib is supported
2020-10-02T20:09:37.574+0000 D3 NETWORK  [conn7] snappy is supported
2020-10-02T20:09:37.574+0000 I  COMMAND  [conn7] command admin.$cmd appName: "mongosqld" command: isMaster { isMaster: 1, compression: [ "zlib", "snappy" ], client: { driver: { name: "mongo-go-driver", version: "v1.3.4" }, os: { type: "linux", architecture: "amd64" }, platform: "go1.13.10", application: { name: "mongosqld" } }, $readPreference: { mode: "secondaryPreferred" }, $db: "admin" } numYields:0 reslen:301 locks:{} protocol:op_query 0ms
2020-10-02T20:09:37.575+0000 I  NETWORK  [listener] connection accepted from 172.16.19.208:52892 #8 (5 connections now open)
2020-10-02T20:09:37.575+0000 D3 EXECUTOR [listener] Starting new executor thread in passthrough mode
2020-10-02T20:09:37.575+0000 D2 COMMAND  [conn8] run command admin.$cmd { isMaster: 1, compression: [ "zlib", "snappy" ], client: { driver: { name: "mongo-go-driver", version: "v1.3.4" }, os: { type: "linux", architecture: "amd64" }, platform: "go1.13.10", application: { name: "mongosqld" } }, $readPreference: { mode: "secondaryPreferred" }, $db: "admin" }
2020-10-02T20:09:37.575+0000 I  NETWORK  [conn8] received client metadata from 172.16.19.208:52892 conn8: { driver: { name: "mongo-go-driver", version: "v1.3.4" }, os: { type: "linux", architecture: "amd64" }, platform: "go1.13.10", application: { name: "mongosqld" } }
2020-10-02T20:09:37.575+0000 D3 NETWORK  [conn8] Starting server-side compression negotiation
2020-10-02T20:09:37.575+0000 D3 NETWORK  [conn8] zlib is supported
2020-10-02T20:09:37.575+0000 D3 NETWORK  [conn8] snappy is supported
2020-10-02T20:09:37.575+0000 I  COMMAND  [conn8] command admin.$cmd appName: "mongosqld" command: isMaster { isMaster: 1, compression: [ "zlib", "snappy" ], client: { driver: { name: "mongo-go-driver", version: "v1.3.4" }, os: { type: "linux", architecture: "amd64" }, platform: "go1.13.10", application: { name: "mongosqld" } }, $readPreference: { mode: "secondaryPreferred" }, $db: "admin" } numYields:0 reslen:301 locks:{} protocol:op_query 0ms
2020-10-02T20:09:37.576+0000 D3 NETWORK  [conn6] Decompressing message with zlib
2020-10-02T20:09:37.576+0000 D2 COMMAND  [conn6] run command admin.$cmd { ping: 1, $db: "admin" }
2020-10-02T20:09:37.576+0000 I  COMMAND  [conn6] command admin.$cmd appName: "mongosqld" command: ping { ping: 1, $db: "admin" } numYields:0 reslen:38 locks:{} protocol:op_msg 0ms
2020-10-02T20:09:37.577+0000 D3 NETWORK  [conn6] Compressing message with zlib
2020-10-02T20:09:37.578+0000 D3 NETWORK  [conn7] Decompressing message with zlib
2020-10-02T20:09:37.578+0000 D2 COMMAND  [conn7] run command admin.$cmd { buildInfo: 1, $db: "admin" }
2020-10-02T20:09:37.578+0000 I  COMMAND  [conn7] command admin.$cmd appName: "mongosqld" command: buildInfo { buildInfo: 1, $db: "admin" } numYields:0 reslen:1427 locks:{} protocol:op_msg 0ms
2020-10-02T20:09:37.578+0000 D3 NETWORK  [conn7] Compressing message with zlib
2020-10-02T20:09:37.579+0000 D3 NETWORK  [conn6] Decompressing message with zlib
2020-10-02T20:09:37.579+0000 D2 COMMAND  [conn6] run command movies.$cmd { listCollections: 1, $db: "movies" }
2020-10-02T20:09:37.579+0000 D3 STORAGE  [conn6] looking up metadata for: movies.movies @ RecordId(7)
2020-10-02T20:09:37.579+0000 D3 STORAGE  [conn6] WT begin_transaction for snapshot id 180
2020-10-02T20:09:37.579+0000 D3 STORAGE  [conn6]  fetched CCE metadata: { md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "movies/index/1-5928759223889663863" }, ns: "movies.movies", ident: "movies/collection/0-5928759223889663863" }
2020-10-02T20:09:37.579+0000 D3 STORAGE  [conn6] returning metadata: md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:09:37.579+0000 D3 STORAGE  [conn6] WT rollback_transaction for snapshot id 180
2020-10-02T20:09:37.579+0000 I  COMMAND  [conn6] command movies.$cmd appName: "mongosqld" command: listCollections { listCollections: 1, $db: "movies" } numYields:0 reslen:302 locks:{ ParallelBatchWriterMode: { acquireCount: { r: 1 } }, ReplicationStateTransition: { acquireCount: { w: 1 } }, Global: { acquireCount: { r: 1 } }, Database: { acquireCount: { r: 1 } }, Collection: { acquireCount: { r: 2 } }, Mutex: { acquireCount: { r: 1 } } } storage:{} protocol:op_msg 0ms
2020-10-02T20:09:37.579+0000 D2 STORAGE  [conn6] WiredTigerSizeStorer::flush table:local/collection/2--2310914167168443545 -> { numRecords: 76, dataSize: 158010 }
2020-10-02T20:09:37.579+0000 D2 STORAGE  [conn6] WiredTigerSizeStorer flush took 23 µs
2020-10-02T20:09:37.579+0000 D3 NETWORK  [conn6] Compressing message with zlib
2020-10-02T20:09:37.580+0000 D3 NETWORK  [conn6] Decompressing message with zlib
2020-10-02T20:09:37.580+0000 D2 COMMAND  [conn6] run command movies.$cmd { listIndexes: "movies", cursor: {}, $db: "movies" }
2020-10-02T20:09:37.580+0000 I  SHARDING [conn6] Marking collection movies.movies as collection version: <unsharded>
2020-10-02T20:09:37.580+0000 D3 STORAGE  [conn6] looking up metadata for: movies.movies @ RecordId(7)
2020-10-02T20:09:37.580+0000 D3 STORAGE  [conn6] WT begin_transaction for snapshot id 182
2020-10-02T20:09:37.580+0000 D3 STORAGE  [conn6]  fetched CCE metadata: { md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "movies/index/1-5928759223889663863" }, ns: "movies.movies", ident: "movies/collection/0-5928759223889663863" }
2020-10-02T20:09:37.580+0000 D3 STORAGE  [conn6] returning metadata: md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:09:37.580+0000 D3 STORAGE  [conn6] looking up metadata for: movies.movies @ RecordId(7)
2020-10-02T20:09:37.580+0000 D3 STORAGE  [conn6]  fetched CCE metadata: { md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "movies/index/1-5928759223889663863" }, ns: "movies.movies", ident: "movies/collection/0-5928759223889663863" }
2020-10-02T20:09:37.580+0000 D3 STORAGE  [conn6] returning metadata: md: { ns: "movies.movies", options: { uuid: UUID("77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "movies.movies" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:09:37.580+0000 D3 STORAGE  [conn6] WT rollback_transaction for snapshot id 182
2020-10-02T20:09:37.580+0000 I  COMMAND  [conn6] command movies.movies appName: "mongosqld" command: listIndexes { listIndexes: "movies", cursor: {}, $db: "movies" } numYields:0 reslen:173 locks:{ ReplicationStateTransition: { acquireCount: { w: 1 } }, Global: { acquireCount: { r: 1 } }, Database: { acquireCount: { r: 1 } }, Collection: { acquireCount: { r: 1 } }, Mutex: { acquireCount: { r: 1 } } } storage:{} protocol:op_msg 0ms
2020-10-02T20:09:37.580+0000 D3 NETWORK  [conn6] Compressing message with zlib
2020-10-02T20:09:37.610+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:37.710+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:37.810+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:37.911+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:38.003+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:09:38.011+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:38.111+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:38.212+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:38.219+0000 D3 INDEX    [TTLMonitor] thread awake
2020-10-02T20:09:38.219+0000 D3 STORAGE  [TTLMonitor] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:09:38.219+0000 D3 STORAGE  [TTLMonitor] WT begin_transaction for snapshot id 186
2020-10-02T20:09:38.219+0000 D3 STORAGE  [TTLMonitor]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:09:38.219+0000 D3 STORAGE  [TTLMonitor] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:09:38.219+0000 D3 STORAGE  [TTLMonitor] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:09:38.219+0000 D3 STORAGE  [TTLMonitor]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:09:38.219+0000 D3 STORAGE  [TTLMonitor] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:09:38.220+0000 D3 STORAGE  [TTLMonitor] looking up metadata for: config.system.sessions @ RecordId(4)
2020-10-02T20:09:38.220+0000 D3 STORAGE  [TTLMonitor]  fetched CCE metadata: { md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }, idxIdent: { _id_: "config/index/5--2310914167168443545", lsidTTLIndex: "config/index/6--2310914167168443545" }, ns: "config.system.sessions", ident: "config/collection/4--2310914167168443545" }
2020-10-02T20:09:38.220+0000 D3 STORAGE  [TTLMonitor] returning metadata: md: { ns: "config.system.sessions", options: { uuid: UUID("fbf72919-58ff-41f2-ba34-93b2acda7d24") }, indexes: [ { spec: { v: 2, key: { _id: 1 }, name: "_id_", ns: "config.system.sessions" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 }, { spec: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }, ready: true, multikey: false, multikeyPaths: { lastUse: BinData(0, 00) }, head: 0, prefix: -1, backgroundSecondary: false, runTwoPhaseBuild: false, versionOfBuild: 1 } ], prefix: -1 }
2020-10-02T20:09:38.220+0000 D3 STORAGE  [TTLMonitor] WT rollback_transaction for snapshot id 186
2020-10-02T20:09:38.220+0000 D1 INDEX    [TTLMonitor] ns: config.system.sessions key: { lastUse: 1 } name: lsidTTLIndex
2020-10-02T20:09:38.220+0000 D3 COMMAND  [PeriodicTaskRunner] task: DBConnectionPool-cleaner took: 0ms
2020-10-02T20:09:38.220+0000 D4 -        [TTLMonitor] Taking ticket. Available: 1000000000
2020-10-02T20:09:38.220+0000 D3 COMMAND  [PeriodicTaskRunner] task: DBConnectionPool-cleaner took: 0ms
2020-10-02T20:09:38.220+0000 D2 -        [PeriodicTaskRunner] cleaning up unused lock buckets of the global lock manager
2020-10-02T20:09:38.220+0000 D3 COMMAND  [PeriodicTaskRunner] task: UnusedLockCleaner took: 0ms
2020-10-02T20:09:38.220+0000 D3 STORAGE  [TTLMonitor] WT begin_transaction for snapshot id 187
2020-10-02T20:09:38.220+0000 D2 WRITE    [abortExpiredTransactions] Beginning scanSessions. Scanning 0 sessions.
2020-10-02T20:09:38.220+0000 D1 INDEX    [TTLMonitor] deleted: 0
2020-10-02T20:09:38.220+0000 D3 STORAGE  [TTLMonitor] WT rollback_transaction for snapshot id 187
2020-10-02T20:09:38.303+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:09:38.303+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 999999999 Now: 1000000000
2020-10-02T20:09:38.312+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:38.412+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:38.512+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:38.612+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:38.713+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:38.813+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:38.913+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:39.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:09:39.001+0000 D4 FTDC     [ftdc] full-time diagnostic data capture schema change: field name change - from 'W' to 'w'
2020-10-02T20:09:39.013+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:39.113+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:39.213+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:39.303+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:09:39.303+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:09:39.314+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:39.414+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:39.514+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:39.614+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:39.714+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:39.814+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:39.915+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:40.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:09:40.015+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:40.115+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:40.215+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:40.303+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:09:40.303+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:09:40.315+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:40.416+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:40.516+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:40.616+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:40.716+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:40.816+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:40.916+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:41.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:09:41.017+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:41.117+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:41.217+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:41.303+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:09:41.303+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:09:41.317+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:41.417+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:41.517+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:41.618+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:41.718+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:41.818+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:41.918+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:42.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:09:42.018+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:42.118+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:42.219+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:42.303+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:09:42.303+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:09:42.319+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:42.419+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:42.519+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:42.619+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:42.719+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:42.820+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:42.920+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:43.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:09:43.020+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:43.120+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:43.220+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:43.303+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:09:43.303+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:09:43.321+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:43.421+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:43.521+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:43.621+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:43.721+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:43.822+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:43.915+0000 D2 COMMAND  [conn5] run command admin.$cmd { isMaster: 1, $db: "admin" }
2020-10-02T20:09:43.915+0000 D2 COMMAND  [conn4] run command admin.$cmd { isMaster: 1, $db: "admin" }
2020-10-02T20:09:43.915+0000 D3 NETWORK  [conn4] Starting server-side compression negotiation
2020-10-02T20:09:43.915+0000 D3 NETWORK  [conn5] Starting server-side compression negotiation
2020-10-02T20:09:43.915+0000 I  COMMAND  [conn4] command admin.$cmd appName: "mongosqld" command: isMaster { isMaster: 1, $db: "admin" } numYields:0 reslen:286 locks:{} protocol:op_msg 0ms
2020-10-02T20:09:43.915+0000 I  COMMAND  [conn5] command admin.$cmd appName: "mongosqld" command: isMaster { isMaster: 1, $db: "admin" } numYields:0 reslen:286 locks:{} protocol:op_msg 0ms
2020-10-02T20:09:43.922+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:44.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:09:44.022+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:44.122+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:44.223+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:44.303+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:09:44.303+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:09:44.323+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:44.423+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:44.523+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:44.623+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:44.724+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:44.824+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:44.924+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:45.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:09:45.024+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:45.124+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:45.224+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:45.303+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:09:45.303+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:09:45.325+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:45.425+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:45.525+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:45.625+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:45.725+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:45.826+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:45.926+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:46.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:09:46.026+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:46.126+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:46.226+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:46.303+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:09:46.303+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:09:46.327+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:46.427+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:46.527+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:46.627+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:46.727+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:46.827+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:46.927+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:47.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:09:47.028+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:47.128+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:47.228+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:47.303+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:09:47.303+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:09:47.328+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:47.428+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:47.528+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:47.628+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:47.729+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:47.829+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:47.929+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:48.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:09:48.029+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:48.129+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:48.229+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:48.303+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:09:48.303+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:09:48.329+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:48.430+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:48.530+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:48.630+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:48.730+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:48.830+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:48.930+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:49.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:09:49.030+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:49.130+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:49.231+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:49.303+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:09:49.303+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:09:49.331+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:49.431+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:49.531+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:49.631+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:49.731+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:49.832+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:49.932+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:50.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:09:50.032+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:50.132+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:50.232+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:50.303+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:09:50.303+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:09:50.332+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:50.432+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:50.533+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:50.539+0000 D3 NETWORK  [conn8] Decompressing message with zlib
2020-10-02T20:09:50.539+0000 D2 COMMAND  [conn8] run command movies.$cmd { aggregate: "movies", allowDiskUse: true, pipeline: [ { $project: { movies_DOT_movies_DOT__id: "$_id", movies_DOT_movies_DOT_name: "$name", _id: 0 } } ], cursor: {}, $db: "movies" }
2020-10-02T20:09:50.539+0000 D2 QUERY    [conn8] Only one plan is available; it will be run but will not be cached. ns: movies.movies query: {} sort: {} projection: {}, planSummary: COLLSCAN
2020-10-02T20:09:50.539+0000 D3 STORAGE  [conn8] WT begin_transaction for snapshot id 223
2020-10-02T20:09:50.540+0000 D3 STORAGE  [conn8] WT rollback_transaction for snapshot id 223
2020-10-02T20:09:50.540+0000 I  COMMAND  [conn8] command movies.movies appName: "mongosqld" command: aggregate { aggregate: "movies", allowDiskUse: true, pipeline: [ { $project: { movies_DOT_movies_DOT__id: "$_id", movies_DOT_movies_DOT_name: "$name", _id: 0 } } ], cursor: {}, $db: "movies" } planSummary: COLLSCAN keysExamined:0 docsExamined:3 cursorExhausted:1 numYields:0 nreturned:3 reslen:371 locks:{ ReplicationStateTransition: { acquireCount: { w: 2 } }, Global: { acquireCount: { r: 2 } }, Database: { acquireCount: { r: 2 } }, Collection: { acquireCount: { r: 2 } }, Mutex: { acquireCount: { r: 2 } } } storage:{ data: { bytesRead: 228, timeReadingMicros: 2 } } protocol:op_msg 0ms
2020-10-02T20:09:50.540+0000 D3 NETWORK  [conn8] Compressing message with zlib
2020-10-02T20:09:50.633+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:50.733+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:50.833+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:50.933+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:51.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:09:51.033+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:51.134+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:51.234+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:51.303+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:09:51.303+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:09:51.334+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:51.434+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:51.534+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:51.634+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:51.735+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:51.835+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:51.935+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:52.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:09:52.035+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:52.135+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:52.235+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:52.303+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:09:52.303+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:09:52.335+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:52.436+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:52.536+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:52.636+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:52.736+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:52.836+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:52.937+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:53.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:09:53.037+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:53.137+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:53.237+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:53.303+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:09:53.303+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:09:53.337+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:53.437+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:53.538+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:53.638+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:53.738+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:53.838+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:53.915+0000 D2 COMMAND  [conn5] run command admin.$cmd { isMaster: 1, $db: "admin" }
2020-10-02T20:09:53.915+0000 D3 NETWORK  [conn5] Starting server-side compression negotiation
2020-10-02T20:09:53.915+0000 I  COMMAND  [conn5] command admin.$cmd appName: "mongosqld" command: isMaster { isMaster: 1, $db: "admin" } numYields:0 reslen:286 locks:{} protocol:op_msg 0ms
2020-10-02T20:09:53.915+0000 D2 COMMAND  [conn4] run command admin.$cmd { isMaster: 1, $db: "admin" }
2020-10-02T20:09:53.915+0000 D3 NETWORK  [conn4] Starting server-side compression negotiation
2020-10-02T20:09:53.915+0000 I  COMMAND  [conn4] command admin.$cmd appName: "mongosqld" command: isMaster { isMaster: 1, $db: "admin" } numYields:0 reslen:286 locks:{} protocol:op_msg 0ms
2020-10-02T20:09:53.938+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:54.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:09:54.038+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:54.139+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:54.239+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:54.303+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:09:54.303+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:09:54.339+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:54.439+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:54.539+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:54.640+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:54.740+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:54.840+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:54.940+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:55.001+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:09:55.041+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:55.141+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:55.241+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:55.303+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:09:55.303+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:09:55.341+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:55.441+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:55.541+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:55.641+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:55.742+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:55.842+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:55.942+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:56.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:09:56.042+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:56.142+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:56.242+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:56.303+0000 D4 STORAGE  [FlowControlRefresher] Trimmed samples. Num: 0
2020-10-02T20:09:56.303+0000 D4 -        [FlowControlRefresher] Refreshing tickets. Before: 1000000000 Now: 1000000000
2020-10-02T20:09:56.342+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:56.442+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:56.543+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:56.643+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:56.743+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:56.843+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:56.944+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:57.000+0000 D3 STORAGE  [ftdc] setting timestamp read source: 1, provided timestamp: none
2020-10-02T20:09:57.044+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:57.144+0000 D4 STORAGE  [WTJournalFlusher] flushed journal
2020-10-02T20:09:57.167+0000 I  CONTROL  [signalProcessingThread] got signal 2 (Interrupt), will terminate after current cmd ends
2020-10-02T20:09:57.168+0000 D1 -        [signalProcessingThread] User Assertion: NotMaster: not primary so can't step down src/mongo/db/repl/replication_coordinator_impl.cpp 2062
2020-10-02T20:09:57.168+0000 D1 QUERY    [signalProcessingThread] received interrupt request for unknown op: 2  known ops: 
2020-10-02T20:09:57.168+0000 D1 -        [waitForMajority] User Assertion: InterruptedAtShutdown: operation was interrupted src/mongo/util/interruptible.h 333
2020-10-02T20:09:57.168+0000 D1 SHARDING [waitForMajority] Unable to wait for new op time due to: InterruptedAtShutdown: operation was interrupted
2020-10-02T20:09:57.168+0000 D2 -        [signalProcessingThread] Stopping periodic job LogicalSessionCacheRefresh
2020-10-02T20:09:57.168+0000 D2 -        [signalProcessingThread] Stopping periodic job LogicalSessionCacheReap
2020-10-02T20:09:57.168+0000 I  NETWORK  [signalProcessingThread] shutdown: going to close listening sockets...
2020-10-02T20:09:57.168+0000 I  NETWORK  [listener] removing socket file: /tmp/mongodb-27000.sock
2020-10-02T20:09:57.168+0000 I  -        [signalProcessingThread] Stopping further Flow Control ticket acquisitions.
2020-10-02T20:09:57.168+0000 D2 -        [signalProcessingThread] Stopping periodic job abortExpiredTransactions
2020-10-02T20:09:57.168+0000 D2 -        [signalProcessingThread] Stopping periodic job startPeriodicThreadToDecreaseSnapshotHistoryCachePressure
2020-10-02T20:09:57.168+0000 D1 QUERY    [signalProcessingThread] received interrupt request for unknown op: 229  known ops: 
2020-10-02T20:09:57.168+0000 D2 WRITE    [signalProcessingThread] Beginning scanSessions. Scanning 0 sessions.
2020-10-02T20:09:57.168+0000 I  FTDC     [signalProcessingThread] Shutting down full-time diagnostic data capture
2020-10-02T20:09:57.170+0000 I  STORAGE  [signalProcessingThread] Deregistering all the collections
2020-10-02T20:09:57.170+0000 D1 STORAGE  [signalProcessingThread] Deregistering collection admin.system.users with UUID afe8728a-bcfa-4477-b0ae-3a6884f97746
2020-10-02T20:09:57.170+0000 D1 STORAGE  [signalProcessingThread] ~WiredTigerRecordStore for: admin.system.users
2020-10-02T20:09:57.170+0000 D1 STORAGE  [signalProcessingThread] Deregistering collection movies.movies with UUID 77ac2f8b-2a61-4dbb-9b9a-35b7e6a5197a
2020-10-02T20:09:57.170+0000 D1 STORAGE  [signalProcessingThread] ~WiredTigerRecordStore for: movies.movies
2020-10-02T20:09:57.170+0000 D1 STORAGE  [signalProcessingThread] Deregistering collection admin.system.version with UUID 0d876cab-c7c4-40a4-90c6-c23dd6e3b179
2020-10-02T20:09:57.170+0000 D1 STORAGE  [signalProcessingThread] ~WiredTigerRecordStore for: admin.system.version
2020-10-02T20:09:57.170+0000 D1 STORAGE  [signalProcessingThread] Deregistering collection config.system.sessions with UUID fbf72919-58ff-41f2-ba34-93b2acda7d24
2020-10-02T20:09:57.170+0000 D1 STORAGE  [signalProcessingThread] ~WiredTigerRecordStore for: config.system.sessions
2020-10-02T20:09:57.170+0000 D1 STORAGE  [signalProcessingThread] Deregistering collection test.inventory with UUID 66dd6c2e-e14a-4284-a2a5-a7574ac1fd74
2020-10-02T20:09:57.170+0000 D1 STORAGE  [signalProcessingThread] ~WiredTigerRecordStore for: test.inventory
2020-10-02T20:09:57.170+0000 D1 STORAGE  [signalProcessingThread] Deregistering collection local.startup_log with UUID 97fc5f31-0917-4d2e-a65c-606750d317e5
2020-10-02T20:09:57.170+0000 D1 STORAGE  [signalProcessingThread] ~WiredTigerRecordStore for: local.startup_log
2020-10-02T20:09:57.170+0000 D1 STORAGE  [signalProcessingThread] ~WiredTigerRecordStore for: _mdb_catalog
2020-10-02T20:09:57.170+0000 I  STORAGE  [signalProcessingThread] Timestamp monitor shutting down
2020-10-02T20:09:57.170+0000 D2 -        [signalProcessingThread] Stopping periodic job TimestampMonitor
2020-10-02T20:09:57.170+0000 I  STORAGE  [signalProcessingThread] WiredTigerKVEngine shutting down
2020-10-02T20:09:57.170+0000 I  STORAGE  [signalProcessingThread] Shutting down session sweeper thread
2020-10-02T20:09:57.170+0000 D1 STORAGE  [WTIdleSessionSweeper] stopping WTIdleSessionSweeper thread
2020-10-02T20:09:57.171+0000 I  STORAGE  [signalProcessingThread] Finished shutting down session sweeper thread
2020-10-02T20:09:57.171+0000 I  STORAGE  [signalProcessingThread] Shutting down journal flusher thread
2020-10-02T20:09:57.244+0000 D1 STORAGE  [WTJournalFlusher] stopping WTJournalFlusher thread
2020-10-02T20:09:57.244+0000 I  STORAGE  [signalProcessingThread] Finished shutting down journal flusher thread
2020-10-02T20:09:57.244+0000 I  STORAGE  [signalProcessingThread] Shutting down checkpoint thread
2020-10-02T20:09:57.244+0000 D1 STORAGE  [WTCheckpointThread] stopping WTCheckpointThread thread
2020-10-02T20:09:57.244+0000 I  STORAGE  [signalProcessingThread] Finished shutting down checkpoint thread
2020-10-02T20:09:57.244+0000 D2 RECOVERY [signalProcessingThread] Shutdown timestamps. StableTimestamp: 0 Initial data timestamp: 0
2020-10-02T20:09:57.254+0000 I  STORAGE  [signalProcessingThread] shutdown: removing fs lock...
2020-10-02T20:09:57.254+0000 I  CONTROL  [signalProcessingThread] now exiting
2020-10-02T20:09:57.254+0000 I  CONTROL  [signalProcessingThread] shutting down with code:0
